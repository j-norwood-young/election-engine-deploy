(function(q){typeof define=="function"&&define.amd?define(q):q()})(function(){"use strict";var Hs=Object.defineProperty;var Vs=(q,Se,Ve)=>Se in q?Hs(q,Se,{enumerable:!0,configurable:!0,writable:!0,value:Ve}):q[Se]=Ve;var xa=(q,Se,Ve)=>(Vs(q,typeof Se!="symbol"?Se+"":Se,Ve),Ve);function q(){}const Se=t=>t;function Ve(t){return t()}function Ba(){return Object.create(null)}function Te(t){t.forEach(Ve)}function Mt(t){return typeof t=="function"}function be(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}function vr(t){return Object.keys(t).length===0}function za(t){const e=typeof t=="string"&&t.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);return e?[parseFloat(e[1]),e[2]||"px"]:[t,"px"]}const Wa=typeof window<"u";let Za=Wa?()=>window.performance.now():()=>Date.now(),la=Wa?t=>requestAnimationFrame(t):q;const Qe=new Set;function Ka(t){Qe.forEach(e=>{e.c(t)||(Qe.delete(e),e.f())}),Qe.size!==0&&la(Ka)}function qa(t){let e;return Qe.size===0&&la(Ka),{promise:new Promise(a=>{Qe.add(e={c:t,f:a})}),abort(){Qe.delete(e)}}}function m(t,e){t.appendChild(e)}function ja(t){if(!t)return document;const e=t.getRootNode?t.getRootNode():t.ownerDocument;return e&&e.host?e:t.ownerDocument}function yr(t){const e=I("style");return e.textContent="/* empty */",br(ja(t),e),e.sheet}function br(t,e){return m(t.head||t,e),e.sheet}function R(t,e,a){t.insertBefore(e,a||null)}function O(t){t.parentNode&&t.parentNode.removeChild(t)}function pe(t,e){for(let a=0;a<t.length;a+=1)t[a]&&t[a].d(e)}function I(t){return document.createElement(t)}function L(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function U(t){return document.createTextNode(t)}function F(){return U(" ")}function Pe(){return U("")}function $(t,e,a,n){return t.addEventListener(e,a,n),()=>t.removeEventListener(e,a,n)}function d(t,e,a){a==null?t.removeAttribute(e):t.getAttribute(e)!==a&&t.setAttribute(e,a)}function Nr(t){return Array.from(t.childNodes)}function X(t,e){e=""+e,t.data!==e&&(t.data=e)}function ae(t,e,a,n){a==null?t.style.removeProperty(e):t.style.setProperty(e,a,"")}let Ft;function Ar(){if(Ft===void 0){Ft=!1;try{typeof window<"u"&&window.parent&&window.parent.document}catch{Ft=!0}}return Ft}function hr(t,e){getComputedStyle(t).position==="static"&&(t.style.position="relative");const n=I("iframe");n.setAttribute("style","display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;"),n.setAttribute("aria-hidden","true"),n.tabIndex=-1;const i=Ar();let r;return i?(n.src="data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}<\/script>",r=$(window,"message",l=>{l.source===n.contentWindow&&e()})):(n.src="about:blank",n.onload=()=>{r=$(n.contentWindow,"resize",e),e()}),m(t,n),()=>{(i||r&&n.contentWindow)&&r(),O(n)}}function G(t,e,a){t.classList.toggle(e,!!a)}function mr(t,e,{bubbles:a=!1,cancelable:n=!1}={}){return new CustomEvent(t,{detail:e,bubbles:a,cancelable:n})}const Dt=new Map;let wt=0;function Er(t){let e=5381,a=t.length;for(;a--;)e=(e<<5)-e^t.charCodeAt(a);return e>>>0}function gr(t,e){const a={stylesheet:yr(e),rules:{}};return Dt.set(t,a),a}function Ja(t,e,a,n,i,r,l,o=0){const s=16.666/n;let p=`{
`;for(let b=0;b<=1;b+=s){const y=e+(a-e)*r(b);p+=b*100+`%{${l(y,1-y)}}
`}const _=p+`100% {${l(a,1-a)}}
}`,f=`__svelte_${Er(_)}_${o}`,c=ja(t),{stylesheet:u,rules:v}=Dt.get(c)||gr(c,t);v[f]||(v[f]=!0,u.insertRule(`@keyframes ${f} ${_}`,u.cssRules.length));const N=t.style.animation||"";return t.style.animation=`${N?`${N}, `:""}${f} ${n}ms linear ${i}ms 1 both`,wt+=1,f}function oa(t,e){const a=(t.style.animation||"").split(", "),n=a.filter(e?r=>r.indexOf(e)<0:r=>r.indexOf("__svelte")===-1),i=a.length-n.length;i&&(t.style.animation=n.join(", "),wt-=i,wt||Cr())}function Cr(){la(()=>{wt||(Dt.forEach(t=>{const{ownerNode:e}=t.stylesheet;e&&O(e)}),Dt.clear())})}let yt;function bt(t){yt=t}function Ir(){if(!yt)throw new Error("Function called outside component initialization");return yt}function Xe(t){Ir().$$.on_mount.push(t)}function Or(t,e){const a=t.$$.callbacks[e.type];a&&a.slice().forEach(n=>n.call(this,e))}const $e=[],De=[];let et=[];const sa=[],Rr=Promise.resolve();let pa=!1;function Sr(){pa||(pa=!0,Rr.then(Qa))}function Ge(t){et.push(t)}function Ue(t){sa.push(t)}const _a=new Set;let tt=0;function Qa(){if(tt!==0)return;const t=yt;do{try{for(;tt<$e.length;){const e=$e[tt];tt++,bt(e),Tr(e.$$)}}catch(e){throw $e.length=0,tt=0,e}for(bt(null),$e.length=0,tt=0;De.length;)De.pop()();for(let e=0;e<et.length;e+=1){const a=et[e];_a.has(a)||(_a.add(a),a())}et.length=0}while($e.length);for(;sa.length;)sa.pop()();pa=!1,_a.clear(),bt(t)}function Tr(t){if(t.fragment!==null){t.update(),Te(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(Ge)}}function Pr(t){const e=[],a=[];et.forEach(n=>t.indexOf(n)===-1?e.push(n):a.push(n)),a.forEach(n=>n()),et=e}let Nt;function Xa(){return Nt||(Nt=Promise.resolve(),Nt.then(()=>{Nt=null})),Nt}function Lt(t,e,a){t.dispatchEvent(mr(`${e?"intro":"outro"}${a}`))}const kt=new Set;let Ye;function ge(){Ye={r:0,c:[],p:Ye}}function Ce(){Ye.r||Te(Ye.c),Ye=Ye.p}function k(t,e){t&&t.i&&(kt.delete(t),t.i(e))}function z(t,e,a,n){if(t&&t.o){if(kt.has(t))return;kt.add(t),Ye.c.push(()=>{kt.delete(t),n&&(a&&t.d(1),n())}),t.o(e)}else n&&n()}const $a={duration:0};function Mr(t,e,a){const n={direction:"in"};let i=e(t,a,n),r=!1,l,o,s=0;function p(){l&&oa(t,l)}function _(){const{delay:c=0,duration:u=300,easing:v=Se,tick:N=q,css:b}=i||$a;b&&(l=Ja(t,0,1,u,c,v,b,s++)),N(0,1);const y=Za()+c,E=y+u;o&&o.abort(),r=!0,Ge(()=>Lt(t,!0,"start")),o=qa(A=>{if(r){if(A>=E)return N(1,0),Lt(t,!0,"end"),p(),r=!1;if(A>=y){const h=v((A-y)/u);N(h,1-h)}}return r})}let f=!1;return{start(){f||(f=!0,oa(t),Mt(i)?(i=i(n),Xa().then(_)):_())},invalidate(){f=!1},end(){r&&(p(),r=!1)}}}function Fr(t,e,a){const n={direction:"out"};let i=e(t,a,n),r=!0,l;const o=Ye;o.r+=1;let s;function p(){const{delay:_=0,duration:f=300,easing:c=Se,tick:u=q,css:v}=i||$a;v&&(l=Ja(t,1,0,f,_,c,v));const N=Za()+_,b=N+f;Ge(()=>Lt(t,!1,"start")),"inert"in t&&(s=t.inert,t.inert=!0),qa(y=>{if(r){if(y>=b)return u(0,1),Lt(t,!1,"end"),--o.r||Te(o.c),!1;if(y>=N){const E=c((y-N)/f);u(1-E,E)}}return r})}return Mt(i)?Xa().then(()=>{i=i(n),p()}):p(),{end(_){_&&"inert"in t&&(t.inert=s),_&&i.tick&&i.tick(1,0),r&&(l&&oa(t,l),r=!1)}}}function j(t){return(t==null?void 0:t.length)!==void 0?t:Array.from(t)}function xe(t,e,a){const n=t.$$.props[e];n!==void 0&&(t.$$.bound[n]=a,a(t.$$.ctx[n]))}function Ie(t){t&&t.c()}function Ne(t,e,a){const{fragment:n,after_update:i}=t.$$;n&&n.m(e,a),Ge(()=>{const r=t.$$.on_mount.map(Ve).filter(Mt);t.$$.on_destroy?t.$$.on_destroy.push(...r):Te(r),t.$$.on_mount=[]}),i.forEach(Ge)}function Ae(t,e){const a=t.$$;a.fragment!==null&&(Pr(a.after_update),Te(a.on_destroy),a.fragment&&a.fragment.d(e),a.on_destroy=a.fragment=null,a.ctx=[])}function Dr(t,e){t.$$.dirty[0]===-1&&($e.push(t),Sr(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function he(t,e,a,n,i,r,l=null,o=[-1]){const s=yt;bt(t);const p=t.$$={fragment:null,ctx:[],props:r,update:q,not_equal:i,bound:Ba(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(s?s.$$.context:[])),callbacks:Ba(),dirty:o,skip_bound:!1,root:e.target||s.$$.root};l&&l(p.root);let _=!1;if(p.ctx=a?a(t,e.props||{},(f,c,...u)=>{const v=u.length?u[0]:c;return p.ctx&&i(p.ctx[f],p.ctx[f]=v)&&(!p.skip_bound&&p.bound[f]&&p.bound[f](v),_&&Dr(t,f)),c}):[],p.update(),_=!0,Te(p.before_update),p.fragment=n?n(p.ctx):!1,e.target){if(e.hydrate){const f=Nr(e.target);p.fragment&&p.fragment.l(f),f.forEach(O)}else p.fragment&&p.fragment.c();e.intro&&k(t.$$.fragment),Ne(t,e.target,e.anchor),Qa()}bt(s)}class me{constructor(){xa(this,"$$");xa(this,"$$set")}$destroy(){Ae(this,1),this.$destroy=q}$on(e,a){if(!Mt(a))return q;const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(a),()=>{const i=n.indexOf(a);i!==-1&&n.splice(i,1)}}$set(e){this.$$set&&!vr(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const wr="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(wr);const Lr={event_id:146,event_name:"22 Apr 2009 National Election",registered_voters:23181997,spoilt_votes:239237,special_votes:743609,total_votes_cast:17919966,total_valid_votes:17680729,vd_count:19734,vd_captured:19734,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:11650748,vote_perc:65.89517887,ballot_type:"National",independent:!1,seats:264},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:2945829,vote_perc:16.66124174,ballot_type:"National",independent:!1,seats:67},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:1311027,vote_perc:7.415005343,ballot_type:"National",independent:!1,seats:30},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:804260,vote_perc:4.54879434,ballot_type:"National",independent:!1,seats:18},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:162915,vote_perc:.921426939,ballot_type:"National",independent:!1,seats:4},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:149680,vote_perc:.846571428,ballot_type:"National",independent:!1,seats:4},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:146796,vote_perc:.830259884,ballot_type:"National",independent:!1,seats:4},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:142658,vote_perc:.806855871,ballot_type:"National",independent:!1,seats:3},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:66086,vote_perc:.373774181,ballot_type:"National",independent:!1,seats:2},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:48530,vote_perc:.274479633,ballot_type:"National",independent:!1,seats:1},{party_id:31,party_name:"MINORITY FRONT",party_abbreviation:"MF",votes:43474,vote_perc:.245883527,ballot_type:"National",independent:!1,seats:1},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:38245,vote_perc:.216308954,ballot_type:"National",independent:!1,seats:1},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:35867,vote_perc:.202859283,ballot_type:"National",independent:!1,seats:1},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:29747,vote_perc:.168245325,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:25947,vote_perc:.146752999,ballot_type:"National",independent:!1,seats:0}],provincial_results:[{province_id:1,province_name:"Eastern Cape",registered_voters:3056559,spoilt_votes:34455,special_votes:96499,percent_voter_turnout:76.69,total_votes_cast:2344098,total_valid_votes:2309643,vd_count:4483,vd_captured:4483,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1609926,vote_perc:69.704538753,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:307437,vote_perc:13.311018196,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:230187,vote_perc:9.966345448,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:91227,vote_perc:3.949831208,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:13750,vote_perc:.595330101,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:11925,vote_perc:.51631356,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:10502,vote_perc:.454702307,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:6029,vote_perc:.261036013,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:5490,vote_perc:.237699073,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:4614,vote_perc:.199771133,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:2748,vote_perc:.118979427,ballot_type:"National",independent:!1,seats:0}]},{province_id:2,province_name:"Free State",registered_voters:1388588,spoilt_votes:17269,special_votes:65095,percent_voter_turnout:76.99,total_votes_cast:1069127,total_valid_votes:1051858,vd_count:1264,vd_captured:1264,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:756287,vote_perc:71.900104387,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:127259,vote_perc:12.098496185,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:116852,vote_perc:11.109104081,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:16929,vote_perc:1.609437776,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:7410,vote_perc:.704467713,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:3927,vote_perc:.373339367,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:3408,vote_perc:.323998106,ballot_type:"National",independent:!1,seats:0},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:3095,vote_perc:.294241238,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:3091,vote_perc:.293860958,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:3003,vote_perc:.28549481,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:2260,vote_perc:.214857899,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:1797,vote_perc:.170840551,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:1786,vote_perc:.169794782,ballot_type:"National",independent:!1,seats:0}]},{province_id:3,province_name:"Gauteng",registered_voters:5555159,spoilt_votes:46086,special_votes:195941,percent_voter_turnout:79.06,total_votes_cast:4391699,total_valid_votes:4345613,vd_count:2296,vd_captured:2296,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:2814277,vote_perc:64.761335167,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:924211,vote_perc:21.267678461,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:337931,vote_perc:7.776371251,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:64166,vote_perc:1.476569589,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:59803,vote_perc:1.376169484,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:38738,vote_perc:.891427746,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:25023,vote_perc:.575822099,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:17335,vote_perc:.398908048,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:12671,vote_perc:.291581418,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:9037,vote_perc:.207956852,ballot_type:"National",independent:!1,seats:0},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:8322,vote_perc:.191503477,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:6461,vote_perc:.148678679,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:6392,vote_perc:.147090871,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:5777,vote_perc:.132938667,ballot_type:"National",independent:!1,seats:0}]},{province_id:4,province_name:"KwaZulu-Natal",registered_voters:4475217,spoilt_votes:47092,special_votes:53335,percent_voter_turnout:79.87,total_votes_cast:3574326,total_valid_votes:3527234,vd_count:4187,vd_captured:4187,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:2256248,vote_perc:63.966496127,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:723940,vote_perc:20.524297509,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:364518,vote_perc:10.334386661,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:54611,vote_perc:1.548266999,ballot_type:"National",independent:!1,seats:0},{party_id:31,party_name:"MINORITY FRONT",party_abbreviation:"MF",votes:38944,vote_perc:1.104094597,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:20851,vote_perc:.591143088,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:7917,vote_perc:.224453495,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:7529,vote_perc:.213453375,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:7086,vote_perc:.200893958,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:6600,vote_perc:.187115456,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:6322,vote_perc:.179233927,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:6261,vote_perc:.177504526,ballot_type:"National",independent:!1,seats:0},{party_id:284,party_name:"NATIONAL DEMOCRATIC CONVENTION",party_abbreviation:"NADECO",votes:4385,vote_perc:.124318375,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4199,vote_perc:.119045121,ballot_type:"National",independent:!1,seats:0}]},{province_id:5,province_name:"Mpumalanga",registered_voters:1696705,spoilt_votes:20583,special_votes:91759,percent_voter_turnout:80.38,total_votes_cast:1363836,total_valid_votes:1343253,vd_count:1377,vd_captured:1377,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1152698,vote_perc:85.813915919,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:102039,vote_perc:7.596409612,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:38802,vote_perc:2.888659098,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:11151,vote_perc:.8301489,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:7286,vote_perc:.542414571,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:6880,vote_perc:.512189439,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4421,vote_perc:.329126382,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:3509,vote_perc:.261231503,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:3159,vote_perc:.235175354,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:2915,vote_perc:.217010496,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:2698,vote_perc:.200855684,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:1619,vote_perc:.1205283,ballot_type:"National",independent:!1,seats:0}]},{province_id:6,province_name:"Northern Cape",registered_voters:554900,spoilt_votes:6988,special_votes:28065,percent_voter_turnout:75.96,total_votes_cast:421490,total_valid_votes:414502,vd_count:626,vd_captured:626,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:253264,vote_perc:61.100790829,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:66082,vote_perc:15.942504499,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:54215,vote_perc:13.079550883,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:19584,vote_perc:4.724705792,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:4957,vote_perc:1.195892903,ballot_type:"National",independent:!1,seats:0},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:4559,vote_perc:1.099874066,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:4088,vote_perc:.986243733,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:1759,vote_perc:.424364659,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:1244,vote_perc:.300119179,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:727,vote_perc:.175391192,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:614,vote_perc:.148129563,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:611,vote_perc:.147405803,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:503,vote_perc:.12135044,ballot_type:"National",independent:!1,seats:0},{party_id:451,party_name:"CHRISTIAN DEMOCRATIC ALLIANCE",party_abbreviation:"CDA",votes:426,vote_perc:.102773931,ballot_type:"National",independent:!1,seats:0}]},{province_id:7,province_name:"Limpopo",registered_voters:2256073,spoilt_votes:22956,special_votes:74008,percent_voter_turnout:69.62,total_votes_cast:1570592,total_valid_votes:1547636,vd_count:2456,vd_captured:2456,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1319659,vote_perc:85.269339819,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:111651,vote_perc:7.214293283,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:57418,vote_perc:3.710045515,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:9853,vote_perc:.636648411,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:8374,vote_perc:.541083304,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:7352,vote_perc:.475047104,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:5697,vote_perc:.368109814,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:5109,vote_perc:.330116384,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4754,vote_perc:.307178174,ballot_type:"National",independent:!1,seats:0},{party_id:458,party_name:"NEW VISION PARTY",party_abbreviation:"NVP",votes:4313,vote_perc:.278683101,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:2260,vote_perc:.14602917,ballot_type:"National",independent:!1,seats:0},{party_id:287,party_name:"UNITED INDEPENDENT FRONT",party_abbreviation:"UIF",votes:1597,vote_perc:.103189639,ballot_type:"National",independent:!1,seats:0}]},{province_id:8,province_name:"North West",registered_voters:1564357,spoilt_votes:22290,special_votes:85139,percent_voter_turnout:72.6,total_votes_cast:1135701,total_valid_votes:1113411,vd_count:1503,vd_captured:1503,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:822166,vote_perc:73.842094249,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:96850,vote_perc:8.698494985,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:93898,vote_perc:8.43336378,ballot_type:"National",independent:!1,seats:0},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:43855,vote_perc:3.938797084,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:15986,vote_perc:1.435768104,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:8239,vote_perc:.739978319,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:5768,vote_perc:.518047693,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:4891,vote_perc:.439280733,ballot_type:"National",independent:!1,seats:0},{party_id:479,party_name:"MOVEMENT DEMOCRATIC PARTY",party_abbreviation:"MDP",votes:4405,vote_perc:.395631083,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:3742,vote_perc:.336084339,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:2797,vote_perc:.25121002,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:2727,vote_perc:.244923034,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:1674,vote_perc:.150348793,ballot_type:"National",independent:!1,seats:0}]},{province_id:9,province_name:"Western Cape",registered_voters:2634439,spoilt_votes:21518,special_votes:53768,percent_voter_turnout:77.78,total_votes_cast:2049097,total_valid_votes:2027579,vd_count:1542,vd_captured:1542,party_ballot_results:[{party_id:52,party_name:"DEMOCRATIC ALLIANCE/DEMOKRATIESE ALLIANSIE",party_abbreviation:"DA",votes:989132,vote_perc:48.783894487,ballot_type:"National",independent:!1,seats:0},{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:666223,vote_perc:32.858053866,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:183763,vote_perc:9.063173371,ballot_type:"National",independent:!1,seats:0},{party_id:249,party_name:"INDEPENDENT DEMOCRATS",party_abbreviation:"ID",votes:91001,vote_perc:4.488160511,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:32849,vote_perc:1.6201095,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF Plus",votes:17506,vote_perc:.863394225,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:15642,vote_perc:.771461926,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:9808,vote_perc:.483729611,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:4877,vote_perc:.240533168,ballot_type:"National",independent:!1,seats:0},{party_id:451,party_name:"CHRISTIAN DEMOCRATIC ALLIANCE",party_abbreviation:"CDA",votes:3590,vote_perc:.177058452,ballot_type:"National",independent:!1,seats:0}]}]},kr={event_id:291,event_name:"2014 National Election",registered_voters:25388082,spoilt_votes:252274,special_votes:324909,total_votes_cast:18654771,total_valid_votes:18402497,vd_count:22263,vd_captured:22263,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:11436921,vote_perc:62.148745358,ballot_type:"National",independent:!1,seats:249},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:4091584,vote_perc:22.233852286,ballot_type:"National",independent:!1,seats:89},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:1169259,vote_perc:6.353806225,ballot_type:"National",independent:!1,seats:25},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:441854,vote_perc:2.401054596,ballot_type:"National",independent:!1,seats:10},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:288742,vote_perc:1.569037071,ballot_type:"National",independent:!1,seats:6},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:184636,vote_perc:1.003320365,ballot_type:"National",independent:!1,seats:4},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:165715,vote_perc:.900502796,ballot_type:"National",independent:!1,seats:4},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:123235,vote_perc:.669664557,ballot_type:"National",independent:!1,seats:3},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:104039,vote_perc:.565352626,ballot_type:"National",independent:!1,seats:3},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:97642,vote_perc:.530591039,ballot_type:"National",independent:!1,seats:3},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:52350,vote_perc:.284472265,ballot_type:"National",independent:!1,seats:2},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:37784,vote_perc:.205319963,ballot_type:"National",independent:!1,seats:1},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:30676,vote_perc:.16669477,ballot_type:"National",independent:!1,seats:1},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:25976,vote_perc:.141154757,ballot_type:"National",independent:!1,seats:0},{party_id:31,party_name:"MINORITY FRONT",party_abbreviation:"MF",votes:22589,vote_perc:.122749646,ballot_type:"National",independent:!1,seats:0},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:21744,vote_perc:.118157878,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:20421,vote_perc:.110968636,ballot_type:"National",independent:!1,seats:0}],provincial_results:[{province_id:1,province_name:"Eastern Cape",registered_voters:3240059,spoilt_votes:35058,special_votes:48497,percent_voter_turnout:4.49,total_votes_cast:2278555,total_valid_votes:2243497,vd_count:4615,vd_captured:4615,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1587338,vote_perc:70.752847006,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:356050,vote_perc:15.870313176,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:118645,vote_perc:5.28839575,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:84783,vote_perc:3.779055644,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:26580,vote_perc:1.184757546,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:17514,vote_perc:.78065627,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:9649,vote_perc:.430087493,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:8771,vote_perc:.390952161,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:8016,vote_perc:.357299341,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4538,vote_perc:.202273504,ballot_type:"National",independent:!1,seats:0},{party_id:965,party_name:"KINGDOM GOVERNANCE MOVEMENT",party_abbreviation:"KGM",votes:3576,vote_perc:.159394017,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:3559,vote_perc:.158636272,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:2501,vote_perc:.111477751,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:2323,vote_perc:.103543709,ballot_type:"National",independent:!1,seats:0}]},{province_id:2,province_name:"Free State",registered_voters:1449488,spoilt_votes:16690,special_votes:28722,percent_voter_turnout:2.07,total_votes_cast:1051027,total_valid_votes:1034337,vd_count:1523,vd_captured:1523,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:721126,vote_perc:69.718670027,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:167972,vote_perc:16.23958149,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:81559,vote_perc:7.885147684,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:19837,vote_perc:1.917846891,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:14613,vote_perc:1.412789062,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:7972,vote_perc:.770735263,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:5128,vote_perc:.495776522,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:2380,vote_perc:.230099088,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:2093,vote_perc:.202351845,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:2058,vote_perc:.198968035,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:1989,vote_perc:.192297095,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:1405,vote_perc:.135835806,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:1177,vote_perc:.1137927,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:1039,vote_perc:.10045082,ballot_type:"National",independent:!1,seats:0}]},{province_id:3,province_name:"Gauteng",registered_voters:6063739,spoilt_votes:46762,special_votes:48614,percent_voter_turnout:9.14,total_votes_cast:4638981,total_valid_votes:4592219,vd_count:2647,vd_captured:2647,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:2522012,vote_perc:54.919244923,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:1309862,vote_perc:28.523509005,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:471074,vote_perc:10.258090914,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:58122,vote_perc:1.265662635,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:37785,vote_perc:.822804836,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:30761,vote_perc:.669850458,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:25541,vote_perc:.556179921,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:23203,vote_perc:.505267715,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:22404,vote_perc:.487868719,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:22403,vote_perc:.487846943,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:19943,vote_perc:.434278069,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:11077,vote_perc:.241212364,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:7509,vote_perc:.163515721,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:5844,vote_perc:.127258739,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:5277,vote_perc:.114911767,ballot_type:"National",independent:!1,seats:0}]},{province_id:4,province_name:"KwaZulu-Natal",registered_voters:5117131,spoilt_votes:60938,special_votes:54598,percent_voter_turnout:7.75,total_votes_cast:3935771,total_valid_votes:3874833,vd_count:4746,vd_captured:4746,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:2530827,vote_perc:65.314479359,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:517461,vote_perc:13.35440779,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:393949,vote_perc:10.166863965,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:249118,vote_perc:6.429128688,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:76384,vote_perc:1.971284956,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:19309,vote_perc:.49831825,ballot_type:"National",independent:!1,seats:0},{party_id:31,party_name:"MINORITY FRONT",party_abbreviation:"MF",votes:18924,vote_perc:.488382338,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:15406,vote_perc:.397591328,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:9687,vote_perc:.249997871,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:7232,vote_perc:.186640302,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:5553,vote_perc:.143309402,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4390,vote_perc:.113295205,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:4288,vote_perc:.110662834,ballot_type:"National",independent:!1,seats:0}]},{province_id:5,province_name:"Mpumalanga",registered_voters:1860834,spoilt_votes:22862,special_votes:41277,percent_voter_turnout:2.77,total_votes_cast:1408269,total_valid_votes:1385407,vd_count:1678,vd_captured:1678,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1091642,vote_perc:78.795761823,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:139158,vote_perc:10.044557303,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:85203,vote_perc:6.150033889,ballot_type:"National",independent:!1,seats:0},{party_id:651,party_name:"BUSHBUCKRIDGE RESIDENTS ASSOCIATION",party_abbreviation:"BRA",votes:12208,vote_perc:.881185096,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:11707,vote_perc:.845022437,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:9312,vote_perc:.672149051,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:7072,vote_perc:.510463712,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:5173,vote_perc:.373392079,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4269,vote_perc:.308140496,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:4143,vote_perc:.299045696,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:3931,vote_perc:.283743333,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:2640,vote_perc:.190557721,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:1995,vote_perc:.144001005,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:1738,vote_perc:.125450499,ballot_type:"National",independent:!1,seats:0}]},{province_id:6,province_name:"Northern Cape",registered_voters:601080,spoilt_votes:7649,special_votes:22785,percent_voter_turnout:.87,total_votes_cast:443714,total_valid_votes:436065,vd_count:694,vd_captured:694,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:278540,vote_perc:63.875798333,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:101882,vote_perc:23.363948035,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:22083,vote_perc:5.06415328,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:14452,vote_perc:3.314184812,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:5761,vote_perc:1.321133317,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:3805,vote_perc:.872576336,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:2436,vote_perc:.558632314,ballot_type:"National",independent:!1,seats:0},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:1461,vote_perc:.335041794,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:936,vote_perc:.214646899,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:681,vote_perc:.156169378,ballot_type:"National",independent:!1,seats:0},{party_id:957,party_name:"PATRIOTIC ALLIANCE",party_abbreviation:"PA",votes:591,vote_perc:.135530254,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:478,vote_perc:.109616686,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:451,vote_perc:.103424948,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:450,vote_perc:.103195625,ballot_type:"National",independent:!1,seats:0}]},{province_id:7,province_name:"Limpopo",registered_voters:2438280,spoilt_votes:20817,special_votes:26418,percent_voter_turnout:3.04,total_votes_cast:1543986,total_valid_votes:1523169,vd_count:3065,vd_captured:3065,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1202905,vote_perc:78.973836784,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:156488,vote_perc:10.273843546,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:100562,vote_perc:6.602156425,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:12478,vote_perc:.819213101,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:10269,vote_perc:.674186515,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:6611,vote_perc:.434029317,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:6306,vote_perc:.414005275,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:4841,vote_perc:.31782422,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:4340,vote_perc:.284932269,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4044,vote_perc:.265499101,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:3949,vote_perc:.259262104,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:3692,vote_perc:.242389387,ballot_type:"National",independent:!1,seats:0}]},{province_id:8,province_name:"North West",registered_voters:1669349,spoilt_votes:21095,special_votes:25982,percent_voter_turnout:2.26,total_votes_cast:1147786,total_valid_votes:1126691,vd_count:1716,vd_captured:1716,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:763804,vote_perc:67.791790296,ballot_type:"National",independent:!1,seats:0},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:141902,vote_perc:12.594580058,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:141150,vote_perc:12.527835937,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:18120,vote_perc:1.608249289,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:10845,vote_perc:.962553176,ballot_type:"National",independent:!1,seats:0},{party_id:2,party_name:"UNITED CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"UCDP",votes:10109,vote_perc:.897229143,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:8540,vote_perc:.757971795,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:8421,vote_perc:.747409893,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:5311,vote_perc:.471380352,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:4690,vote_perc:.416263199,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:3321,vote_perc:.294756948,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:1708,vote_perc:.151594359,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:1519,vote_perc:.134819573,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:1326,vote_perc:.117689766,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:1297,vote_perc:.115115857,ballot_type:"National",independent:!1,seats:0}]},{province_id:9,province_name:"Western Cape",registered_voters:2941333,spoilt_votes:20089,special_votes:28016,percent_voter_turnout:4.31,total_votes_cast:2188236,total_valid_votes:2168147,vd_count:1578,vd_captured:1578,party_ballot_results:[{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:1241424,vote_perc:57.257372309,ballot_type:"National",independent:!1,seats:0},{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:737219,vote_perc:34.002260917,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:50280,vote_perc:2.319030951,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:25318,vote_perc:1.167725251,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:23243,vote_perc:1.072021408,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:13833,vote_perc:.638010246,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:13052,vote_perc:.601988703,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"NO_ABBR",votes:11376,vote_perc:.524687671,ballot_type:"National",independent:!1,seats:0},{party_id:45,party_name:"INDEPENDENT CIVIC ORGANISATION OF SOUTH AFRICA",party_abbreviation:"ICOSA",votes:11124,vote_perc:.513064843,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:9927,vote_perc:.457856409,ballot_type:"National",independent:!1,seats:0},{party_id:957,party_name:"PATRIOTIC ALLIANCE",party_abbreviation:"PA",votes:7996,vote_perc:.368794182,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:6987,vote_perc:.322256747,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:3963,vote_perc:.182782809,ballot_type:"National",independent:!1,seats:0},{party_id:613,party_name:"UBUNTU PARTY",party_abbreviation:"UBUNTU",votes:2211,vote_perc:.10197648,ballot_type:"National",independent:!1,seats:0}]},{province_id:99,province_name:"Out of Country",registered_voters:6789,spoilt_votes:314,special_votes:0,percent_voter_turnout:.04,total_votes_cast:18446,total_valid_votes:18132,vd_count:1,vd_captured:1,party_ballot_results:[{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:15311,vote_perc:84.441870726,ballot_type:"National",independent:!1,seats:0},{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1508,vote_perc:8.316787999,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:328,vote_perc:1.808956541,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:255,vote_perc:1.406353408,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:198,vote_perc:1.091992058,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:184,vote_perc:1.014780499,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:128,vote_perc:.70593426,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:52,vote_perc:.286785793,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:46,vote_perc:.253695125,ballot_type:"National",independent:!1,seats:0}]}]},Gr={event_id:699,event_name:"2019 NATIONAL ELECTION",registered_voters:26756649,spoilt_votes:235472,special_votes:570673,total_votes_cast:17672851,total_valid_votes:17437379,vd_count:22925,vd_captured:22924,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:10026475,vote_perc:57.499897204,ballot_type:"National",independent:!1,seats:230},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:3622531,vote_perc:20.774515482,ballot_type:"National",independent:!1,seats:84},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:1882480,vote_perc:10.795659141,ballot_type:"National",independent:!1,seats:44},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:588839,vote_perc:3.376877913,ballot_type:"National",independent:!1,seats:14},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:414864,vote_perc:2.379164896,ballot_type:"National",independent:!1,seats:10},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:146262,vote_perc:.838784315,ballot_type:"National",independent:!1,seats:4},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:78030,vote_perc:.447486976,ballot_type:"National",independent:!1,seats:2},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:76830,vote_perc:.440605208,ballot_type:"National",independent:!1,seats:2},{party_id:1368,party_name:"GOOD",party_abbreviation:"GOOD",votes:70408,vote_perc:.403776279,ballot_type:"National",independent:!1,seats:2},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:61220,vote_perc:.351084873,ballot_type:"National",independent:!1,seats:2},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:48107,vote_perc:.275884352,ballot_type:"National",independent:!1,seats:2},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:47461,vote_perc:.272179666,ballot_type:"National",independent:!1,seats:2},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:32677,vote_perc:.187396282,ballot_type:"National",independent:!1,seats:1},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"ALJAMA",votes:31468,vote_perc:.180462901,ballot_type:"National",independent:!1,seats:1},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:26262,vote_perc:.150607497,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:24439,vote_perc:.140152944,ballot_type:"National",independent:!1,seats:0},{party_id:1146,party_name:"BLACK FIRST LAND FIRST",party_abbreviation:"BLF",votes:19796,vote_perc:.113526236,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:19593,vote_perc:.11236207,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:18834,vote_perc:.108009352,ballot_type:"National",independent:!1,seats:0}],provincial_results:[{province_id:1,province_name:"Eastern Cape",registered_voters:3363161,spoilt_votes:32291,special_votes:86329,percent_voter_turnout:3.85,total_votes_cast:2052818,total_valid_votes:2020527,vd_count:4791,vd_captured:4790,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1399455,vote_perc:69.261880688,ballot_type:"National",independent:!1,seats:18},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:303309,vote_perc:15.011380694,ballot_type:"National",independent:!1,seats:4},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:155899,vote_perc:7.715759304,ballot_type:"National",independent:!1,seats:2},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:46258,vote_perc:2.289402715,ballot_type:"National",independent:!1,seats:1},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:27935,vote_perc:1.382560094,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:17699,vote_perc:.875959589,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:9947,vote_perc:.492297307,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:8134,vote_perc:.402568241,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:7844,vote_perc:.38821555,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:4902,vote_perc:.242609973,ballot_type:"National",independent:!1,seats:0},{party_id:1333,party_name:"ALLIANCE FOR TRANSFORMATION FOR ALL",party_abbreviation:"ATA",votes:4577,vote_perc:.22652506,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:4448,vote_perc:.220140587,ballot_type:"National",independent:!1,seats:0},{party_id:1368,party_name:"GOOD",party_abbreviation:"GOOD",votes:4445,vote_perc:.219992111,ballot_type:"National",independent:!1,seats:0},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:4427,vote_perc:.219101254,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:3229,vote_perc:.159809792,ballot_type:"National",independent:!1,seats:0}]},{province_id:2,province_name:"Free State",registered_voters:1462508,spoilt_votes:12337,special_votes:50812,percent_voter_turnout:1.72,total_votes_cast:919549,total_valid_votes:907212,vd_count:1529,vd_captured:1529,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:570980,vote_perc:62.93788001,ballot_type:"National",independent:!1,seats:8},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:154686,vote_perc:17.050700388,ballot_type:"National",independent:!1,seats:2},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:105228,vote_perc:11.599052923,ballot_type:"National",independent:!1,seats:1},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:33660,vote_perc:3.710268383,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:6100,vote_perc:.672389695,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:4214,vote_perc:.464500029,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:3790,vote_perc:.417763433,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:3387,vote_perc:.373341622,ballot_type:"National",independent:!1,seats:0},{party_id:957,party_name:"PATRIOTIC ALLIANCE",party_abbreviation:"PA",votes:3383,vote_perc:.372900711,ballot_type:"National",independent:!1,seats:0},{party_id:1292,party_name:"AFRICAN DEMOCRATIC CHANGE",party_abbreviation:"ADEC",votes:3136,vote_perc:.34567444,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:2404,vote_perc:.264987677,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:1366,vote_perc:.150571201,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:1359,vote_perc:.149799606,ballot_type:"National",independent:!1,seats:0},{party_id:1370,party_name:"AFRICAN CONTENT MOVEMENT",party_abbreviation:"ACM",votes:1308,vote_perc:.144177987,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:1196,vote_perc:.131832471,ballot_type:"National",independent:!1,seats:0},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:1158,vote_perc:.127643814,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:1036,vote_perc:.11419602,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:1004,vote_perc:.11066873,ballot_type:"National",independent:!1,seats:0}]},{province_id:3,province_name:"Gauteng",registered_voters:6381220,spoilt_votes:42883,special_votes:95853,percent_voter_turnout:8.58,total_votes_cast:4580285,total_valid_votes:4537402,vd_count:2771,vd_captured:2771,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:2413979,vote_perc:53.20178816,ballot_type:"National",independent:!1,seats:26},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:1112990,vote_perc:24.529235012,ballot_type:"National",independent:!1,seats:12},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:613704,vote_perc:13.525449145,ballot_type:"National",independent:!1,seats:7},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:175152,vote_perc:3.860182545,ballot_type:"National",independent:!1,seats:2},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:45840,vote_perc:1.010269753,ballot_type:"National",independent:!1,seats:1},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:36249,vote_perc:.798893287,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:13160,vote_perc:.290033812,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:12358,vote_perc:.272358499,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:10842,vote_perc:.238947309,ballot_type:"National",independent:!1,seats:0},{party_id:1368,party_name:"GOOD",party_abbreviation:"GOOD",votes:9983,vote_perc:.220015771,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:9948,vote_perc:.219244405,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:9715,vote_perc:.214109307,ballot_type:"National",independent:!1,seats:0},{party_id:1379,party_name:"CAPITALIST PARTY OF SOUTH AFRICA",party_abbreviation:"ZACP",votes:7515,vote_perc:.165623412,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"ALJAMA",votes:7064,vote_perc:.155683803,ballot_type:"National",independent:!1,seats:0},{party_id:1146,party_name:"BLACK FIRST LAND FIRST",party_abbreviation:"BLF",votes:7009,vote_perc:.154471656,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:5903,vote_perc:.130096474,ballot_type:"National",independent:!1,seats:0}]},{province_id:4,province_name:"KwaZulu-Natal",registered_voters:5524666,spoilt_votes:63408,special_votes:78033,percent_voter_turnout:6.96,total_votes_cast:3715985,total_valid_votes:3652577,vd_count:4885,vd_captured:4885,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:2026069,vote_perc:55.469576685,ballot_type:"National",independent:!1,seats:24},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:532563,vote_perc:14.58047291,ballot_type:"National",independent:!1,seats:6},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:520169,vote_perc:14.241150837,ballot_type:"National",independent:!1,seats:6},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:363832,vote_perc:9.960967284,ballot_type:"National",independent:!1,seats:4},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:52431,vote_perc:1.435452285,ballot_type:"National",independent:!1,seats:1},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:17524,vote_perc:.479770858,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:16460,vote_perc:.450640739,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:16109,vote_perc:.441031086,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:10118,vote_perc:.277009903,ballot_type:"National",independent:!1,seats:0},{party_id:31,party_name:"MINORITY FRONT",party_abbreviation:"MF",votes:9792,vote_perc:.268084697,ballot_type:"National",independent:!1,seats:0},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:8493,vote_perc:.232520765,ballot_type:"National",independent:!1,seats:0},{party_id:1146,party_name:"BLACK FIRST LAND FIRST",party_abbreviation:"BLF",votes:7998,vote_perc:.21896869,ballot_type:"National",independent:!1,seats:0},{party_id:1036,party_name:"DEMOCRATIC LIBERAL CONGRESS",party_abbreviation:"DLC",votes:7181,vote_perc:.19660092,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"ALJAMA",votes:5731,vote_perc:.156902921,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:5101,vote_perc:.139654825,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:5099,vote_perc:.139600069,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:4173,vote_perc:.114248105,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:3677,vote_perc:.100668651,ballot_type:"National",independent:!1,seats:0}]},{province_id:5,province_name:"Mpumalanga",registered_voters:1951776,spoilt_votes:18929,special_votes:56466,percent_voter_turnout:2.42,total_votes_cast:1290908,total_valid_votes:1271979,vd_count:1772,vd_captured:1772,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:918756,vote_perc:72.230437767,ballot_type:"National",independent:!1,seats:12},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:146426,vote_perc:11.511668039,ballot_type:"National",independent:!1,seats:2},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:116050,vote_perc:9.123578298,ballot_type:"National",independent:!1,seats:1},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:33842,vote_perc:2.660578516,ballot_type:"National",independent:!1,seats:0},{party_id:651,party_name:"BETTER RESIDENTS ASSOCIATION",party_abbreviation:"BRA",votes:6971,vote_perc:.548043639,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:6375,vote_perc:.50118752,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:5982,vote_perc:.470290783,ballot_type:"National",independent:!1,seats:0},{party_id:3,party_name:"INKATHA FREEDOM PARTY",party_abbreviation:"IFP",votes:5786,vote_perc:.454881724,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:3945,vote_perc:.31014663,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:3358,vote_perc:.263998069,ballot_type:"National",independent:!1,seats:0},{party_id:1378,party_name:"SOUTH AFRICAN NATIONAL CONGRESS OF TRADITIONAL AUTHORITIES",party_abbreviation:"SANCOTA",votes:2336,vote_perc:.183650831,ballot_type:"National",independent:!1,seats:0},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:2207,vote_perc:.173509154,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:1947,vote_perc:.153068565,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:1797,vote_perc:.141275917,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:1591,vote_perc:.125080681,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:1516,vote_perc:.119184358,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:1499,vote_perc:.117847858,ballot_type:"National",independent:!1,seats:0}]},{province_id:6,province_name:"Northern Cape",registered_voters:626471,spoilt_votes:6406,special_votes:44497,percent_voter_turnout:.78,total_votes_cast:417248,total_valid_votes:410842,vd_count:707,vd_captured:707,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:239221,vote_perc:58.227006976,ballot_type:"National",independent:!1,seats:3},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:99977,vote_perc:24.334659066,ballot_type:"National",independent:!1,seats:1},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:39879,vote_perc:9.706651219,ballot_type:"National",independent:!1,seats:1},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:13522,vote_perc:3.291289596,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:3413,vote_perc:.830732983,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:3143,vote_perc:.765014288,ballot_type:"National",independent:!1,seats:0},{party_id:1368,party_name:"GOOD",party_abbreviation:"GOOD",votes:3088,vote_perc:.751627146,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:1597,vote_perc:.388713909,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:612,vote_perc:.148962375,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:586,vote_perc:.142633908,ballot_type:"National",independent:!1,seats:0},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:574,vote_perc:.139713077,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:527,vote_perc:.128273156,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:464,vote_perc:.112938794,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:417,vote_perc:.101498873,ballot_type:"National",independent:!1,seats:0}]},{province_id:7,province_name:"Limpopo",registered_voters:2608460,spoilt_votes:20269,special_votes:67274,percent_voter_turnout:2.87,total_votes_cast:1530837,total_valid_votes:1510568,vd_count:3157,vd_captured:3157,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:1163091,vote_perc:76.996930956,ballot_type:"National",independent:!1,seats:15},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:198439,vote_perc:13.136714137,ballot_type:"National",independent:!1,seats:3},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:81066,vote_perc:5.36659058,ballot_type:"National",independent:!1,seats:1},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:24042,vote_perc:1.591586741,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:5241,vote_perc:.346955582,ballot_type:"National",independent:!1,seats:0},{party_id:450,party_name:"AFRICAN PEOPLE'S CONVENTION",party_abbreviation:"APC",votes:4403,vote_perc:.291479761,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:3999,vote_perc:.264734855,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:3233,vote_perc:.214025453,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:3134,vote_perc:.207471627,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:2839,vote_perc:.187942549,ballot_type:"National",independent:!1,seats:0},{party_id:17,party_name:"AZANIAN PEOPLE'S ORGANISATION",party_abbreviation:"AZAPO",votes:2215,vote_perc:.146633584,ballot_type:"National",independent:!1,seats:0},{party_id:603,party_name:"SOUTH AFRICAN MAINTANANCE AND ESTATE BENEFICIARIES ASSOCIATI",party_abbreviation:"SAMEBA",votes:1809,vote_perc:.119756277,ballot_type:"National",independent:!1,seats:0},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:1745,vote_perc:.11551946,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:1607,vote_perc:.106383824,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:1592,vote_perc:.10539082,ballot_type:"National",independent:!1,seats:0}]},{province_id:8,province_name:"North West",registered_voters:1702728,spoilt_votes:18030,special_votes:44474,percent_voter_turnout:1.9,total_votes_cast:1012250,total_valid_votes:994220,vd_count:1733,vd_captured:1733,party_ballot_results:[{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:633223,vote_perc:63.690430689,ballot_type:"National",independent:!1,seats:9},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:169880,vote_perc:17.086761481,ballot_type:"National",independent:!1,seats:2},{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:112417,vote_perc:11.307054777,ballot_type:"National",independent:!1,seats:2},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:40225,vote_perc:4.045885217,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:4084,vote_perc:.410774275,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:4076,vote_perc:.409969624,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:3420,vote_perc:.343988252,ballot_type:"National",independent:!1,seats:0},{party_id:1016,party_name:"FORUM 4 SERVICE DELIVERY",party_abbreviation:"F4SD",votes:2868,vote_perc:.288467341,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:2809,vote_perc:.282533041,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:2535,vote_perc:.254973748,ballot_type:"National",independent:!1,seats:0},{party_id:1274,party_name:"AFRICAN SECURITY CONGRESS",party_abbreviation:"ASC",votes:1831,vote_perc:.184164471,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:1736,vote_perc:.174609241,ballot_type:"National",independent:!1,seats:0},{party_id:938,party_name:"AGANG SOUTH AFRICA",party_abbreviation:"AGANG SA",votes:1418,vote_perc:.142624369,ballot_type:"National",independent:!1,seats:0},{party_id:1357,party_name:"AFRIKAN ALLIANCE OF SOCIAL DEMOCRATS",party_abbreviation:"AASD",votes:1270,vote_perc:.127738328,ballot_type:"National",independent:!1,seats:0},{party_id:1368,party_name:"GOOD",party_abbreviation:"GOOD",votes:1094,vote_perc:.110036008,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:1007,vote_perc:.10128543,ballot_type:"National",independent:!1,seats:0}]},{province_id:9,province_name:"Western Cape",registered_voters:3128567,spoilt_votes:20892,special_votes:46935,percent_voter_turnout:4,total_votes_cast:2133062,total_valid_votes:2112170,vd_count:1579,vd_captured:1579,party_ballot_results:[{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:1107065,vote_perc:52.413631479,ballot_type:"National",independent:!1,seats:13},{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:659548,vote_perc:31.226085022,ballot_type:"National",independent:!1,seats:7},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:88428,vote_perc:4.186594829,ballot_type:"National",independent:!1,seats:1},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:59354,vote_perc:2.810095778,ballot_type:"National",independent:!1,seats:1},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:59147,vote_perc:2.800295431,ballot_type:"National",independent:!1,seats:1},{party_id:1368,party_name:"GOOD",party_abbreviation:"GOOD",votes:47283,vote_perc:2.238598219,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"ALJAMA",votes:15866,vote_perc:.751170597,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:9726,vote_perc:.460474299,ballot_type:"National",independent:!1,seats:0},{party_id:45,party_name:"INDEPENDENT CIVIC ORGANISATION OF SOUTH AFRICA",party_abbreviation:"ICOSA",votes:9033,vote_perc:.42766444,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:7650,vote_perc:.362186756,ballot_type:"National",independent:!1,seats:0},{party_id:1333,party_name:"ALLIANCE FOR TRANSFORMATION FOR ALL",party_abbreviation:"ATA",votes:5378,vote_perc:.254619657,ballot_type:"National",independent:!1,seats:0},{party_id:1352,party_name:"LAND PARTY",party_abbreviation:"LAND",votes:5348,vote_perc:.253199316,ballot_type:"National",independent:!1,seats:0},{party_id:1318,party_name:"AFRICAN TRANSFORMATION MOVEMENT",party_abbreviation:"ATM",votes:4761,vote_perc:.225407993,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:4183,vote_perc:.198042771,ballot_type:"National",independent:!1,seats:0},{party_id:1379,party_name:"CAPITALIST PARTY OF SOUTH AFRICA",party_abbreviation:"ZACP",votes:3822,vote_perc:.180951344,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:3201,vote_perc:.151550301,ballot_type:"National",independent:!1,seats:0},{party_id:330,party_name:"AFRICAN INDEPENDENT CONGRESS",party_abbreviation:"AIC",votes:3133,vote_perc:.148330864,ballot_type:"National",independent:!1,seats:0},{party_id:591,party_name:"NATIONAL FREEDOM PARTY",party_abbreviation:"NFP",votes:2245,vote_perc:.106288793,ballot_type:"National",independent:!1,seats:0}]},{province_id:99,province_name:"Out of Country",registered_voters:7092,spoilt_votes:27,special_votes:0,percent_voter_turnout:.04,total_votes_cast:19909,total_valid_votes:19882,vd_count:1,vd_captured:1,party_ballot_results:[{party_id:52,party_name:"DEMOCRATIC ALLIANCE",party_abbreviation:"DA",votes:14802,vote_perc:74.449250578,ballot_type:"National",independent:!1,seats:0},{party_id:7,party_name:"AFRICAN NATIONAL CONGRESS",party_abbreviation:"ANC",votes:2153,vote_perc:10.828890454,ballot_type:"National",independent:!1,seats:0},{party_id:4,party_name:"VRYHEIDSFRONT PLUS",party_abbreviation:"VF PLUS",votes:908,vote_perc:4.566944975,ballot_type:"National",independent:!1,seats:0},{party_id:945,party_name:"ECONOMIC FREEDOM FIGHTERS",party_abbreviation:"EFF",votes:765,vote_perc:3.847701438,ballot_type:"National",independent:!1,seats:0},{party_id:18,party_name:"AFRICAN CHRISTIAN DEMOCRATIC PARTY",party_abbreviation:"ACDP",votes:338,vote_perc:1.700030178,ballot_type:"National",independent:!1,seats:0},{party_id:1379,party_name:"CAPITALIST PARTY OF SOUTH AFRICA",party_abbreviation:"ZACP",votes:232,vote_perc:1.166884619,ballot_type:"National",independent:!1,seats:0},{party_id:499,party_name:"CONGRESS  OF THE PEOPLE",party_abbreviation:"COPE",votes:182,vote_perc:.915400865,ballot_type:"National",independent:!1,seats:0},{party_id:6,party_name:"UNITED DEMOCRATIC MOVEMENT",party_abbreviation:"UDM",votes:118,vote_perc:.59350166,ballot_type:"National",independent:!1,seats:0},{party_id:1368,party_name:"GOOD",party_abbreviation:"GOOD",votes:110,vote_perc:.553264259,ballot_type:"National",independent:!1,seats:0},{party_id:917,party_name:"FRONT NASIONAAL/FRONT NATIONAL",party_abbreviation:"FN",votes:47,vote_perc:.236394729,ballot_type:"National",independent:!1,seats:0},{party_id:469,party_name:"WOMEN FORWARD",party_abbreviation:"WF",votes:34,vote_perc:.171008953,ballot_type:"National",independent:!1,seats:0},{party_id:8,party_name:"PAN AFRICANIST CONGRESS OF AZANIA",party_abbreviation:"PAC",votes:33,vote_perc:.165979278,ballot_type:"National",independent:!1,seats:0},{party_id:447,party_name:"AL JAMA-AH",party_abbreviation:"ALJAMA",votes:30,vote_perc:.150890252,ballot_type:"National",independent:!1,seats:0},{party_id:1331,party_name:"SOCIALIST REVOLUTIONARY WORKERS PARTY",party_abbreviation:"SRWP",votes:22,vote_perc:.110652852,ballot_type:"National",independent:!1,seats:0}]}]},fa="https://iec-api.revengine.dailymaverick.co.za";async function at({year:t=2024,election:e="National Assembly",region:a="National"}){let n=`${fa}/national/${t}`;return e==="National Assembly"?t===2009?Lr:t===2014?kr:t===2019?Gr:await en(n):(a==="National"?n=`${fa}/provincial/${t}`:n=`${fa}/provincial/${t}/${a}`,await en(n))}async function en(t){const e=await fetch(t);if(!e.ok)throw new Error(`Failed to load data from ${t}`);try{return await e.json()}catch{throw new Error(`Failed to parse data from ${t}`)}}function Gt(t,e){return t==null||e==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function Hr(t,e){return t==null||e==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function tn(t){let e,a,n;t.length!==2?(e=Gt,a=(o,s)=>Gt(t(o),s),n=(o,s)=>t(o)-s):(e=t===Gt||t===Hr?t:Vr,a=t,n=t);function i(o,s,p=0,_=o.length){if(p<_){if(e(s,s)!==0)return _;do{const f=p+_>>>1;a(o[f],s)<0?p=f+1:_=f}while(p<_)}return p}function r(o,s,p=0,_=o.length){if(p<_){if(e(s,s)!==0)return _;do{const f=p+_>>>1;a(o[f],s)<=0?p=f+1:_=f}while(p<_)}return p}function l(o,s,p=0,_=o.length){const f=i(o,s,p,_-1);return f>p&&n(o[f-1],s)>-n(o[f],s)?f-1:f}return{left:i,center:l,right:r}}function Vr(){return 0}function Ur(t){return t===null?NaN:+t}const Yr=tn(Gt).right;tn(Ur).center;function xr(t,e){let a,n;if(e===void 0)for(const i of t)i!=null&&(a===void 0?i>=i&&(a=n=i):(a>i&&(a=i),n<i&&(n=i)));else{let i=-1;for(let r of t)(r=e(r,++i,t))!=null&&(a===void 0?r>=r&&(a=n=r):(a>r&&(a=r),n<r&&(n=r)))}return[a,n]}class nt{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){const a=this._partials;let n=0;for(let i=0;i<this._n&&i<32;i++){const r=a[i],l=e+r,o=Math.abs(e)<Math.abs(r)?e-(l-r):r-(l-e);o&&(a[n++]=o),e=l}return a[n]=e,this._n=n+1,this}valueOf(){const e=this._partials;let a=this._n,n,i,r,l=0;if(a>0){for(l=e[--a];a>0&&(n=l,i=e[--a],l=n+i,r=i-(l-n),!r););a>0&&(r<0&&e[a-1]<0||r>0&&e[a-1]>0)&&(i=r*2,n=l+i,i==n-l&&(l=n))}return l}}const Br=Math.sqrt(50),zr=Math.sqrt(10),Wr=Math.sqrt(2);function Ht(t,e,a){const n=(e-t)/Math.max(0,a),i=Math.floor(Math.log10(n)),r=n/Math.pow(10,i),l=r>=Br?10:r>=zr?5:r>=Wr?2:1;let o,s,p;return i<0?(p=Math.pow(10,-i)/l,o=Math.round(t*p),s=Math.round(e*p),o/p<t&&++o,s/p>e&&--s,p=-p):(p=Math.pow(10,i)*l,o=Math.round(t/p),s=Math.round(e/p),o*p<t&&++o,s*p>e&&--s),s<o&&.5<=a&&a<2?Ht(t,e,a*2):[o,s,p]}function Zr(t,e,a){if(e=+e,t=+t,a=+a,!(a>0))return[];if(t===e)return[t];const n=e<t,[i,r,l]=n?Ht(e,t,a):Ht(t,e,a);if(!(r>=i))return[];const o=r-i+1,s=new Array(o);if(n)if(l<0)for(let p=0;p<o;++p)s[p]=(r-p)/-l;else for(let p=0;p<o;++p)s[p]=(r-p)*l;else if(l<0)for(let p=0;p<o;++p)s[p]=(i+p)/-l;else for(let p=0;p<o;++p)s[p]=(i+p)*l;return s}function ca(t,e,a){return e=+e,t=+t,a=+a,Ht(t,e,a)[2]}function Kr(t,e,a){e=+e,t=+t,a=+a;const n=e<t,i=n?ca(e,t,a):ca(t,e,a);return(n?-1:1)*(i<0?1/-i:i)}function*qr(t){for(const e of t)yield*e}function jr(t){return Array.from(qr(t))}var it=1e-6,da=Math.PI,Jr=da*2,Qr=180/da,Xr=da/180,rt=Math.abs,$r=Math.cos,el=Math.sin,ua=Math.sqrt;function Oe(){}function Vt(t,e){t&&nn.hasOwnProperty(t.type)&&nn[t.type](t,e)}var an={Feature:function(t,e){Vt(t.geometry,e)},FeatureCollection:function(t,e){for(var a=t.features,n=-1,i=a.length;++n<i;)Vt(a[n].geometry,e)}},nn={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var a=t.coordinates,n=-1,i=a.length;++n<i;)t=a[n],e.point(t[0],t[1],t[2])},LineString:function(t,e){va(t.coordinates,e,0)},MultiLineString:function(t,e){for(var a=t.coordinates,n=-1,i=a.length;++n<i;)va(a[n],e,0)},Polygon:function(t,e){rn(t.coordinates,e)},MultiPolygon:function(t,e){for(var a=t.coordinates,n=-1,i=a.length;++n<i;)rn(a[n],e)},GeometryCollection:function(t,e){for(var a=t.geometries,n=-1,i=a.length;++n<i;)Vt(a[n],e)}};function va(t,e,a){var n=-1,i=t.length-a,r;for(e.lineStart();++n<i;)r=t[n],e.point(r[0],r[1],r[2]);e.lineEnd()}function rn(t,e){var a=-1,n=t.length;for(e.polygonStart();++a<n;)va(t[a],e,1);e.polygonEnd()}function lt(t,e){t&&an.hasOwnProperty(t.type)?an[t.type](t,e):Vt(t,e)}function tl(){var t=[],e;return{point:function(a,n,i){e.push([a,n,i])},lineStart:function(){t.push(e=[])},lineEnd:Oe,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var a=t;return t=[],e=null,a}}}function al(t,e){return rt(t[0]-e[0])<it&&rt(t[1]-e[1])<it}function Ut(t,e,a,n){this.x=t,this.z=e,this.o=a,this.e=n,this.v=!1,this.n=this.p=null}function nl(t,e,a,n,i){var r=[],l=[],o,s;if(t.forEach(function(v){if(!((N=v.length-1)<=0)){var N,b=v[0],y=v[N],E;if(al(b,y)){if(!b[2]&&!y[2]){for(i.lineStart(),o=0;o<N;++o)i.point((b=v[o])[0],b[1]);i.lineEnd();return}y[0]+=2*it}r.push(E=new Ut(b,v,null,!0)),l.push(E.o=new Ut(b,null,E,!1)),r.push(E=new Ut(y,v,null,!1)),l.push(E.o=new Ut(y,null,E,!0))}}),!!r.length){for(l.sort(e),ln(r),ln(l),o=0,s=l.length;o<s;++o)l[o].e=a=!a;for(var p=r[0],_,f;;){for(var c=p,u=!0;c.v;)if((c=c.n)===p)return;_=c.z,i.lineStart();do{if(c.v=c.o.v=!0,c.e){if(u)for(o=0,s=_.length;o<s;++o)i.point((f=_[o])[0],f[1]);else n(c.x,c.n.x,1,i);c=c.n}else{if(u)for(_=c.p.z,o=_.length-1;o>=0;--o)i.point((f=_[o])[0],f[1]);else n(c.x,c.p.x,-1,i);c=c.p}c=c.o,_=c.z,u=!u}while(!c.v);i.lineEnd()}}}function ln(t){if(e=t.length){for(var e,a=0,n=t[0],i;++a<e;)n.n=i=t[a],i.p=n,n=i;n.n=i=t[0],i.p=n}}function il(t,e,a,n,i,r){var l=t[0],o=t[1],s=e[0],p=e[1],_=0,f=1,c=s-l,u=p-o,v;if(v=a-l,!(!c&&v>0)){if(v/=c,c<0){if(v<_)return;v<f&&(f=v)}else if(c>0){if(v>f)return;v>_&&(_=v)}if(v=i-l,!(!c&&v<0)){if(v/=c,c<0){if(v>f)return;v>_&&(_=v)}else if(c>0){if(v<_)return;v<f&&(f=v)}if(v=n-o,!(!u&&v>0)){if(v/=u,u<0){if(v<_)return;v<f&&(f=v)}else if(u>0){if(v>f)return;v>_&&(_=v)}if(v=r-o,!(!u&&v<0)){if(v/=u,u<0){if(v>f)return;v>_&&(_=v)}else if(u>0){if(v<_)return;v<f&&(f=v)}return _>0&&(t[0]=l+_*c,t[1]=o+_*u),f<1&&(e[0]=l+f*c,e[1]=o+f*u),!0}}}}}var At=1e9,Yt=-At;function rl(t,e,a,n){function i(p,_){return t<=p&&p<=a&&e<=_&&_<=n}function r(p,_,f,c){var u=0,v=0;if(p==null||(u=l(p,f))!==(v=l(_,f))||s(p,_)<0^f>0)do c.point(u===0||u===3?t:a,u>1?n:e);while((u=(u+f+4)%4)!==v);else c.point(_[0],_[1])}function l(p,_){return rt(p[0]-t)<it?_>0?0:3:rt(p[0]-a)<it?_>0?2:1:rt(p[1]-e)<it?_>0?1:0:_>0?3:2}function o(p,_){return s(p.x,_.x)}function s(p,_){var f=l(p,1),c=l(_,1);return f!==c?f-c:f===0?_[1]-p[1]:f===1?p[0]-_[0]:f===2?p[1]-_[1]:_[0]-p[0]}return function(p){var _=p,f=tl(),c,u,v,N,b,y,E,A,h,g,P,Y={point:H,lineStart:S,lineEnd:K,polygonStart:Z,polygonEnd:M};function H(w,V){i(w,V)&&_.point(w,V)}function W(){for(var w=0,V=0,Q=u.length;V<Q;++V)for(var ne=u[V],ee=1,Ee=ne.length,T=ne[0],ie,le,_e=T[0],re=T[1];ee<Ee;++ee)ie=_e,le=re,T=ne[ee],_e=T[0],re=T[1],le<=n?re>n&&(_e-ie)*(n-le)>(re-le)*(t-ie)&&++w:re<=n&&(_e-ie)*(n-le)<(re-le)*(t-ie)&&--w;return w}function Z(){_=f,c=[],u=[],P=!0}function M(){var w=W(),V=P&&w,Q=(c=jr(c)).length;(V||Q)&&(p.polygonStart(),V&&(p.lineStart(),r(null,null,1,p),p.lineEnd()),Q&&nl(c,o,w,r,p),p.polygonEnd()),_=p,c=u=v=null}function S(){Y.point=J,u&&u.push(v=[]),g=!0,h=!1,E=A=NaN}function K(){c&&(J(N,b),y&&h&&f.rejoin(),c.push(f.result())),Y.point=H,h&&_.lineEnd()}function J(w,V){var Q=i(w,V);if(u&&v.push([w,V]),g)N=w,b=V,y=Q,g=!1,Q&&(_.lineStart(),_.point(w,V));else if(Q&&h)_.point(w,V);else{var ne=[E=Math.max(Yt,Math.min(At,E)),A=Math.max(Yt,Math.min(At,A))],ee=[w=Math.max(Yt,Math.min(At,w)),V=Math.max(Yt,Math.min(At,V))];il(ne,ee,t,e,a,n)?(h||(_.lineStart(),_.point(ne[0],ne[1])),_.point(ee[0],ee[1]),Q||_.lineEnd(),P=!1):Q&&(_.lineStart(),_.point(w,V),P=!1)}E=w,A=V,h=Q}return Y}}const ya=t=>t;var ba=new nt,Na=new nt,on,sn,Aa,ha,He={point:Oe,lineStart:Oe,lineEnd:Oe,polygonStart:function(){He.lineStart=ll,He.lineEnd=sl},polygonEnd:function(){He.lineStart=He.lineEnd=He.point=Oe,ba.add(rt(Na)),Na=new nt},result:function(){var t=ba/2;return ba=new nt,t}};function ll(){He.point=ol}function ol(t,e){He.point=pn,on=Aa=t,sn=ha=e}function pn(t,e){Na.add(ha*t-Aa*e),Aa=t,ha=e}function sl(){pn(on,sn)}var ot=1/0,xt=ot,ht=-ot,Bt=ht,zt={point:pl,lineStart:Oe,lineEnd:Oe,polygonStart:Oe,polygonEnd:Oe,result:function(){var t=[[ot,xt],[ht,Bt]];return ht=Bt=-(xt=ot=1/0),t}};function pl(t,e){t<ot&&(ot=t),t>ht&&(ht=t),e<xt&&(xt=e),e>Bt&&(Bt=e)}var ma=0,Ea=0,mt=0,Wt=0,Zt=0,st=0,ga=0,Ca=0,Et=0,_n,fn,we,Le,Re={point:Be,lineStart:cn,lineEnd:dn,polygonStart:function(){Re.lineStart=cl,Re.lineEnd=dl},polygonEnd:function(){Re.point=Be,Re.lineStart=cn,Re.lineEnd=dn},result:function(){var t=Et?[ga/Et,Ca/Et]:st?[Wt/st,Zt/st]:mt?[ma/mt,Ea/mt]:[NaN,NaN];return ma=Ea=mt=Wt=Zt=st=ga=Ca=Et=0,t}};function Be(t,e){ma+=t,Ea+=e,++mt}function cn(){Re.point=_l}function _l(t,e){Re.point=fl,Be(we=t,Le=e)}function fl(t,e){var a=t-we,n=e-Le,i=ua(a*a+n*n);Wt+=i*(we+t)/2,Zt+=i*(Le+e)/2,st+=i,Be(we=t,Le=e)}function dn(){Re.point=Be}function cl(){Re.point=ul}function dl(){un(_n,fn)}function ul(t,e){Re.point=un,Be(_n=we=t,fn=Le=e)}function un(t,e){var a=t-we,n=e-Le,i=ua(a*a+n*n);Wt+=i*(we+t)/2,Zt+=i*(Le+e)/2,st+=i,i=Le*t-we*e,ga+=i*(we+t),Ca+=i*(Le+e),Et+=i*3,Be(we=t,Le=e)}function vn(t){this._context=t}vn.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:{this._context.moveTo(t,e),this._point=1;break}case 1:{this._context.lineTo(t,e);break}default:{this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,Jr);break}}},result:Oe};var Ia=new nt,Oa,yn,bn,gt,Ct,It={point:Oe,lineStart:function(){It.point=vl},lineEnd:function(){Oa&&Nn(yn,bn),It.point=Oe},polygonStart:function(){Oa=!0},polygonEnd:function(){Oa=null},result:function(){var t=+Ia;return Ia=new nt,t}};function vl(t,e){It.point=Nn,yn=gt=t,bn=Ct=e}function Nn(t,e){gt-=t,Ct-=e,Ia.add(ua(gt*gt+Ct*Ct)),gt=t,Ct=e}let An,Kt,hn,mn;class En{constructor(e){this._append=e==null?gn:yl(e),this._radius=4.5,this._=""}pointRadius(e){return this._radius=+e,this}polygonStart(){this._line=0}polygonEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){this._line===0&&(this._+="Z"),this._point=NaN}point(e,a){switch(this._point){case 0:{this._append`M${e},${a}`,this._point=1;break}case 1:{this._append`L${e},${a}`;break}default:{if(this._append`M${e},${a}`,this._radius!==hn||this._append!==Kt){const n=this._radius,i=this._;this._="",this._append`m0,${n}a${n},${n} 0 1,1 0,${-2*n}a${n},${n} 0 1,1 0,${2*n}z`,hn=n,Kt=this._append,mn=this._,this._=i}this._+=mn;break}}}result(){const e=this._;return this._="",e.length?e:null}}function gn(t){let e=1;this._+=t[0];for(const a=t.length;e<a;++e)this._+=arguments[e]+t[e]}function yl(t){const e=Math.floor(t);if(!(e>=0))throw new RangeError(`invalid digits: ${t}`);if(e>15)return gn;if(e!==An){const a=10**e;An=e,Kt=function(i){let r=1;this._+=i[0];for(const l=i.length;r<l;++r)this._+=Math.round(arguments[r]*a)/a+i[r]}}return Kt}function Cn(t,e){let a=3,n=4.5,i,r;function l(o){return o&&(typeof n=="function"&&r.pointRadius(+n.apply(this,arguments)),lt(o,i(r))),r.result()}return l.area=function(o){return lt(o,i(He)),He.result()},l.measure=function(o){return lt(o,i(It)),It.result()},l.bounds=function(o){return lt(o,i(zt)),zt.result()},l.centroid=function(o){return lt(o,i(Re)),Re.result()},l.projection=function(o){return arguments.length?(i=o==null?(t=null,ya):(t=o).stream,l):t},l.context=function(o){return arguments.length?(r=o==null?(e=null,new En(a)):new vn(e=o),typeof n!="function"&&r.pointRadius(n),l):e},l.pointRadius=function(o){return arguments.length?(n=typeof o=="function"?o:(r.pointRadius(+o),+o),l):n},l.digits=function(o){if(!arguments.length)return a;if(o==null)a=null;else{const s=Math.floor(o);if(!(s>=0))throw new RangeError(`invalid digits: ${o}`);a=s}return e===null&&(r=new En(a)),l},l.projection(t).digits(a).context(e)}function bl(t){return function(e){var a=new Ra;for(var n in t)a[n]=t[n];return a.stream=e,a}}function Ra(){}Ra.prototype={constructor:Ra,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};function Sa(t,e,a){var n=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),n!=null&&t.clipExtent(null),lt(a,t.stream(zt)),e(zt.result()),n!=null&&t.clipExtent(n),t}function In(t,e,a){return Sa(t,function(n){var i=e[1][0]-e[0][0],r=e[1][1]-e[0][1],l=Math.min(i/(n[1][0]-n[0][0]),r/(n[1][1]-n[0][1])),o=+e[0][0]+(i-l*(n[1][0]+n[0][0]))/2,s=+e[0][1]+(r-l*(n[1][1]+n[0][1]))/2;t.scale(150*l).translate([o,s])},a)}function Nl(t,e,a){return In(t,[[0,0],e],a)}function Al(t,e,a){return Sa(t,function(n){var i=+e,r=i/(n[1][0]-n[0][0]),l=(i-r*(n[1][0]+n[0][0]))/2,o=-r*n[0][1];t.scale(150*r).translate([l,o])},a)}function hl(t,e,a){return Sa(t,function(n){var i=+e,r=i/(n[1][1]-n[0][1]),l=-r*n[0][0],o=(i-r*(n[1][1]+n[0][1]))/2;t.scale(150*r).translate([l,o])},a)}function On(){var t=1,e=0,a=0,n=1,i=1,r=0,l,o,s=null,p,_,f,c=1,u=1,v=bl({point:function(h,g){var P=A([h,g]);this.stream.point(P[0],P[1])}}),N=ya,b,y;function E(){return c=t*n,u=t*i,b=y=null,A}function A(h){var g=h[0]*c,P=h[1]*u;if(r){var Y=P*l-g*o;g=g*l+P*o,P=Y}return[g+e,P+a]}return A.invert=function(h){var g=h[0]-e,P=h[1]-a;if(r){var Y=P*l+g*o;g=g*l-P*o,P=Y}return[g/c,P/u]},A.stream=function(h){return b&&y===h?b:b=v(N(y=h))},A.postclip=function(h){return arguments.length?(N=h,s=p=_=f=null,E()):N},A.clipExtent=function(h){return arguments.length?(N=h==null?(s=p=_=f=null,ya):rl(s=+h[0][0],p=+h[0][1],_=+h[1][0],f=+h[1][1]),E()):s==null?null:[[s,p],[_,f]]},A.scale=function(h){return arguments.length?(t=+h,E()):t},A.translate=function(h){return arguments.length?(e=+h[0],a=+h[1],E()):[e,a]},A.angle=function(h){return arguments.length?(r=h%360*Xr,o=el(r),l=$r(r),E()):r*Qr},A.reflectX=function(h){return arguments.length?(n=h?-1:1,E()):n<0},A.reflectY=function(h){return arguments.length?(i=h?-1:1,E()):i<0},A.fitExtent=function(h,g){return In(A,h,g)},A.fitSize=function(h,g){return Nl(A,h,g)},A.fitWidth=function(h,g){return Al(A,h,g)},A.fitHeight=function(h,g){return hl(A,h,g)},A}const ml=[{region:"Eastern Cape",seat:25},{region:"Free State",seat:11},{region:"Gauteng",seat:48},{region:"KwaZulu-Natal",seat:41},{region:"Limpopo",seat:19},{region:"Mpumalanga",seat:15},{region:"North West",seat:13},{region:"Northern Cape",seat:5},{region:"Western Cape",seat:23}];function El(t){let e,a;return{c(){e=L("svg"),a=L("path"),d(a,"d","M98.2999 1.49498L99.0134 1.10378L98.7818 0.681228H98.2999V1.49498ZM168.932 138.244C168.932 140.641 170.875 142.584 173.272 142.584C175.669 142.584 177.612 140.641 177.612 138.244C177.612 135.847 175.669 133.904 173.272 133.904C170.875 133.904 168.932 135.847 168.932 138.244ZM0.236328 2.30873H98.2999V0.681228H0.236328V2.30873ZM97.5863 1.88618L172.558 138.635L173.986 137.853L99.0134 1.10378L97.5863 1.88618Z"),d(a,"fill","black"),d(e,"width","160"),d(e,"height","120"),d(e,"viewBox","0 0 178 143"),d(e,"fill","none"),d(e,"xmlns","http://www.w3.org/2000/svg"),d(e,"class","svelte-bu5kp")},m(n,i){R(n,e,i),m(e,a)},p:q,i:q,o:q,d(n){n&&O(e)}}}class gl extends me{constructor(e){super(),he(this,e,null,El,be,{})}}const Rn={ACTIONSA:"#06B616",ANC:"#FFCA0B",BOSA:"#EA8484",DA:"#145FA2",EFF:"#EB2A2D","VF PLUS":"#25BDC8",GOOD:"#F36A14",IFP:"#FFF000",MK:"#A044AC",PA:"#774A17",RISE:"#000000",UDM:"#12F783"},Sn=["#15616D","#FCE3B0","#B38FB7","#C0ECCD"];let Tn=[];for(const[t,e]of Object.entries(Rn))Tn.push({party:t,color:e});function ze(t,e){const a=Tn.find(i=>t===i.party);return a?a.color:Sn[e%Sn.length]}function Pn(t,e,a){const n=t.slice();return n[16]=e[a],n}function Mn(t){let e,a=t[4].province_id+"",n;return{c(){e=I("div"),n=U(a),d(e,"class","electionengine-pr-head svelte-1v5o3vc"),G(e,"gauteng-heading",t[7])},m(i,r){R(i,e,r),m(e,n)},p(i,r){r&16&&a!==(a=i[4].province_id+"")&&X(n,a),r&128&&G(e,"gauteng-heading",i[7])},d(i){i&&O(e)}}}function Fn(t){let e,a;return e=new gl({}),{c(){Ie(e.$$.fragment)},m(n,i){Ne(e,n,i),a=!0},i(n){a||(k(e.$$.fragment,n),a=!0)},o(n){z(e.$$.fragment,n),a=!1},d(n){Ae(e,n)}}}function Dn(t){let e,a,n,i,r,l,o,s;function p(..._){return t[13](t[16],..._)}return{c(){e=L("g"),a=L("svg"),n=L("g"),i=L("polygon"),d(i,"points","5,0 10,2.75 10,8.25 5,11 0,8.25 0,2.75"),d(n,"transform","translate(1, 1)"),d(n,"fill",r=t[16].color),d(n,"fill-rule","nonzero"),d(n,"stroke","#444444"),d(a,"width","12px"),d(a,"height","13px"),d(a,"viewBox","0 0 15 17"),d(a,"role","img"),d(e,"transform",l=`
                  translate(`+(t[2]&&t[16].row%2?t[16].col*11+5:t[16].col*11)+" "+(t[2]?t[16].row*9:t[16].row*11)+`)
              `)},m(_,f){R(_,e,f),m(e,a),m(a,n),m(n,i),o||(s=[$(a,"mouseover",p),$(a,"focus",t[12])],o=!0)},p(_,f){t=_,f&32&&r!==(r=t[16].color)&&d(n,"fill",r),f&36&&l!==(l=`
                  translate(`+(t[2]&&t[16].row%2?t[16].col*11+5:t[16].col*11)+" "+(t[2]?t[16].row*9:t[16].row*11)+`)
              `)&&d(e,"transform",l)},d(_){_&&O(e),o=!1,Te(s)}}}function Cl(t){let e,a,n,i,r=t[4].province_id+"",l,o,s,p,_,f,c,u=(t[4].province_id==="Gauteng"||t[4].province_id==="KwaZulu-Natal")&&Mn(t),v=t[7]&&!t[3]&&Fn(),N=j(t[5]),b=[];for(let y=0;y<N.length;y+=1)b[y]=Dn(Pn(t,N,y));return{c(){u&&u.c(),e=F(),v&&v.c(),a=F(),n=L("svg"),i=L("text"),l=U(r),o=L("svg");for(let y=0;y<b.length;y+=1)b[y].c();d(i,"dx","15"),d(i,"dy","-4"),d(i,"base",""),d(i,"class","svelte-1v5o3vc"),d(o,"viewBox",s="0 0 "+12*t[1]+" "+12*t[6]),d(n,"viewBox",p="0 0 "+12*t[1]+" "+12*t[6]),d(n,"class","electionengine-seatwrapper svelte-1v5o3vc"),d(n,"width","140"),d(n,"height","100"),d(n,"role","img"),G(n,"gauteng",t[7])},m(y,E){u&&u.m(y,E),R(y,e,E),v&&v.m(y,E),R(y,a,E),R(y,n,E),m(n,i),m(i,l),m(n,o);for(let A=0;A<b.length;A+=1)b[A]&&b[A].m(o,null);_=!0,f||(c=$(n,"mouseleave",t[14]),f=!0)},p(y,[E]){if(y[4].province_id==="Gauteng"||y[4].province_id==="KwaZulu-Natal"?u?u.p(y,E):(u=Mn(y),u.c(),u.m(e.parentNode,e)):u&&(u.d(1),u=null),y[7]&&!y[3]?v?E&136&&k(v,1):(v=Fn(),v.c(),k(v,1),v.m(a.parentNode,a)):v&&(ge(),z(v,1,1,()=>{v=null}),Ce()),(!_||E&16)&&r!==(r=y[4].province_id+"")&&X(l,r),E&37){N=j(y[5]);let A;for(A=0;A<N.length;A+=1){const h=Pn(y,N,A);b[A]?b[A].p(h,E):(b[A]=Dn(h),b[A].c(),b[A].m(o,null))}for(;A<b.length;A+=1)b[A].d(1);b.length=N.length}(!_||E&66&&s!==(s="0 0 "+12*y[1]+" "+12*y[6]))&&d(o,"viewBox",s),(!_||E&66&&p!==(p="0 0 "+12*y[1]+" "+12*y[6]))&&d(n,"viewBox",p),(!_||E&128)&&G(n,"gauteng",y[7])},i(y){_||(k(v),_=!0)},o(y){z(v),_=!1},d(y){y&&(O(e),O(a),O(n)),u&&u.d(y),v&&v.d(y),pe(b,y),f=!1,c()}}}function Il(t,e,a){let n,i,r,{seats:l=[]}=e,{total_seats:o=0}=e,{cols:s=8}=e,{offset:p=!0}=e,{grid:_}=e,{hexagon_data:f}=e,{tooltipData:c}=e,u=[],v=0;function N(){return Math.ceil(o/s)}function b(A){Or.call(this,t,A)}const y=(A,h)=>{a(0,c={...A}),a(0,c.x=h.x,c),a(0,c.y=h.y,c)},E=()=>a(0,c=null);return t.$$set=A=>{"seats"in A&&a(8,l=A.seats),"total_seats"in A&&a(9,o=A.total_seats),"cols"in A&&a(1,s=A.cols),"offset"in A&&a(2,p=A.offset),"grid"in A&&a(3,_=A.grid),"hexagon_data"in A&&a(4,f=A.hexagon_data),"tooltipData"in A&&a(0,c=A.tooltipData)},t.$$.update=()=>{t.$$.dirty&16&&a(7,n=f.province_id==="Gauteng"),t.$$.dirty&770&&a(11,i=()=>{let A=[];for(let g=0;g<o;g++){const P={i:g,party:{},color:"#FFFFFF",row:Math.floor(g/s),col:g%s};A.push(P)}let h=0;for(let g of l)for(let P=0;P<g.seats;P++)A[h].party=g,A[h].color=ze(g.party_abbreviation,h),A[h].total_seats=o,h++;return A}),t.$$.dirty&2048&&a(10,r=()=>{a(6,v=N()),a(5,u=i())}),t.$$.dirty&1024&&r()},[c,s,p,_,f,u,v,n,l,o,r,i,b,y,E]}class Ol extends me{constructor(e){super(),he(this,e,Il,Cl,be,{seats:8,total_seats:9,cols:1,offset:2,grid:3,hexagon_data:4,tooltipData:0})}}function Rl(t){const e=t-1;return e*e*e+1}function Sl(t,{delay:e=0,duration:a=400,easing:n=Se}={}){const i=+getComputedStyle(t).opacity;return{delay:e,duration:a,easing:n,css:r=>`opacity: ${r*i}`}}function Tl(t,{delay:e=0,duration:a=400,easing:n=Rl,x:i=0,y:r=0,opacity:l=0}={}){const o=getComputedStyle(t),s=+o.opacity,p=o.transform==="none"?"":o.transform,_=s*(1-l),[f,c]=za(i),[u,v]=za(r);return{delay:e,duration:a,easing:n,css:(N,b)=>`
			transform: ${p} translate(${(1-N)*f}${c}, ${(1-N)*u}${v});
			opacity: ${s-_*b}`}}function wn(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function Pl(t){let e,a,n,i,r,l,o=t[0].party.party_name+"",s,p,_,f,c,u,v,N,b,y,E,A=Math.round(t[0].party.vote_perc)+"",h,g,P,Y,H,W,Z,M=t[0].party.seats+"",S,K,J=t[0].total_seats+"",w,V,Q,ne,ee,Ee,T=wn(t[0].party.votes)+"",ie,le,_e,re,oe,je,Je;return Ge(t[8]),{c(){e=I("div"),a=I("div"),n=I("div"),i=I("div"),i.textContent="Party:",r=F(),l=I("div"),s=U(o),p=F(),_=I("div"),f=I("div"),f.textContent="Percentage of Seats Won in Limpopo",c=F(),u=I("div"),v=I("div"),N=I("div"),b=I("div"),y=F(),E=I("span"),h=U(A),g=U("%"),P=F(),Y=I("div"),H=I("div"),H.textContent="Total Number of Seats Won in Limpopo",W=F(),Z=I("div"),S=U(M),K=U(" / "),w=U(J),V=F(),Q=I("div"),ne=I("div"),ne.textContent="Total Votes",ee=F(),Ee=I("div"),ie=U(T),d(i,"class","electionengine-tooltip-thead svelte-z0ulgt"),d(l,"class","electionengine-tooltip-tdata svelte-z0ulgt"),d(n,"class","electionengine-tooltip-section svelte-z0ulgt"),d(f,"class","electionengine-tooltip-thead svelte-z0ulgt"),d(b,"class","electionengine-tooltip-inner svelte-z0ulgt"),ae(b,"width",t[0].party.vote_perc+"%"),ae(b,"background",t[0].color),d(N,"class","electionengine-tooltip-outer svelte-z0ulgt"),d(v,"class","electionengine-tooltip-range svelte-z0ulgt"),d(u,"class","electionengine-tooltip-range-wrapper electionengine-tooltip-tdata svelte-z0ulgt"),d(_,"class","electionengine-tooltip-section svelte-z0ulgt"),d(H,"class","electionengine-tooltip-thead svelte-z0ulgt"),d(Z,"class","electionengine-tooltip-tdata svelte-z0ulgt"),d(Y,"class","electionengine-tooltip-section svelte-z0ulgt"),d(ne,"class","electionengine-tooltip-thead svelte-z0ulgt"),d(Ee,"class","electionengine-tooltip-tdata svelte-z0ulgt"),d(Q,"class","electionengine-tooltip-section svelte-z0ulgt"),d(a,"class","electionengine-tooltip-container svelte-z0ulgt"),d(e,"class","electionengine-tooltip-wrapper svelte-z0ulgt"),ae(e,"border-left-color",t[0].color),ae(e,"top",t[5]+"px"),ae(e,"left",t[6]+"px"),Ge(()=>t[9].call(e))},m(te,se){R(te,e,se),m(e,a),m(a,n),m(n,i),m(n,r),m(n,l),m(l,s),m(a,p),m(a,_),m(_,f),m(_,c),m(_,u),m(u,v),m(v,N),m(N,b),m(u,y),m(u,E),m(E,h),m(E,g),m(a,P),m(a,Y),m(Y,H),m(Y,W),m(Y,Z),m(Z,S),m(Z,K),m(Z,w),m(a,V),m(a,Q),m(Q,ne),m(Q,ee),m(Q,Ee),m(Ee,ie),le=hr(e,t[9].bind(e)),oe=!0,je||(Je=$(window,"resize",t[8]),je=!0)},p(te,[se]){(!oe||se&1)&&o!==(o=te[0].party.party_name+"")&&X(s,o),(!oe||se&1)&&ae(b,"width",te[0].party.vote_perc+"%"),(!oe||se&1)&&ae(b,"background",te[0].color),(!oe||se&1)&&A!==(A=Math.round(te[0].party.vote_perc)+"")&&X(h,A),(!oe||se&1)&&M!==(M=te[0].party.seats+"")&&X(S,M),(!oe||se&1)&&J!==(J=te[0].total_seats+"")&&X(w,J),(!oe||se&1)&&T!==(T=wn(te[0].party.votes)+"")&&X(ie,T),(!oe||se&1)&&ae(e,"border-left-color",te[0].color),(!oe||se&32)&&ae(e,"top",te[5]+"px"),(!oe||se&64)&&ae(e,"left",te[6]+"px")},i(te){oe||(te&&Ge(()=>{oe&&(re&&re.end(1),_e=Mr(e,Tl,{y:10,duration:200,delay:200}),_e.start())}),oe=!0)},o(te){_e&&_e.invalidate(),te&&(re=Fr(e,Sl,{})),oe=!1},d(te){te&&O(e),le(),te&&re&&re.end(),je=!1,Je()}}}function Ml(t,e,a){let n,i,{tooltipData:r}=e,{grid:l}=e,o,s,p,_;const f=l?5:65,c=l?45:95;function u(){a(3,p=window.innerWidth),a(4,_=window.innerHeight)}function v(){o=this.clientWidth,s=this.clientHeight,a(1,o),a(2,s)}return t.$$set=N=>{"tooltipData"in N&&a(0,r=N.tooltipData),"grid"in N&&a(7,l=N.grid)},t.$$.update=()=>{t.$$.dirty&11&&a(6,n=r.x+o+f>p?r.x-o-f:r.x+f),t.$$.dirty&21&&a(5,i=r.y+s+c>_?r.y-s-c:r.y-c)},[r,o,s,p,_,i,n,l,u,v]}class Fl extends me{constructor(e){super(),he(this,e,Ml,Pl,be,{tooltipData:0,grid:7})}}function Ln(t,e,a){const n=t.slice();return n[9]=e[a],n}function kn(t){let e,a,n,i,r;function l(s){t[7](s)}let o={seats:t[9].province_result,total_seats:t[9].province_total_seats,hexagon_data:t[9],grid:t[0]};return t[1]!==void 0&&(o.tooltipData=t[1]),a=new Ol({props:o}),De.push(()=>xe(a,"tooltipData",l)),{c(){e=I("div"),Ie(a.$$.fragment),i=F(),d(e,"class","electionengine-block svelte-1pqi3kv"),ae(e,"left",t[9].x-t[9].width/2+"px"),ae(e,"top",t[9].y-t[9].height/2+"px"),G(e,"electionengine-grid-aligncenter",t[0])},m(s,p){R(s,e,p),Ne(a,e,null),m(e,i),r=!0},p(s,p){const _={};p&4&&(_.seats=s[9].province_result),p&4&&(_.total_seats=s[9].province_total_seats),p&4&&(_.hexagon_data=s[9]),p&1&&(_.grid=s[0]),!n&&p&2&&(n=!0,_.tooltipData=s[1],Ue(()=>n=!1)),a.$set(_),(!r||p&4)&&ae(e,"left",s[9].x-s[9].width/2+"px"),(!r||p&4)&&ae(e,"top",s[9].y-s[9].height/2+"px"),(!r||p&1)&&G(e,"electionengine-grid-aligncenter",s[0])},i(s){r||(k(a.$$.fragment,s),r=!0)},o(s){z(a.$$.fragment,s),r=!1},d(s){s&&O(e),Ae(a)}}}function Gn(t){let e,a,n;function i(l){t[8](l)}let r={grid:t[0]};return t[1]!==void 0&&(r.tooltipData=t[1]),e=new Fl({props:r}),De.push(()=>xe(e,"tooltipData",i)),{c(){Ie(e.$$.fragment)},m(l,o){Ne(e,l,o),n=!0},p(l,o){const s={};o&1&&(s.grid=l[0]),!a&&o&2&&(a=!0,s.tooltipData=l[1],Ue(()=>a=!1)),e.$set(s)},i(l){n||(k(e.$$.fragment,l),n=!0)},o(l){z(e.$$.fragment,l),n=!1},d(l){Ae(e,l)}}}function Dl(t){let e,a,n,i,r=j(t[2]),l=[];for(let p=0;p<r.length;p+=1)l[p]=kn(Ln(t,r,p));const o=p=>z(l[p],1,1,()=>{l[p]=null});let s=t[1]&&Gn(t);return{c(){e=I("div");for(let p=0;p<l.length;p+=1)l[p].c();a=F(),s&&s.c(),n=Pe(),d(e,"id","electionengine-cartogram"),d(e,"class","svelte-1pqi3kv"),G(e,"electionengine-mb-grid",t[0])},m(p,_){R(p,e,_);for(let f=0;f<l.length;f+=1)l[f]&&l[f].m(e,null);R(p,a,_),s&&s.m(p,_),R(p,n,_),i=!0},p(p,[_]){if(_&7){r=j(p[2]);let f;for(f=0;f<r.length;f+=1){const c=Ln(p,r,f);l[f]?(l[f].p(c,_),k(l[f],1)):(l[f]=kn(c),l[f].c(),k(l[f],1),l[f].m(e,null))}for(ge(),f=r.length;f<l.length;f+=1)o(f);Ce()}(!i||_&1)&&G(e,"electionengine-mb-grid",p[0]),p[1]?s?(s.p(p,_),_&2&&k(s,1)):(s=Gn(p),s.c(),k(s,1),s.m(n.parentNode,n)):s&&(ge(),z(s,1,1,()=>{s=null}),Ce())},i(p){if(!i){for(let _=0;_<r.length;_+=1)k(l[_]);k(s),i=!0}},o(p){l=l.filter(Boolean);for(let _=0;_<l.length;_+=1)z(l[_]);z(s),i=!1},d(p){p&&(O(e),O(a),O(n)),pe(l,p),s&&s.d(p)}}}function wl(t,e,a){let n,{path:i}=e,{provinces:r}=e,{grid:l}=e,{data:o}=e,s,p={};function _(c){s=c,a(1,s)}function f(c){s=c,a(1,s)}return t.$$set=c=>{"path"in c&&a(3,i=c.path),"provinces"in c&&a(4,r=c.provinces),"grid"in c&&a(0,l=c.grid),"data"in c&&a(5,o=c.data)},t.$$.update=()=>{t.$$.dirty&56&&a(6,n=()=>{a(2,p=r.map(c=>{const u=i.centroid(c),v=ml.filter(h=>c.properties.PROVINCE===h.region)[0],N=o.filter(h=>c.properties.PROVINCE===h.province_name)[0].party_ballot_results.filter(h=>h.seats>0),b=c.properties.PROVINCE,y=v.seat;return{province_id:b,province_total_seats:y,coords:u,region_seat:v,province_result:N,height:50,width:50,x:u[0],y:u[1]}}))}),t.$$.dirty&64&&n()},[l,s,p,i,r,o,n,_,f]}class Ll extends me{constructor(e){super(),he(this,e,wl,Dl,be,{path:3,provinces:4,grid:0,data:5})}}function Hn(t,e,a){const n=t.slice();return n[8]=e[a],n}function Vn(t){let e,a,n,i,r,l=!t[3]&&Un(t);function o(p){t[7](p)}let s={provinces:t[1],path:t[2],grid:t[3]};return t[0]!==void 0&&(s.data=t[0]),n=new Ll({props:s}),De.push(()=>xe(n,"data",o)),{c(){e=I("div"),l&&l.c(),a=F(),Ie(n.$$.fragment),d(e,"class","electionengine-svg-wrapper svelte-rkcw18")},m(p,_){R(p,e,_),l&&l.m(e,null),m(e,a),Ne(n,e,null),r=!0},p(p,_){p[3]?l&&(l.d(1),l=null):l?l.p(p,_):(l=Un(p),l.c(),l.m(e,a));const f={};_&2&&(f.provinces=p[1]),_&4&&(f.path=p[2]),_&8&&(f.grid=p[3]),!i&&_&1&&(i=!0,f.data=p[0],Ue(()=>i=!1)),n.$set(f)},i(p){r||(k(n.$$.fragment,p),r=!0)},o(p){z(n.$$.fragment,p),r=!1},d(p){p&&O(e),l&&l.d(),Ae(n)}}}function Un(t){let e,a,n=j(t[1]),i=[];for(let r=0;r<n.length;r+=1)i[r]=Yn(Hn(t,n,r));return{c(){e=L("svg"),a=L("g");for(let r=0;r<i.length;r+=1)i[r].c();d(a,"id","saMap"),d(e,"class","electionengine-map-svg svelte-rkcw18"),d(e,"width",xn),d(e,"height",Bn)},m(r,l){R(r,e,l),m(e,a);for(let o=0;o<i.length;o+=1)i[o]&&i[o].m(a,null)},p(r,l){if(l&6){n=j(r[1]);let o;for(o=0;o<n.length;o+=1){const s=Hn(r,n,o);i[o]?i[o].p(s,l):(i[o]=Yn(s),i[o].c(),i[o].m(a,null))}for(;o<i.length;o+=1)i[o].d(1);i.length=n.length}},d(r){r&&O(e),pe(i,r)}}}function Yn(t){let e,a;return{c(){e=L("path"),d(e,"d",a=t[2](t[8])),d(e,"fill","#ECECEC"),d(e,"stroke","white"),d(e,"stroke-width","0.94")},m(n,i){R(n,e,i)},p(n,i){i&6&&a!==(a=n[2](n[8]))&&d(e,"d",a)},d(n){n&&O(e)}}}function kl(t){let e,a,n=t[1]&&Vn(t);return{c(){n&&n.c(),e=Pe()},m(i,r){n&&n.m(i,r),R(i,e,r),a=!0},p(i,[r]){i[1]?n?(n.p(i,r),r&2&&k(n,1)):(n=Vn(i),n.c(),k(n,1),n.m(e.parentNode,e)):n&&(ge(),z(n,1,1,()=>{n=null}),Ce())},i(i){a||(k(n),a=!0)},o(i){z(n),a=!1},d(i){i&&O(e),n&&n.d(i)}}}let xn=600,Bn=600;async function Gl(){return(await fetch("https://iec-api.revengine.dailymaverick.co.za/maps/sa-province.smallest.min.json")).json()}function Hl(t,e,a){let n,i,r,{data:l}=e,{innerWidth:o}=e,s,p;Xe(async()=>{a(5,p=await Gl()),a(1,s=p.features)});function _(f){l=f,a(0,l)}return t.$$set=f=>{"data"in f&&a(0,l=f.data),"innerWidth"in f&&a(4,o=f.innerWidth)},t.$$.update=()=>{t.$$.dirty&16&&a(3,n=o<630),t.$$.dirty&32&&a(6,i=On().reflectY(!0).fitExtent([[20,20],[xn,Bn]],p)),t.$$.dirty&64&&a(2,r=Cn(i))},[l,s,r,n,o,p,i,_]}class Vl extends me{constructor(e){super(),he(this,e,Hl,kl,be,{data:0,innerWidth:4})}}function zn(t,e,a){const n=t.slice();return n[4]=e[a],n}function Wn(t){let e,a,n,i,r,l,o,s=t[4].name+"",p,_,f=t[4].seats+"",c,u,v;return{c(){e=I("div"),a=L("svg"),n=L("g"),i=L("polygon"),l=F(),o=I("div"),p=U(s),_=U(" ["),c=U(f),u=U("]"),v=F(),d(i,"points","5,0 10,2.75 10,8.25 5,11 0,8.25 0,2.75"),d(n,"transform","translate(1, 1)"),d(n,"fill",r=t[4].color),d(n,"fill-rule","nonzero"),d(n,"stroke","#444444"),d(a,"width","12px"),d(a,"height","13px"),d(o,"class","electionengine-legend-partyname svelte-1kpvmh3"),d(e,"class","party-wrapper svelte-1kpvmh3")},m(N,b){R(N,e,b),m(e,a),m(a,n),m(n,i),m(e,l),m(e,o),m(o,p),m(o,_),m(o,c),m(o,u),m(e,v)},p(N,b){b&1&&r!==(r=N[4].color)&&d(n,"fill",r),b&1&&s!==(s=N[4].name+"")&&X(p,s),b&1&&f!==(f=N[4].seats+"")&&X(c,f)},d(N){N&&O(e)}}}function Ul(t){let e,a,n,i,r=j(t[0]),l=[];for(let o=0;o<r.length;o+=1)l[o]=Wn(zn(t,r,o));return{c(){e=I("div"),a=I("div"),a.textContent="Legend: Party Colors",n=F(),i=I("div");for(let o=0;o<l.length;o+=1)l[o].c();d(a,"class","electionengine-legend-heading svelte-1kpvmh3"),d(i,"class","legend svelte-1kpvmh3"),d(e,"class","legend-wrapper svelte-1kpvmh3")},m(o,s){R(o,e,s),m(e,a),m(e,n),m(e,i);for(let p=0;p<l.length;p+=1)l[p]&&l[p].m(i,null)},p(o,[s]){if(s&1){r=j(o[0]);let p;for(p=0;p<r.length;p+=1){const _=zn(o,r,p);l[p]?l[p].p(_,s):(l[p]=Wn(_),l[p].c(),l[p].m(i,null))}for(;p<l.length;p+=1)l[p].d(1);l.length=r.length}},i:q,o:q,d(o){o&&O(e),pe(l,o)}}}function Yl(t){const e={};return t.forEach(a=>{a.party_ballot_results.forEach(n=>{e[n.party_abbreviation]?e[n.party_abbreviation]+=n.seats:e[n.party_abbreviation]=n.seats})}),e}function xl(t,e,a){let n,{data:i}=e,r;for(const[l,o]of Object.entries(Rn));return t.$$set=l=>{"data"in l&&a(1,i=l.data)},t.$$.update=()=>{t.$$.dirty&3&&a(2,n=()=>{const l=Yl(i);return a(0,r=Object.keys(l).sort((o,s)=>l[s]-l[o]).map((o,s)=>({name:o,seats:l[o],color:ze(o,s)})).filter(o=>o.seats>0)),r}),t.$$.dirty&4&&n()},[r,i,n]}class Bl extends me{constructor(e){super(),he(this,e,xl,Ul,be,{data:1})}}function Zn(t){let e,a,n;function i(l){t[2](l)}let r={};return t[0]!==void 0&&(r.data=t[0]),e=new Bl({props:r}),De.push(()=>xe(e,"data",i)),{c(){Ie(e.$$.fragment)},m(l,o){Ne(e,l,o),n=!0},p(l,o){const s={};!a&&o&1&&(a=!0,s.data=l[0],Ue(()=>a=!1)),e.$set(s)},i(l){n||(k(e.$$.fragment,l),n=!0)},o(l){z(e.$$.fragment,l),n=!1},d(l){Ae(e,l)}}}function Kn(t){let e,a,n;function i(l){t[3](l)}let r={innerWidth:t[1]};return t[0]!==void 0&&(r.data=t[0]),e=new Vl({props:r}),De.push(()=>xe(e,"data",i)),{c(){Ie(e.$$.fragment)},m(l,o){Ne(e,l,o),n=!0},p(l,o){const s={};o&2&&(s.innerWidth=l[1]),!a&&o&1&&(a=!0,s.data=l[0],Ue(()=>a=!1)),e.$set(s)},i(l){n||(k(e.$$.fragment,l),n=!0)},o(l){z(e.$$.fragment,l),n=!1},d(l){Ae(e,l)}}}function zl(t){let e,a,n,i,r,l=t[0]&&Zn(t),o=t[0]&&Kn(t);return{c(){l&&l.c(),e=F(),a=I("p"),a.textContent=`200 Regional Seats, divided between the regions* based on registered population, prior to the elections. The regions
  are contested by parties and independent candidates.`,n=F(),o&&o.c(),i=Pe(),d(a,"class","svelte-1oxvhsg")},m(s,p){l&&l.m(s,p),R(s,e,p),R(s,a,p),R(s,n,p),o&&o.m(s,p),R(s,i,p),r=!0},p(s,[p]){s[0]?l?(l.p(s,p),p&1&&k(l,1)):(l=Zn(s),l.c(),k(l,1),l.m(e.parentNode,e)):l&&(ge(),z(l,1,1,()=>{l=null}),Ce()),s[0]?o?(o.p(s,p),p&1&&k(o,1)):(o=Kn(s),o.c(),k(o,1),o.m(i.parentNode,i)):o&&(ge(),z(o,1,1,()=>{o=null}),Ce())},i(s){r||(k(l),k(o),r=!0)},o(s){z(l),z(o),r=!1},d(s){s&&(O(e),O(a),O(n),O(i)),l&&l.d(s),o&&o.d(s)}}}function Wl(t,e,a){let{data:n}=e,{innerWidth:i}=e;function r(o){n=o,a(0,n)}function l(o){n=o,a(0,n)}return t.$$set=o=>{"data"in o&&a(0,n=o.data),"innerWidth"in o&&a(1,i=o.innerWidth)},[n,i,r,l]}class Zl extends me{constructor(e){super(),he(this,e,Wl,zl,be,{data:0,innerWidth:1})}}function Kl(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t);break}return this}function Ta(t,e,a){t.prototype=e.prototype=a,a.constructor=t}function qn(t,e){var a=Object.create(t.prototype);for(var n in e)a[n]=e[n];return a}function Ot(){}var Rt=.7,qt=1/Rt,pt="\\s*([+-]?\\d+)\\s*",St="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",ke="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",ql=/^#([0-9a-f]{3,8})$/,jl=new RegExp(`^rgb\\(${pt},${pt},${pt}\\)$`),Jl=new RegExp(`^rgb\\(${ke},${ke},${ke}\\)$`),Ql=new RegExp(`^rgba\\(${pt},${pt},${pt},${St}\\)$`),Xl=new RegExp(`^rgba\\(${ke},${ke},${ke},${St}\\)$`),$l=new RegExp(`^hsl\\(${St},${ke},${ke}\\)$`),eo=new RegExp(`^hsla\\(${St},${ke},${ke},${St}\\)$`),jn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Ta(Ot,Tt,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Jn,formatHex:Jn,formatHex8:to,formatHsl:ao,formatRgb:Qn,toString:Qn});function Jn(){return this.rgb().formatHex()}function to(){return this.rgb().formatHex8()}function ao(){return ai(this).formatHsl()}function Qn(){return this.rgb().formatRgb()}function Tt(t){var e,a;return t=(t+"").trim().toLowerCase(),(e=ql.exec(t))?(a=e[1].length,e=parseInt(e[1],16),a===6?Xn(e):a===3?new ve(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):a===8?jt(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):a===4?jt(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=jl.exec(t))?new ve(e[1],e[2],e[3],1):(e=Jl.exec(t))?new ve(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=Ql.exec(t))?jt(e[1],e[2],e[3],e[4]):(e=Xl.exec(t))?jt(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=$l.exec(t))?ti(e[1],e[2]/100,e[3]/100,1):(e=eo.exec(t))?ti(e[1],e[2]/100,e[3]/100,e[4]):jn.hasOwnProperty(t)?Xn(jn[t]):t==="transparent"?new ve(NaN,NaN,NaN,0):null}function Xn(t){return new ve(t>>16&255,t>>8&255,t&255,1)}function jt(t,e,a,n){return n<=0&&(t=e=a=NaN),new ve(t,e,a,n)}function no(t){return t instanceof Ot||(t=Tt(t)),t?(t=t.rgb(),new ve(t.r,t.g,t.b,t.opacity)):new ve}function Pt(t,e,a,n){return arguments.length===1?no(t):new ve(t,e,a,n??1)}function ve(t,e,a,n){this.r=+t,this.g=+e,this.b=+a,this.opacity=+n}Ta(ve,Pt,qn(Ot,{brighter(t){return t=t==null?qt:Math.pow(qt,t),new ve(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?Rt:Math.pow(Rt,t),new ve(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new ve(We(this.r),We(this.g),We(this.b),Jt(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:$n,formatHex:$n,formatHex8:io,formatRgb:ei,toString:ei}));function $n(){return`#${Ze(this.r)}${Ze(this.g)}${Ze(this.b)}`}function io(){return`#${Ze(this.r)}${Ze(this.g)}${Ze(this.b)}${Ze((isNaN(this.opacity)?1:this.opacity)*255)}`}function ei(){const t=Jt(this.opacity);return`${t===1?"rgb(":"rgba("}${We(this.r)}, ${We(this.g)}, ${We(this.b)}${t===1?")":`, ${t})`}`}function Jt(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function We(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function Ze(t){return t=We(t),(t<16?"0":"")+t.toString(16)}function ti(t,e,a,n){return n<=0?t=e=a=NaN:a<=0||a>=1?t=e=NaN:e<=0&&(t=NaN),new Me(t,e,a,n)}function ai(t){if(t instanceof Me)return new Me(t.h,t.s,t.l,t.opacity);if(t instanceof Ot||(t=Tt(t)),!t)return new Me;if(t instanceof Me)return t;t=t.rgb();var e=t.r/255,a=t.g/255,n=t.b/255,i=Math.min(e,a,n),r=Math.max(e,a,n),l=NaN,o=r-i,s=(r+i)/2;return o?(e===r?l=(a-n)/o+(a<n)*6:a===r?l=(n-e)/o+2:l=(e-a)/o+4,o/=s<.5?r+i:2-r-i,l*=60):o=s>0&&s<1?0:l,new Me(l,o,s,t.opacity)}function ni(t,e,a,n){return arguments.length===1?ai(t):new Me(t,e,a,n??1)}function Me(t,e,a,n){this.h=+t,this.s=+e,this.l=+a,this.opacity=+n}Ta(Me,ni,qn(Ot,{brighter(t){return t=t==null?qt:Math.pow(qt,t),new Me(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?Rt:Math.pow(Rt,t),new Me(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,a=this.l,n=a+(a<.5?a:1-a)*e,i=2*a-n;return new ve(Pa(t>=240?t-240:t+120,i,n),Pa(t,i,n),Pa(t<120?t+240:t-120,i,n),this.opacity)},clamp(){return new Me(ii(this.h),Qt(this.s),Qt(this.l),Jt(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=Jt(this.opacity);return`${t===1?"hsl(":"hsla("}${ii(this.h)}, ${Qt(this.s)*100}%, ${Qt(this.l)*100}%${t===1?")":`, ${t})`}`}}));function ii(t){return t=(t||0)%360,t<0?t+360:t}function Qt(t){return Math.max(0,Math.min(1,t||0))}function Pa(t,e,a){return(t<60?e+(a-e)*t/60:t<180?a:t<240?e+(a-e)*(240-t)/60:e)*255}const Ma=t=>()=>t;function ro(t,e){return function(a){return t+a*e}}function lo(t,e,a){return t=Math.pow(t,a),e=Math.pow(e,a)-t,a=1/a,function(n){return Math.pow(t+n*e,a)}}function oo(t){return(t=+t)==1?ri:function(e,a){return a-e?lo(e,a,t):Ma(isNaN(e)?a:e)}}function ri(t,e){var a=e-t;return a?ro(t,a):Ma(isNaN(t)?e:t)}const li=function t(e){var a=oo(e);function n(i,r){var l=a((i=Pt(i)).r,(r=Pt(r)).r),o=a(i.g,r.g),s=a(i.b,r.b),p=ri(i.opacity,r.opacity);return function(_){return i.r=l(_),i.g=o(_),i.b=s(_),i.opacity=p(_),i+""}}return n.gamma=t,n}(1);function so(t,e){e||(e=[]);var a=t?Math.min(e.length,t.length):0,n=e.slice(),i;return function(r){for(i=0;i<a;++i)n[i]=t[i]*(1-r)+e[i]*r;return n}}function po(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function _o(t,e){var a=e?e.length:0,n=t?Math.min(a,t.length):0,i=new Array(n),r=new Array(a),l;for(l=0;l<n;++l)i[l]=wa(t[l],e[l]);for(;l<a;++l)r[l]=e[l];return function(o){for(l=0;l<n;++l)r[l]=i[l](o);return r}}function fo(t,e){var a=new Date;return t=+t,e=+e,function(n){return a.setTime(t*(1-n)+e*n),a}}function Xt(t,e){return t=+t,e=+e,function(a){return t*(1-a)+e*a}}function co(t,e){var a={},n={},i;(t===null||typeof t!="object")&&(t={}),(e===null||typeof e!="object")&&(e={});for(i in e)i in t?a[i]=wa(t[i],e[i]):n[i]=e[i];return function(r){for(i in a)n[i]=a[i](r);return n}}var Fa=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Da=new RegExp(Fa.source,"g");function uo(t){return function(){return t}}function vo(t){return function(e){return t(e)+""}}function yo(t,e){var a=Fa.lastIndex=Da.lastIndex=0,n,i,r,l=-1,o=[],s=[];for(t=t+"",e=e+"";(n=Fa.exec(t))&&(i=Da.exec(e));)(r=i.index)>a&&(r=e.slice(a,r),o[l]?o[l]+=r:o[++l]=r),(n=n[0])===(i=i[0])?o[l]?o[l]+=i:o[++l]=i:(o[++l]=null,s.push({i:l,x:Xt(n,i)})),a=Da.lastIndex;return a<e.length&&(r=e.slice(a),o[l]?o[l]+=r:o[++l]=r),o.length<2?s[0]?vo(s[0].x):uo(e):(e=s.length,function(p){for(var _=0,f;_<e;++_)o[(f=s[_]).i]=f.x(p);return o.join("")})}function wa(t,e){var a=typeof e,n;return e==null||a==="boolean"?Ma(e):(a==="number"?Xt:a==="string"?(n=Tt(e))?(e=n,li):yo:e instanceof Tt?li:e instanceof Date?fo:po(e)?so:Array.isArray(e)?_o:typeof e.valueOf!="function"&&typeof e.toString!="function"||isNaN(e)?co:Xt)(t,e)}function bo(t,e){return t=+t,e=+e,function(a){return Math.round(t*(1-a)+e*a)}}function No(t){return function(){return t}}function Ao(t){return+t}var oi=[0,1];function _t(t){return t}function La(t,e){return(e-=t=+t)?function(a){return(a-t)/e}:No(isNaN(e)?NaN:.5)}function ho(t,e){var a;return t>e&&(a=t,t=e,e=a),function(n){return Math.max(t,Math.min(e,n))}}function mo(t,e,a){var n=t[0],i=t[1],r=e[0],l=e[1];return i<n?(n=La(i,n),r=a(l,r)):(n=La(n,i),r=a(r,l)),function(o){return r(n(o))}}function Eo(t,e,a){var n=Math.min(t.length,e.length)-1,i=new Array(n),r=new Array(n),l=-1;for(t[n]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++l<n;)i[l]=La(t[l],t[l+1]),r[l]=a(e[l],e[l+1]);return function(o){var s=Yr(t,o,1,n)-1;return r[s](i[s](o))}}function go(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function Co(){var t=oi,e=oi,a=wa,n,i,r,l=_t,o,s,p;function _(){var c=Math.min(t.length,e.length);return l!==_t&&(l=ho(t[0],t[c-1])),o=c>2?Eo:mo,s=p=null,f}function f(c){return c==null||isNaN(c=+c)?r:(s||(s=o(t.map(n),e,a)))(n(l(c)))}return f.invert=function(c){return l(i((p||(p=o(e,t.map(n),Xt)))(c)))},f.domain=function(c){return arguments.length?(t=Array.from(c,Ao),_()):t.slice()},f.range=function(c){return arguments.length?(e=Array.from(c),_()):e.slice()},f.rangeRound=function(c){return e=Array.from(c),a=bo,_()},f.clamp=function(c){return arguments.length?(l=c?!0:_t,_()):l!==_t},f.interpolate=function(c){return arguments.length?(a=c,_()):a},f.unknown=function(c){return arguments.length?(r=c,f):r},function(c,u){return n=c,i=u,_()}}function Io(){return Co()(_t,_t)}function Oo(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)}function $t(t,e){if((a=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var a,n=t.slice(0,a);return[n.length>1?n[0]+n.slice(2):n,+t.slice(a+1)]}function ft(t){return t=$t(Math.abs(t)),t?t[1]:NaN}function Ro(t,e){return function(a,n){for(var i=a.length,r=[],l=0,o=t[0],s=0;i>0&&o>0&&(s+o+1>n&&(o=Math.max(1,n-s)),r.push(a.substring(i-=o,i+o)),!((s+=o+1)>n));)o=t[l=(l+1)%t.length];return r.reverse().join(e)}}function So(t){return function(e){return e.replace(/[0-9]/g,function(a){return t[+a]})}}var To=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ea(t){if(!(e=To.exec(t)))throw new Error("invalid format: "+t);var e;return new ka({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}ea.prototype=ka.prototype;function ka(t){this.fill=t.fill===void 0?" ":t.fill+"",this.align=t.align===void 0?">":t.align+"",this.sign=t.sign===void 0?"-":t.sign+"",this.symbol=t.symbol===void 0?"":t.symbol+"",this.zero=!!t.zero,this.width=t.width===void 0?void 0:+t.width,this.comma=!!t.comma,this.precision=t.precision===void 0?void 0:+t.precision,this.trim=!!t.trim,this.type=t.type===void 0?"":t.type+""}ka.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function Po(t){e:for(var e=t.length,a=1,n=-1,i;a<e;++a)switch(t[a]){case".":n=i=a;break;case"0":n===0&&(n=a),i=a;break;default:if(!+t[a])break e;n>0&&(n=0);break}return n>0?t.slice(0,n)+t.slice(i+1):t}var si;function Mo(t,e){var a=$t(t,e);if(!a)return t+"";var n=a[0],i=a[1],r=i-(si=Math.max(-8,Math.min(8,Math.floor(i/3)))*3)+1,l=n.length;return r===l?n:r>l?n+new Array(r-l+1).join("0"):r>0?n.slice(0,r)+"."+n.slice(r):"0."+new Array(1-r).join("0")+$t(t,Math.max(0,e+r-1))[0]}function pi(t,e){var a=$t(t,e);if(!a)return t+"";var n=a[0],i=a[1];return i<0?"0."+new Array(-i).join("0")+n:n.length>i+1?n.slice(0,i+1)+"."+n.slice(i+1):n+new Array(i-n.length+2).join("0")}const _i={"%":(t,e)=>(t*100).toFixed(e),b:t=>Math.round(t).toString(2),c:t=>t+"",d:Oo,e:(t,e)=>t.toExponential(e),f:(t,e)=>t.toFixed(e),g:(t,e)=>t.toPrecision(e),o:t=>Math.round(t).toString(8),p:(t,e)=>pi(t*100,e),r:pi,s:Mo,X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function fi(t){return t}var ci=Array.prototype.map,di=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function Fo(t){var e=t.grouping===void 0||t.thousands===void 0?fi:Ro(ci.call(t.grouping,Number),t.thousands+""),a=t.currency===void 0?"":t.currency[0]+"",n=t.currency===void 0?"":t.currency[1]+"",i=t.decimal===void 0?".":t.decimal+"",r=t.numerals===void 0?fi:So(ci.call(t.numerals,String)),l=t.percent===void 0?"%":t.percent+"",o=t.minus===void 0?"−":t.minus+"",s=t.nan===void 0?"NaN":t.nan+"";function p(f){f=ea(f);var c=f.fill,u=f.align,v=f.sign,N=f.symbol,b=f.zero,y=f.width,E=f.comma,A=f.precision,h=f.trim,g=f.type;g==="n"?(E=!0,g="g"):_i[g]||(A===void 0&&(A=12),h=!0,g="g"),(b||c==="0"&&u==="=")&&(b=!0,c="0",u="=");var P=N==="$"?a:N==="#"&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",Y=N==="$"?n:/[%p]/.test(g)?l:"",H=_i[g],W=/[defgprs%]/.test(g);A=A===void 0?6:/[gprs]/.test(g)?Math.max(1,Math.min(21,A)):Math.max(0,Math.min(20,A));function Z(M){var S=P,K=Y,J,w,V;if(g==="c")K=H(M)+K,M="";else{M=+M;var Q=M<0||1/M<0;if(M=isNaN(M)?s:H(Math.abs(M),A),h&&(M=Po(M)),Q&&+M==0&&v!=="+"&&(Q=!1),S=(Q?v==="("?v:o:v==="-"||v==="("?"":v)+S,K=(g==="s"?di[8+si/3]:"")+K+(Q&&v==="("?")":""),W){for(J=-1,w=M.length;++J<w;)if(V=M.charCodeAt(J),48>V||V>57){K=(V===46?i+M.slice(J+1):M.slice(J))+K,M=M.slice(0,J);break}}}E&&!b&&(M=e(M,1/0));var ne=S.length+M.length+K.length,ee=ne<y?new Array(y-ne+1).join(c):"";switch(E&&b&&(M=e(ee+M,ee.length?y-K.length:1/0),ee=""),u){case"<":M=S+M+K+ee;break;case"=":M=S+ee+M+K;break;case"^":M=ee.slice(0,ne=ee.length>>1)+S+M+K+ee.slice(ne);break;default:M=ee+S+M+K;break}return r(M)}return Z.toString=function(){return f+""},Z}function _(f,c){var u=p((f=ea(f),f.type="f",f)),v=Math.max(-8,Math.min(8,Math.floor(ft(c)/3)))*3,N=Math.pow(10,-v),b=di[8+v/3];return function(y){return u(N*y)+b}}return{format:p,formatPrefix:_}}var ta,ui,vi;Do({thousands:",",grouping:[3],currency:["$",""]});function Do(t){return ta=Fo(t),ui=ta.format,vi=ta.formatPrefix,ta}function wo(t){return Math.max(0,-ft(Math.abs(t)))}function Lo(t,e){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(ft(e)/3)))*3-ft(Math.abs(t)))}function ko(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,ft(e)-ft(t))+1}function Go(t,e,a,n){var i=Kr(t,e,a),r;switch(n=ea(n??",f"),n.type){case"s":{var l=Math.max(Math.abs(t),Math.abs(e));return n.precision==null&&!isNaN(r=Lo(i,l))&&(n.precision=r),vi(n,l)}case"":case"e":case"g":case"p":case"r":{n.precision==null&&!isNaN(r=ko(i,Math.max(Math.abs(t),Math.abs(e))))&&(n.precision=r-(n.type==="e"));break}case"f":case"%":{n.precision==null&&!isNaN(r=wo(i))&&(n.precision=r-(n.type==="%")*2);break}}return ui(n)}function Ho(t){var e=t.domain;return t.ticks=function(a){var n=e();return Zr(n[0],n[n.length-1],a??10)},t.tickFormat=function(a,n){var i=e();return Go(i[0],i[i.length-1],a??10,n)},t.nice=function(a){a==null&&(a=10);var n=e(),i=0,r=n.length-1,l=n[i],o=n[r],s,p,_=10;for(o<l&&(p=l,l=o,o=p,p=i,i=r,r=p);_-- >0;){if(p=ca(l,o,a),p===s)return n[i]=l,n[r]=o,e(n);if(p>0)l=Math.floor(l/p)*p,o=Math.ceil(o/p)*p;else if(p<0)l=Math.ceil(l*p)/p,o=Math.floor(o*p)/p;else break;s=p}return t},t}function yi(){var t=Io();return t.copy=function(){return go(t,yi())},Kl.apply(t,arguments),Ho(t)}const Vo=[{region:"Eastern Cape",endpoint:"ec"},{region:"Free State",endpoint:"fs"},{region:"Gauteng",endpoint:"gp"},{region:"KwaZulu-Natal",endpoint:"kzn"},{region:"Limpopo",endpoint:"lp"},{region:"Mpumalanga",endpoint:"mp"},{region:"North West",endpoint:"nw"},{region:"Northern Cape",endpoint:"nc"},{region:"Western Cape",endpoint:"wc"}];function bi(t,e,a){const n=t.slice();return n[18]=e[a],n[20]=a,n}function Ni(t,e,a){const n=t.slice();return n[21]=e[a],n}function Ai(t){let e,a=t[21]+"",n,i,r,l;function o(){return t[12](t[21])}return{c(){e=I("button"),n=U(a),i=F(),d(e,"class","electionengine-year-button svelte-14fji6k"),G(e,"selected",t[0]===t[21])},m(s,p){R(s,e,p),m(e,n),m(e,i),r||(l=$(e,"click",o),r=!0)},p(s,p){t=s,p&2&&a!==(a=t[21]+"")&&X(n,a),p&3&&G(e,"selected",t[0]===t[21])},d(s){s&&O(e),r=!1,l()}}}function Uo(t){let e;return{c(){e=I("p"),e.textContent="checking out"},m(a,n){R(a,e,n)},p:q,d(a){a&&O(e)}}}function Yo(t){let e,a,n,i=j(t[2]),r=[];for(let l=0;l<i.length;l+=1)r[l]=hi(bi(t,i,l));return{c(){e=I("div"),a=L("svg"),n=L("g");for(let l=0;l<r.length;l+=1)r[l].c();d(n,"id","saMap"),d(a,"class","electionengine-map-svg"),d(a,"width",Ei),d(a,"height",gi),d(e,"class","electionengine-svg-wrapper")},m(l,o){R(l,e,o),m(e,a),m(a,n);for(let s=0;s<r.length;s+=1)r[s]&&r[s].m(n,null)},p(l,o){if(o&28){i=j(l[2]);let s;for(s=0;s<i.length;s+=1){const p=bi(l,i,s);r[s]?r[s].p(p,o):(r[s]=hi(p),r[s].c(),r[s].m(n,null))}for(;s<r.length;s+=1)r[s].d(1);r.length=i.length}},d(l){l&&O(e),pe(r,l)}}}function hi(t){let e,a,n,i;return{c(){e=L("path"),d(e,"data-perc",a=t[18].properties.highest_party_result.vote_perc),d(e,"d",n=t[3](t[18])),d(e,"fill",i=t[4](t[18],t[20])),d(e,"stroke","white"),d(e,"stroke-width","0.94")},m(r,l){R(r,e,l)},p(r,l){l&4&&a!==(a=r[18].properties.highest_party_result.vote_perc)&&d(e,"data-perc",a),l&12&&n!==(n=r[3](r[18]))&&d(e,"d",n),l&20&&i!==(i=r[4](r[18],r[20]))&&d(e,"fill",i)},d(r){r&&O(e)}}}function xo(t){let e,a,n,i=j(t[1]),r=[];for(let p=0;p<i.length;p+=1)r[p]=Ai(Ni(t,i,p));function l(p,_){return p[2]?Yo:Uo}let o=l(t),s=o(t);return{c(){e=I("div");for(let p=0;p<r.length;p+=1)r[p].c();a=F(),s.c(),n=Pe(),d(e,"class","electionengine-button-wrapper")},m(p,_){R(p,e,_);for(let f=0;f<r.length;f+=1)r[f]&&r[f].m(e,null);R(p,a,_),s.m(p,_),R(p,n,_)},p(p,[_]){if(_&35){i=j(p[1]);let f;for(f=0;f<i.length;f+=1){const c=Ni(p,i,f);r[f]?r[f].p(c,_):(r[f]=Ai(c),r[f].c(),r[f].m(e,null))}for(;f<r.length;f+=1)r[f].d(1);r.length=i.length}o===(o=l(p))&&s?s.p(p,_):(s.d(1),s=o(p),s&&(s.c(),s.m(n.parentNode,n)))},i:q,o:q,d(p){p&&(O(e),O(a),O(n)),pe(r,p),s.d(p)}}}let Bo="Provincial Legislature";const mi="https://iec-api.revengine.dailymaverick.co.za";let Ei=600,gi=600;async function Ci(t){return(await fetch(t)).json()}function zo(t,e,a){let n,i,r,l,{selected_year:o=2024}=e,{selected_region:s="Eastern Cape"}=e,{provinces:p}=e,{data:_}=e,f="ec",c=`${mi}/maps/${o}/sa-munic-${f}.geojson.min.json`,u,v,N,b,y=[];Xe(async()=>{a(0,s="Eastern Cape"),a(8,u=await Ci(c)),v=u.features,a(6,_=await E(o,s)),b=g=>{const P=[];for(let H in g){const W={municipal_code:g[H].municipality_name.split(" ")[0]},Z=g[H].party_ballot_results.reduce((M,S)=>S.vote_perc>M.vote_perc?S:M,g[H].party_ballot_results[0]);console.log(Z),P.push(Object.assign(Z,W))}return a(9,y=P),v.map(H=>{const W=P.find(Z=>Z.municipal_code===H.properties.MUNI_CODE);return W&&(H.properties.highest_party_result=W),H})},a(2,N=b(_))});async function E(g,P){if(P!=="National")return(await at({year:g,election:Bo,region:P})).municipal_results}async function A(g){a(0,s=g),a(6,_=await E(o,g)),f=Vo.filter(P=>P.region===g)[0].endpoint,c=`${mi}/maps/${o}/sa-munic-${f}.geojson.min.json`,a(8,u=await Ci(c)),v=u.features,a(2,N=b(_))}const h=g=>A(g);return t.$$set=g=>{"selected_year"in g&&a(7,o=g.selected_year),"selected_region"in g&&a(0,s=g.selected_region),"provinces"in g&&a(1,p=g.provinces),"data"in g&&a(6,_=g.data)},t.$$.update=()=>{t.$$.dirty&512&&a(11,n=yi().domain(xr(y,g=>g.vote_perc)).range([40,100])),t.$$.dirty&2048&&a(4,i=(g,P)=>{const Y=ze(g.properties.highest_party_result.party_abbreviation,P);let{r:H,g:W,b:Z}=Pt(ni(Y));const M=n(g.properties.highest_party_result.vote_perc)/100;return Pt(H,W,Z,M)}),t.$$.dirty&256&&a(10,r=On().reflectY(!0).fitExtent([[20,20],[Ei,gi]],u)),t.$$.dirty&1024&&a(3,l=Cn(r))},[s,p,N,l,i,A,_,o,u,y,r,n,h]}class Wo extends me{constructor(e){super(),he(this,e,zo,xo,be,{selected_year:7,selected_region:0,provinces:1,data:6})}}const Ke=[2009,2014,2019,2024],qe=["Eastern Cape","Free State","Gauteng","KwaZulu-Natal","Limpopo","Mpumalanga","North West","Northern Cape","Western Cape","Out of Country"];function Ii(t,e,a){const n=t.slice();return n[18]=e[a],n}function Oi(t){let e,a,n,i,r,l,o,s,p=j(Ke),_=[];for(let f=0;f<p.length;f+=1)_[f]=Ri(Ii(t,p,f));return{c(){e=I("div"),a=I("button"),a.textContent="National Assembly",n=F(),i=I("button"),i.textContent="Provincial Legislature",r=F(),l=I("div");for(let f=0;f<_.length;f+=1)_[f].c();d(a,"class","svelte-1j8fxw"),G(a,"selected",t[1]==="National Assembly"),d(i,"class","svelte-1j8fxw"),G(i,"selected",t[1]==="Provincial Legislature"),d(e,"class","electionengine-selectbutton-wrapper svelte-1j8fxw"),d(l,"class","electionengine-selectbutton-wrapper svelte-1j8fxw")},m(f,c){R(f,e,c),m(e,a),m(e,n),m(e,i),R(f,r,c),R(f,l,c);for(let u=0;u<_.length;u+=1)_[u]&&_[u].m(l,null);o||(s=[$(a,"click",t[11]),$(i,"click",t[12])],o=!0)},p(f,c){if(c&2&&G(a,"selected",f[1]==="National Assembly"),c&2&&G(i,"selected",f[1]==="Provincial Legislature"),c&257){p=j(Ke);let u;for(u=0;u<p.length;u+=1){const v=Ii(f,p,u);_[u]?_[u].p(v,c):(_[u]=Ri(v),_[u].c(),_[u].m(l,null))}for(;u<_.length;u+=1)_[u].d(1);_.length=p.length}},d(f){f&&(O(e),O(r),O(l)),pe(_,f),o=!1,Te(s)}}}function Ri(t){let e,a,n;function i(){return t[13](t[18])}return{c(){e=I("button"),e.textContent=`${t[18]}`,d(e,"class","svelte-1j8fxw"),G(e,"selected",t[0]===t[18])},m(r,l){R(r,e,l),a||(n=$(e,"click",i),a=!0)},p(r,l){t=r,l&1&&G(e,"selected",t[0]===t[18])},d(r){r&&O(e),a=!1,n()}}}function Zo(t){let e;return{c(){e=I("div"),e.textContent="...Loading"},m(a,n){R(a,e,n)},p:q,i:q,o:q,d(a){a&&O(e)}}}function Ko(t){let e,a,n,i;const r=[jo,qo],l=[];function o(s,p){return s[1]==="National Assembly"?0:s[1]==="Provincial Legislature"?1:-1}return~(e=o(t))&&(a=l[e]=r[e](t)),{c(){a&&a.c(),n=Pe()},m(s,p){~e&&l[e].m(s,p),R(s,n,p),i=!0},p(s,p){let _=e;e=o(s),e===_?~e&&l[e].p(s,p):(a&&(ge(),z(l[_],1,1,()=>{l[_]=null}),Ce()),~e?(a=l[e],a?a.p(s,p):(a=l[e]=r[e](s),a.c()),k(a,1),a.m(n.parentNode,n)):a=null)},i(s){i||(k(a),i=!0)},o(s){z(a),i=!1},d(s){s&&O(n),~e&&l[e].d(s)}}}function qo(t){let e,a,n,i;function r(s){t[14](s)}function l(s){t[15](s)}let o={selected_year:t[0],data:t[6]};return t[2]!==void 0&&(o.selected_region=t[2]),t[4]!==void 0&&(o.provinces=t[4]),e=new Wo({props:o}),De.push(()=>xe(e,"selected_region",r)),De.push(()=>xe(e,"provinces",l)),{c(){Ie(e.$$.fragment)},m(s,p){Ne(e,s,p),i=!0},p(s,p){const _={};p&1&&(_.selected_year=s[0]),p&64&&(_.data=s[6]),!a&&p&4&&(a=!0,_.selected_region=s[2],Ue(()=>a=!1)),!n&&p&16&&(n=!0,_.provinces=s[4],Ue(()=>n=!1)),e.$set(_)},i(s){i||(k(e.$$.fragment,s),i=!0)},o(s){z(e.$$.fragment,s),i=!1},d(s){Ae(e,s)}}}function jo(t){let e,a,n=t[6]&&Si(t);return{c(){n&&n.c(),e=Pe()},m(i,r){n&&n.m(i,r),R(i,e,r),a=!0},p(i,r){i[6]?n?(n.p(i,r),r&64&&k(n,1)):(n=Si(i),n.c(),k(n,1),n.m(e.parentNode,e)):n&&(ge(),z(n,1,1,()=>{n=null}),Ce())},i(i){a||(k(n),a=!0)},o(i){z(n),a=!1},d(i){i&&O(e),n&&n.d(i)}}}function Si(t){let e,a;return e=new Zl({props:{data:t[6],innerWidth:t[7]}}),{c(){Ie(e.$$.fragment)},m(n,i){Ne(e,n,i),a=!0},p(n,i){const r={};i&64&&(r.data=n[6]),i&128&&(r.innerWidth=n[7]),e.$set(r)},i(n){a||(k(e.$$.fragment,n),a=!0)},o(n){z(e.$$.fragment,n),a=!1},d(n){Ae(e,n)}}}function Jo(t){let e,a,n,i,r,l,o;Ge(t[10]);let s=t[3]&&Oi(t);const p=[Ko,Zo],_=[];function f(c,u){return c[5]?0:1}return n=f(t),i=_[n]=p[n](t),{c(){e=I("div"),s&&s.c(),a=F(),i.c(),d(e,"class","electionengine-mapsection")},m(c,u){R(c,e,u),s&&s.m(e,null),m(e,a),_[n].m(e,null),r=!0,l||(o=$(window,"resize",t[10]),l=!0)},p(c,[u]){c[3]?s?s.p(c,u):(s=Oi(c),s.c(),s.m(e,a)):s&&(s.d(1),s=null);let v=n;n=f(c),n===v?_[n].p(c,u):(ge(),z(_[v],1,1,()=>{_[v]=null}),Ce(),i=_[n],i?i.p(c,u):(i=_[n]=p[n](c),i.c()),k(i,1),i.m(e,null))},i(c){r||(k(i),r=!0)},o(c){z(i),r=!1},d(c){c&&O(e),s&&s.d(),_[n].d(),l=!1,o()}}}function Qo(t,e,a){let{selected_year:n=2019}=e,{selected_election:i="National Assembly"}=e,{selected_region:r="National"}=e,{show_buttons:l=!1}=e,o=qe,s=!1,p;Xe(async()=>{a(6,p=await c(n)),a(5,s=!0)});async function _(h){h!==n&&(a(0,n=h),a(6,p=await c(n)))}async function f(h){h!==i&&(a(1,i=h),h==="Provincial Legislature"?a(4,o=qe.filter(g=>!["National","Out of Country"].includes(g))):a(4,o=qe),a(6,p=await c(n)))}async function c(h){if(i==="National Assembly")return(await at({year:h,selected_region:r})).provincial_results;if(r!=="National")return(await at({year:h,election:i,region:r})).municipal_results}let u=0;function v(){a(7,u=window.innerWidth)}const N=()=>f("National Assembly"),b=()=>f("Provincial Legislature"),y=h=>_(h);function E(h){r=h,a(2,r)}function A(h){o=h,a(4,o)}return t.$$set=h=>{"selected_year"in h&&a(0,n=h.selected_year),"selected_election"in h&&a(1,i=h.selected_election),"selected_region"in h&&a(2,r=h.selected_region),"show_buttons"in h&&a(3,l=h.show_buttons)},[n,i,r,l,o,s,p,u,_,f,v,N,b,y,E,A]}let Xo=class extends me{constructor(e){super(),he(this,e,Qo,Jo,be,{selected_year:0,selected_election:1,selected_region:2,show_buttons:3})}};function Ti(t,e,a){const n=t.slice();return n[17]=e[a],n[19]=a,n}function Pi(t,e,a){const n=t.slice();return n[20]=e[a],n}function Mi(t,e,a){const n=t.slice();return n[23]=e[a],n}function Fi(t){let e,a,n,i,r,l,o,s,p,_,f,c=j(Ke),u=[];for(let y=0;y<c.length;y+=1)u[y]=Di(Mi(t,c,y));let v=t[1]==="National Assembly"&&wi(t),N=j(t[5]),b=[];for(let y=0;y<N.length;y+=1)b[y]=Li(Pi(t,N,y));return{c(){e=I("div"),a=I("button"),a.textContent="National Assembly",n=F(),i=I("button"),i.textContent="Provincial Legislature",r=F(),l=I("div");for(let y=0;y<u.length;y+=1)u[y].c();o=F(),s=I("div"),v&&v.c(),p=F();for(let y=0;y<b.length;y+=1)b[y].c();d(a,"class","electionengine-year-button svelte-1sauxxc"),G(a,"active",t[1]==="National Assembly"),d(i,"class","electionengine-year-button svelte-1sauxxc"),G(i,"active",t[1]==="Provincial Legislature"),d(e,"class","electionengine-years-buttons"),d(l,"class","electionengine-years-buttons"),d(s,"class","electionengine-years-buttons")},m(y,E){R(y,e,E),m(e,a),m(e,n),m(e,i),R(y,r,E),R(y,l,E);for(let A=0;A<u.length;A+=1)u[A]&&u[A].m(l,null);R(y,o,E),R(y,s,E),v&&v.m(s,null),m(s,p);for(let A=0;A<b.length;A+=1)b[A]&&b[A].m(s,null);_||(f=[$(a,"click",t[10]),$(i,"click",t[11])],_=!0)},p(y,E){if(E&2&&G(a,"active",y[1]==="National Assembly"),E&2&&G(i,"active",y[1]==="Provincial Legislature"),E&129){c=j(Ke);let A;for(A=0;A<c.length;A+=1){const h=Mi(y,c,A);u[A]?u[A].p(h,E):(u[A]=Di(h),u[A].c(),u[A].m(l,null))}for(;A<u.length;A+=1)u[A].d(1);u.length=c.length}if(y[1]==="National Assembly"?v?v.p(y,E):(v=wi(y),v.c(),v.m(s,p)):v&&(v.d(1),v=null),E&292){N=j(y[5]);let A;for(A=0;A<N.length;A+=1){const h=Pi(y,N,A);b[A]?b[A].p(h,E):(b[A]=Li(h),b[A].c(),b[A].m(s,null))}for(;A<b.length;A+=1)b[A].d(1);b.length=N.length}},d(y){y&&(O(e),O(r),O(l),O(o),O(s)),pe(u,y),v&&v.d(),pe(b,y),_=!1,Te(f)}}}function Di(t){let e,a,n;function i(){return t[12](t[23])}return{c(){e=I("button"),e.textContent=`${t[23]} `,d(e,"class","electionengine-year-button svelte-1sauxxc"),G(e,"active",t[0]===t[23])},m(r,l){R(r,e,l),a||(n=$(e,"click",i),a=!0)},p(r,l){t=r,l&1&&G(e,"active",t[0]===t[23])},d(r){r&&O(e),a=!1,n()}}}function wi(t){let e,a,n;return{c(){e=I("button"),e.textContent="National",d(e,"class","electionengine-year-button svelte-1sauxxc"),G(e,"active",t[2]==="National")},m(i,r){R(i,e,r),a||(n=$(e,"click",t[13]),a=!0)},p(i,r){r&4&&G(e,"active",i[2]==="National")},d(i){i&&O(e),a=!1,n()}}}function Li(t){let e,a=t[20]+"",n,i,r,l;function o(){return t[14](t[20])}return{c(){e=I("button"),n=U(a),i=F(),d(e,"class","electionengine-year-button svelte-1sauxxc"),G(e,"active",t[2]===t[20])},m(s,p){R(s,e,p),m(e,n),m(e,i),r||(l=$(e,"click",o),r=!0)},p(s,p){t=s,p&32&&a!==(a=t[20]+"")&&X(n,a),p&36&&G(e,"active",t[2]===t[20])},d(s){s&&O(e),r=!1,l()}}}function ki(t){let e,a,n,i,r,l,o,s;return{c(){e=I("div"),a=U(`Results for
            `),n=U(t[0]),i=F(),r=U(t[1]),l=F(),o=U(t[2]),s=U(" General Election"),d(e,"class","electionengine-title svelte-1sauxxc")},m(p,_){R(p,e,_),m(e,a),m(e,n),m(e,i),m(e,r),m(e,l),m(e,o),m(e,s)},p(p,_){_&1&&X(n,p[0]),_&2&&X(r,p[1]),_&4&&X(o,p[2])},d(p){p&&O(e)}}}function Gi(t){let e;return{c(){e=I("th"),e.textContent="Seats",d(e,"class","electionengine-seats-column svelte-1sauxxc")},m(a,n){R(a,e,n)},d(a){a&&O(e)}}}function Hi(t){let e;return{c(){e=I("th"),e.textContent="Change",d(e,"class","electionengine-change-column svelte-1sauxxc")},m(a,n){R(a,e,n)},d(a){a&&O(e)}}}function Vi(t){let e,a=j(t[6].party_ballot_results),n=[];for(let i=0;i<a.length;i+=1)n[i]=xi(Ti(t,a,i));return{c(){for(let i=0;i<n.length;i+=1)n[i].c();e=Pe()},m(i,r){for(let l=0;l<n.length;l+=1)n[l]&&n[l].m(i,r);R(i,e,r)},p(i,r){if(r&69){a=j(i[6].party_ballot_results);let l;for(l=0;l<a.length;l+=1){const o=Ti(i,a,l);n[l]?n[l].p(o,r):(n[l]=xi(o),n[l].c(),n[l].m(e.parentNode,e))}for(;l<n.length;l+=1)n[l].d(1);n.length=a.length}},d(i){i&&O(e),pe(n,i)}}}function Ui(t){let e,a=t[17].seats+"",n;return{c(){e=I("td"),n=U(a),d(e,"class","electionengine-seats-column svelte-1sauxxc")},m(i,r){R(i,e,r),m(e,n)},p(i,r){r&64&&a!==(a=i[17].seats+"")&&X(n,a)},d(i){i&&O(e)}}}function Yi(t){let e;function a(r,l){return r[17].change>0?as:r[17].change===0?ts:r[17].change<0?es:$o}let n=a(t),i=n(t);return{c(){e=I("td"),i.c(),d(e,"class","electionengine-change-column svelte-1sauxxc")},m(r,l){R(r,e,l),i.m(e,null)},p(r,l){n===(n=a(r))&&i?i.p(r,l):(i.d(1),i=n(r),i&&(i.c(),i.m(e,null)))},d(r){r&&O(e),i.d()}}}function $o(t){let e;return{c(){e=I("div"),e.textContent="N/A",d(e,"class","electionengine-label electionengine-change-na svelte-1sauxxc")},m(a,n){R(a,e,n)},p:q,d(a){a&&O(e)}}}function es(t){let e,a=t[17].change+"",n,i;return{c(){e=I("div"),n=U(a),i=U("%"),d(e,"class","electionengine-label electionengine-change-down svelte-1sauxxc")},m(r,l){R(r,e,l),m(e,n),m(e,i)},p(r,l){l&64&&a!==(a=r[17].change+"")&&X(n,a)},d(r){r&&O(e)}}}function ts(t){let e;return{c(){e=I("div"),e.textContent="0%",d(e,"class","electionengine-label electionengine-change-nochange svelte-1sauxxc")},m(a,n){R(a,e,n)},p:q,d(a){a&&O(e)}}}function as(t){let e,a,n=t[17].change+"",i,r;return{c(){e=I("div"),a=U("+"),i=U(n),r=U("%"),d(e,"class","electionengine-label electionengine-change-up svelte-1sauxxc")},m(l,o){R(l,e,o),m(e,a),m(e,i),m(e,r)},p(l,o){o&64&&n!==(n=l[17].change+"")&&X(i,n)},d(l){l&&O(e)}}}function xi(t){let e,a,n=t[17].party_name+"",i,r,l,o,s=Intl.NumberFormat("en-US").format(t[17].votes)+"",p,_,f,c=`6px ${ze(t[17].party_abbreviation,t[19])}
                            solid`,u=t[2]!=="Out of Country"&&Ui(t),v=t[0]>2009&&Yi(t);return{c(){e=I("tr"),a=I("td"),i=U(n),r=F(),u&&u.c(),l=F(),o=I("td"),p=U(s),_=F(),v&&v.c(),f=F(),d(a,"class","electionengine-party-column svelte-1sauxxc"),d(o,"class","electionengine-votes-column svelte-1sauxxc"),ae(e,"border-left",c),ae(e,"background-color",t[19]%2?"#f1f1f1":"#FFFFFF")},m(N,b){R(N,e,b),m(e,a),m(a,i),m(e,r),u&&u.m(e,null),m(e,l),m(e,o),m(o,p),m(e,_),v&&v.m(e,null),m(e,f)},p(N,b){b&64&&n!==(n=N[17].party_name+"")&&X(i,n),N[2]!=="Out of Country"?u?u.p(N,b):(u=Ui(N),u.c(),u.m(e,l)):u&&(u.d(1),u=null),b&64&&s!==(s=Intl.NumberFormat("en-US").format(N[17].votes)+"")&&X(p,s),N[0]>2009?v?v.p(N,b):(v=Yi(N),v.c(),v.m(e,f)):v&&(v.d(1),v=null),b&64&&c!==(c=`6px ${ze(N[17].party_abbreviation,N[19])}
                            solid`)&&ae(e,"border-left",c)},d(N){N&&O(e),u&&u.d(),v&&v.d()}}}function ns(t){let e,a,n,i,r,l,o,s,p,_,f,c,u,v,N=t[3]&&Fi(t),b=t[4]&&ki(t),y=t[2]!=="Out of Country"&&Gi(),E=t[0]>2009&&Hi(),A=t[6]&&Vi(t);return{c(){e=I("div"),N&&N.c(),a=F(),b&&b.c(),n=F(),i=I("div"),r=I("table"),l=I("thead"),o=I("tr"),s=I("th"),s.textContent="Party",p=F(),y&&y.c(),_=F(),f=I("th"),f.textContent="Votes",c=F(),E&&E.c(),u=F(),v=I("tbody"),A&&A.c(),d(s,"class","electionengine-party-column svelte-1sauxxc"),d(f,"class","electionengine-votes-column svelte-1sauxxc"),ae(o,"border-left","6px #ccc solid"),d(l,"class","svelte-1sauxxc"),d(r,"class","electionengine-table svelte-1sauxxc"),d(i,"class","electionengine-table-container svelte-1sauxxc")},m(h,g){R(h,e,g),N&&N.m(e,null),m(e,a),b&&b.m(e,null),m(e,n),m(e,i),m(i,r),m(r,l),m(l,o),m(o,s),m(o,p),y&&y.m(o,null),m(o,_),m(o,f),m(o,c),E&&E.m(o,null),m(r,u),m(r,v),A&&A.m(v,null)},p(h,[g]){h[3]?N?N.p(h,g):(N=Fi(h),N.c(),N.m(e,a)):N&&(N.d(1),N=null),h[4]?b?b.p(h,g):(b=ki(h),b.c(),b.m(e,n)):b&&(b.d(1),b=null),h[2]!=="Out of Country"?y||(y=Gi(),y.c(),y.m(o,_)):y&&(y.d(1),y=null),h[0]>2009?E||(E=Hi(),E.c(),E.m(o,null)):E&&(E.d(1),E=null),h[6]?A?A.p(h,g):(A=Vi(h),A.c(),A.m(v,null)):A&&(A.d(1),A=null)},i:q,o:q,d(h){h&&O(e),N&&N.d(),b&&b.d(),y&&y.d(),E&&E.d(),A&&A.d()}}}function is(t,e,a){let{selected_year:n=2019}=e,{selected_election:i="National Assembly"}=e,{selected_region:r="National"}=e,{show_buttons:l=!1}=e,{show_title:o=!0}=e,s=qe,p;Xe(async()=>{a(6,p=await v(n))});async function _(h){h!==n&&(a(0,n=h),a(6,p=await v(n)))}async function f(h){h!==r&&(a(2,r=h),a(6,p=await v(n)))}async function c(h){h!==i&&(a(1,i=h),h==="Provincial Legislature"?a(5,s=qe.filter(g=>!["National","Out of Country"].includes(g))):a(5,s=qe),a(6,p=await v(n)))}async function u(h){if(i==="National Assembly"){const g=await at({year:h,election:i,region:r});return r!=="National"?g.provincial_results.find(Y=>Y.province_name===r):g}else return["National","Out of Country"].includes(r)?{party_ballot_results:[]}:(await at({year:h,election:i,region:"National"})).provincial_results.find(P=>P.province_name===r)}async function v(h){const g=await u(h);if(h>Ke[0]){const P=await u(h-5);for(let Y of g.party_ballot_results){const H=P.party_ballot_results.find(W=>W.party_id===Y.party_id);H?Y.change=Math.round((Y.vote_perc-H.vote_perc)*10)/10:Y.change=null}}return g}const N=()=>c("National Assembly"),b=()=>c("Provincial Legislature"),y=h=>_(h),E=()=>f("National"),A=h=>f(h);return t.$$set=h=>{"selected_year"in h&&a(0,n=h.selected_year),"selected_election"in h&&a(1,i=h.selected_election),"selected_region"in h&&a(2,r=h.selected_region),"show_buttons"in h&&a(3,l=h.show_buttons),"show_title"in h&&a(4,o=h.show_title)},[n,i,r,l,o,s,p,_,f,c,N,b,y,E,A]}let rs=class extends me{constructor(e){super(),he(this,e,is,ns,be,{selected_year:0,selected_election:1,selected_region:2,show_buttons:3,show_title:4})}};var Bi={},aa={};Object.defineProperty(aa,"__esModule",{value:!0});var ls=function(){function t(){this.root=null}return t.prototype.insertSuccessor=function(e,a){var n;if(e){if(a.prev=e,a.next=e.next,e.next&&(e.next.prev=a),e.next=a,e.right){for(e=e.right;e.left;)e=e.left;e.left=a}else e.right=a;n=e}else this.root?(e=this.first(this.root),a.prev=null,a.next=e,e.prev=a,e.left=a,n=e):(a.prev=a.next=null,this.root=a,n=null);a.left=a.right=null,a.parent=n,a.red=!0;var i,r;for(e=a;n&&n.red;)i=n.parent,n===i.left?(r=i.right,r&&r.red?(n.red=r.red=!1,i.red=!0,e=i):(e===n.right&&(this.rotateLeft(n),e=n,n=e.parent),n.red=!1,i.red=!0,this.rotateRight(i))):(r=i.left,r&&r.red?(n.red=r.red=!1,i.red=!0,e=i):(e===n.left&&(this.rotateRight(n),e=n,n=e.parent),n.red=!1,i.red=!0,this.rotateLeft(i))),n=e.parent;this.root.red=!1},t.prototype.removeNode=function(e){e.next&&(e.next.prev=e.prev),e.prev&&(e.prev.next=e.next),e.next=e.prev=null;var a=e.parent,n=e.left,i=e.right,r=null;n?i?r=this.first(i):r=n:r=i,a?a.left===e?a.left=r:a.right=r:this.root=r;var l;if(n&&i?(l=r.red,r.red=e.red,r.left=n,n.parent=r,r!==i?(a=r.parent,r.parent=e.parent,e=r.right,a.left=e,r.right=i,i.parent=r):(r.parent=a,a=r,e=r.right)):(l=e.red,e=r),e&&(e.parent=a),!l){if(e&&e.red){e.red=!1;return}var o;do{if(e===this.root)break;if(e===a.left){if(o=a.right,o.red&&(o.red=!1,a.red=!0,this.rotateLeft(a),o=a.right),o.left&&o.left.red||o.right&&o.right.red){(!o.right||!o.right.red)&&(o.left.red=!1,o.red=!0,this.rotateRight(o),o=a.right),o.red=a.red,a.red=o.right.red=!1,this.rotateLeft(a),e=this.root;break}}else if(o=a.left,o.red&&(o.red=!1,a.red=!0,this.rotateRight(a),o=a.left),o.left&&o.left.red||o.right&&o.right.red){(!o.left||!o.left.red)&&(o.right.red=!1,o.red=!0,this.rotateLeft(o),o=a.left),o.red=a.red,a.red=o.left.red=!1,this.rotateRight(a),e=this.root;break}o.red=!0,e=a,a=a.parent}while(!e.red);e&&(e.red=!1)}},t.prototype.rotateLeft=function(e){var a=e,n=e.right,i=a.parent;i?i.left===a?i.left=n:i.right=n:this.root=n,n.parent=i,a.parent=n,a.right=n.left,a.right&&(a.right.parent=a),n.left=a},t.prototype.rotateRight=function(e){var a=e,n=e.left,i=a.parent;i?i.left===a?i.left=n:i.right=n:this.root=n,n.parent=i,a.parent=n,a.left=n.right,a.left&&(a.left.parent=a),n.right=a},t.prototype.first=function(e){for(;e.left;)e=e.left;return e},t.prototype.last=function(e){for(;e.right;)e=e.right;return e},t}();aa.RBTree=ls;var os=function(){function t(){}return t}();aa.RBTreeNode=os;var Ga={};Object.defineProperty(Ga,"__esModule",{value:!0});var ss=function(){function t(e,a){this.x=e,this.y=a}return t}();Ga.Vertex=ss;var Ha={};Object.defineProperty(Ha,"__esModule",{value:!0});var ps=function(){function t(e,a){this.lSite=e,this.rSite=a,this.va=this.vb=null}return t}();Ha.Edge=ps;var Va={};Object.defineProperty(Va,"__esModule",{value:!0});var _s=function(){function t(e){this.site=e,this.halfedges=[],this.closeMe=!1}return t.prototype.init=function(e){return this.site=e,this.halfedges=[],this.closeMe=!1,this},t.prototype.prepareHalfedges=function(){for(var e=this.halfedges,a=e.length,n;a--;)n=e[a].edge,(!n.vb||!n.va)&&e.splice(a,1);return e.sort(function(i,r){return r.angle-i.angle}),e.length},t.prototype.getNeighborIds=function(){for(var e=[],a=this.halfedges.length,n;a--;)n=this.halfedges[a].edge,n.lSite!==null&&n.lSite.id!=this.site.id?e.push(n.lSite.id):n.rSite!==null&&n.rSite.id!=this.site.id&&e.push(n.rSite.id);return e},t.prototype.getBbox=function(){for(var e=this.halfedges,a=e.length,n=1/0,i=1/0,r=-1/0,l=-1/0,o,s,p;a--;)o=e[a].getStartpoint(),s=o.x,p=o.y,s<n&&(n=s),p<i&&(i=p),s>r&&(r=s),p>l&&(l=p);return{x:n,y:i,width:r-n,height:l-i}},t.prototype.pointIntersection=function(e,a){for(var n=this.halfedges,i=n.length,r,l,o,s;i--;){if(r=n[i],l=r.getStartpoint(),o=r.getEndpoint(),s=(a-l.y)*(o.x-l.x)-(e-l.x)*(o.y-l.y),!s)return 0;if(s>0)return-1}return 1},t}();Va.Cell=_s;var Ua={};Object.defineProperty(Ua,"__esModule",{value:!0});var fs=function(){function t(e){this.site=e}return t}();Ua.Diagram=fs;var Ya={};Object.defineProperty(Ya,"__esModule",{value:!0});var cs=function(){function t(e,a,n){if(this.site=a,this.edge=e,n)this.angle=Math.atan2(n.y-a.y,n.x-a.x);else{var i=e.va,r=e.vb;this.angle=e.lSite===a?Math.atan2(r.x-i.x,i.y-r.y):Math.atan2(i.x-r.x,r.y-i.y)}}return t.prototype.getStartpoint=function(){return this.edge.lSite===this.site?this.edge.va:this.edge.vb},t.prototype.getEndpoint=function(){return this.edge.lSite===this.site?this.edge.vb:this.edge.va},t}();Ya.Halfedge=cs,Object.defineProperty(Bi,"__esModule",{value:!0});var na=aa,ds=Ga,zi=Ha,us=Va,Wi=Ua,vs=Ya,ys=function(){function t(){this.vertices=null,this.edges=null,this.cells=null,this.toRecycle=null,this.beachsectionJunkyard=[],this.circleEventJunkyard=[],this.vertexJunkyard=[],this.edgeJunkyard=[],this.cellJunkyard=[]}return t.prototype.compute=function(e,a){var n=new Date;this.reset(),this.toRecycle&&(this.vertexJunkyard=this.vertexJunkyard.concat(this.toRecycle.vertices),this.edgeJunkyard=this.edgeJunkyard.concat(this.toRecycle.edges),this.cellJunkyard=this.cellJunkyard.concat(this.toRecycle.cells),this.toRecycle=null);var i=e.slice(0);i.sort(function(u,v){var N=v.y-u.y;return N||v.x-u.x});for(var r=i.pop(),l=0,o,s,p=this.cells,_;;)if(_=this.firstCircleEvent,r&&(!_||r.y<_.y||r.y===_.y&&r.x<_.x))(r.x!==o||r.y!==s)&&(p[l]=this.createCell(r),r.id=l++,this.addBeachsection(r),s=r.y,o=r.x),r=i.pop();else if(_)this.removeBeachsection(_.arc);else break;this.clipEdges(a),this.closeCells(a);var f=new Date,c=new Wi.Diagram;return c.cells=this.cells,c.edges=this.edges,c.vertices=this.vertices,c.execTime=f.getTime()-n.getTime(),this.reset(),c},t.prototype.sqrt=function(e){return Math.sqrt(e)},t.prototype.abs=function(e){return Math.abs(e)},t.prototype.eps=function(){return 1e-9},t.prototype.inveps=function(){return 1/this.eps()},t.prototype.equalWithEpsilon=function(e,a){return this.abs(e-a)<this.eps()},t.prototype.greaterThanWithEpsilon=function(e,a){return e-a>this.eps()},t.prototype.greaterThanOrEqualWithEpsilon=function(e,a){return a-e<this.eps()},t.prototype.lessThanWithEpsilon=function(e,a){return a-e>this.eps()},t.prototype.lessThanOrEqualWithEpsilon=function(e,a){return e-a<this.eps()},t.prototype.quantizeSites=function(e){for(var a=this.eps(),n=e.length,i;n--;)i=e[n],i.x=Math.floor(i.x/a)*a,i.y=Math.floor(i.y/a)*a},t.prototype.recycle=function(e){if(e)if(e instanceof Wi.Diagram)this.toRecycle=e;else throw"Voronoi.recycleDiagram() > Need a Diagram object."},t.prototype.reset=function(){if(this.beachline||(this.beachline=new na.RBTree),this.beachline.root)for(var e=this.beachline.first(this.beachline.root);e;)this.beachsectionJunkyard.push(e),e=e.next;this.beachline.root=null,this.circleEvents||(this.circleEvents=new na.RBTree),this.circleEvents.root=this.firstCircleEvent=null,this.vertices=[],this.edges=[],this.cells=[]},t.prototype.createCell=function(e){var a=this.cellJunkyard.pop();return a?(a.init(e),a.init(e)):new us.Cell(e)},t.prototype.createHalfedge=function(e,a,n){return new vs.Halfedge(e,a,n)},t.prototype.createVertex=function(e,a){var n=this.vertexJunkyard.pop();return n?(n.x=e,n.y=a):n=new ds.Vertex(e,a),this.vertices.push(n),n},t.prototype.createEdge=function(e,a,n,i){n===void 0&&(n=null),i===void 0&&(i=null);var r=this.edgeJunkyard.pop();return r?(r.lSite=e,r.rSite=a,r.va=r.vb=null):r=new zi.Edge(e,a),this.edges.push(r),n&&this.setEdgeStartpoint(r,e,a,n),i&&this.setEdgeEndpoint(r,e,a,i),this.cells[e.id].halfedges.push(this.createHalfedge(r,e,a)),this.cells[a.id].halfedges.push(this.createHalfedge(r,a,e)),r},t.prototype.createBorderEdge=function(e,a,n){var i=this.edgeJunkyard.pop();return i?(i.lSite=e,i.rSite=null):i=new zi.Edge(e,null),i.va=a,i.vb=n,this.edges.push(i),i},t.prototype.setEdgeStartpoint=function(e,a,n,i){!e.va&&!e.vb?(e.va=i,e.lSite=a,e.rSite=n):e.lSite===n?e.vb=i:e.va=i},t.prototype.setEdgeEndpoint=function(e,a,n,i){this.setEdgeStartpoint(e,n,a,i)},t.prototype.createBeachsection=function(e){var a=this.beachsectionJunkyard.pop();return a||(a=new na.RBTreeNode),a.site=e,a},t.prototype.leftBreakPoint=function(e,a){var n=e.site,i=n.x,r=n.y,l=r-a;if(!l)return i;var o=e.prev;if(!o)return-1/0;n=o.site;var s=n.x,p=n.y,_=p-a;if(!_)return s;var f=s-i,c=1/l-1/_,u=f/_;return c?(-u+this.sqrt(u*u-2*c*(f*f/(-2*_)-p+_/2+r-l/2)))/c+i:(i+s)/2},t.prototype.rightBreakPoint=function(e,a){var n=e.next;if(n)return this.leftBreakPoint(n,a);var i=e.site;return i.y===a?i.x:1/0},t.prototype.detachBeachsection=function(e){this.detachCircleEvent(e),this.beachline.removeNode(e),this.beachsectionJunkyard.push(e)},t.prototype.removeBeachsection=function(e){var a=e.circleEvent,n=a.x,i=a.ycenter,r=this.createVertex(n,i),l=e.prev,o=e.next,s=[e],p=Math.abs;this.detachBeachsection(e);for(var _=l;_.circleEvent&&p(n-_.circleEvent.x)<this.eps()&&p(i-_.circleEvent.ycenter)<this.eps();)l=_.prev,s.unshift(_),this.detachBeachsection(_),_=l;s.unshift(_),this.detachCircleEvent(_);for(var f=o;f.circleEvent&&p(n-f.circleEvent.x)<this.eps()&&p(i-f.circleEvent.ycenter)<this.eps();)o=f.next,s.push(f),this.detachBeachsection(f),f=o;s.push(f),this.detachCircleEvent(f);var c=s.length,u;for(u=1;u<c;u++)f=s[u],_=s[u-1],this.setEdgeStartpoint(f.edge,_.site,f.site,r);_=s[0],f=s[c-1],f.edge=this.createEdge(_.site,f.site,void 0,r),this.attachCircleEvent(_),this.attachCircleEvent(f)},t.prototype.addBeachsection=function(e){for(var a=e.x,n=e.y,i,r,l,o,s=this.beachline.root;s;)if(l=this.leftBreakPoint(s,n)-a,l>this.eps())s=s.left;else if(o=a-this.rightBreakPoint(s,n),o>this.eps()){if(!s.right){i=s;break}s=s.right}else{l>-this.eps()?(i=s.prev,r=s):o>-this.eps()?(i=s,r=s.next):i=r=s;break}var p=this.createBeachsection(e);if(this.beachline.insertSuccessor(i,p),!(!i&&!r)){if(i===r){this.detachCircleEvent(i),r=this.createBeachsection(i.site),this.beachline.insertSuccessor(p,r),p.edge=r.edge=this.createEdge(i.site,p.site),this.attachCircleEvent(i),this.attachCircleEvent(r);return}if(i&&!r){p.edge=this.createEdge(i.site,p.site);return}if(i!==r){this.detachCircleEvent(i),this.detachCircleEvent(r);var _=i.site,f=_.x,c=_.y,u=e.x-f,v=e.y-c,N=r.site,b=N.x-f,y=N.y-c,E=2*(u*y-v*b),A=u*u+v*v,h=b*b+y*y,g=this.createVertex((y*A-v*h)/E+f,(u*h-b*A)/E+c);this.setEdgeStartpoint(r.edge,_,N,g),p.edge=this.createEdge(_,e,void 0,g),r.edge=this.createEdge(e,N,void 0,g),this.attachCircleEvent(i),this.attachCircleEvent(r);return}}},t.prototype.attachCircleEvent=function(e){var a=e.prev,n=e.next;if(!(!a||!n)){var i=a.site,r=e.site,l=n.site;if(i!==l){var o=r.x,s=r.y,p=i.x-o,_=i.y-s,f=l.x-o,c=l.y-s,u=2*(p*c-_*f);if(!(u>=-2e-12)){var v=p*p+_*_,N=f*f+c*c,b=(c*v-_*N)/u,y=(p*N-f*v)/u,E=y+s,A=this.circleEventJunkyard.pop();A||(A=new na.RBTreeNode),A.arc=e,A.site=r,A.x=b+o,A.y=E+this.sqrt(b*b+y*y),A.ycenter=E,e.circleEvent=A;for(var h=null,g=this.circleEvents.root;g;)if(A.y<g.y||A.y===g.y&&A.x<=g.x)if(g.left)g=g.left;else{h=g.prev;break}else if(g.right)g=g.right;else{h=g;break}this.circleEvents.insertSuccessor(h,A),h||(this.firstCircleEvent=A)}}}},t.prototype.detachCircleEvent=function(e){var a=e.circleEvent;a&&(a.prev||(this.firstCircleEvent=a.next),this.circleEvents.removeNode(a),this.circleEventJunkyard.push(a),e.circleEvent=null)},t.prototype.connectEdge=function(e,a){var n=e.vb;if(n)return!0;var i=e.va,r=a.xl,l=a.xr,o=a.yt,s=a.yb,p=e.lSite,_=e.rSite,f=p.x,c=p.y,u=_.x,v=_.y,N=(f+u)/2,b=(c+v)/2,y,E;if(this.cells[p.id].closeMe=!0,this.cells[_.id].closeMe=!0,v!==c&&(y=(f-u)/(v-c),E=b-y*N),y===void 0){if(N<r||N>=l)return!1;if(f>u){if(!i||i.y<o)i=this.createVertex(N,o);else if(i.y>=s)return!1;n=this.createVertex(N,s)}else{if(!i||i.y>s)i=this.createVertex(N,s);else if(i.y<o)return!1;n=this.createVertex(N,o)}}else if(y<-1||y>1)if(f>u){if(!i||i.y<o)i=this.createVertex((o-E)/y,o);else if(i.y>=s)return!1;n=this.createVertex((s-E)/y,s)}else{if(!i||i.y>s)i=this.createVertex((s-E)/y,s);else if(i.y<o)return!1;n=this.createVertex((o-E)/y,o)}else if(c<v){if(!i||i.x<r)i=this.createVertex(r,y*r+E);else if(i.x>=l)return!1;n=this.createVertex(l,y*l+E)}else{if(!i||i.x>l)i=this.createVertex(l,y*l+E);else if(i.x<r)return!1;n=this.createVertex(r,y*r+E)}return e.va=i,e.vb=n,!0},t.prototype.clipEdge=function(e,a){var n=e.va.x,i=e.va.y,r=e.vb.x,l=e.vb.y,o=0,s=1,p=r-n,_=l-i,f=n-a.xl;if(p===0&&f<0)return!1;var c=-f/p;if(p<0){if(c<o)return!1;c<s&&(s=c)}else if(p>0){if(c>s)return!1;c>o&&(o=c)}if(f=a.xr-n,p===0&&f<0)return!1;if(c=f/p,p<0){if(c>s)return!1;c>o&&(o=c)}else if(p>0){if(c<o)return!1;c<s&&(s=c)}if(f=i-a.yt,_===0&&f<0)return!1;if(c=-f/_,_<0){if(c<o)return!1;c<s&&(s=c)}else if(_>0){if(c>s)return!1;c>o&&(o=c)}if(f=a.yb-i,_===0&&f<0)return!1;if(c=f/_,_<0){if(c>s)return!1;c>o&&(o=c)}else if(_>0){if(c<o)return!1;c<s&&(s=c)}return o>0&&(e.va=this.createVertex(n+o*p,i+o*_)),s<1&&(e.vb=this.createVertex(n+s*p,i+s*_)),(o>0||s<1)&&(this.cells[e.lSite.id].closeMe=!0,this.cells[e.rSite.id].closeMe=!0),!0},t.prototype.clipEdges=function(e){for(var a=this.edges,n=a.length,i,r=Math.abs;n--;)i=a[n],(!this.connectEdge(i,e)||!this.clipEdge(i,e)||r(i.va.x-i.vb.x)<this.eps()&&r(i.va.y-i.vb.y)<this.eps())&&(i.va=i.vb=null,a.splice(n,1))},t.prototype.closeCells=function(e){for(var a=e.xl,n=e.xr,i=e.yt,r=e.yb,l=this.cells,o=l.length,s,p,_,f,c,u,v,N,b,y=Math.abs;o--;)if(s=l[o],!!s.prepareHalfedges()&&s.closeMe){for(_=s.halfedges,f=_.length,p=0;p<f;){if(u=_[p].getEndpoint(),N=_[(p+1)%f].getStartpoint(),y(u.x-N.x)>=this.eps()||y(u.y-N.y)>=this.eps())switch(!0){case(this.equalWithEpsilon(u.x,a)&&this.lessThanWithEpsilon(u.y,r)):if(b=this.equalWithEpsilon(N.x,a),v=this.createVertex(a,b?N.y:r),c=this.createBorderEdge(s.site,u,v),p++,_.splice(p,0,this.createHalfedge(c,s.site,null)),f++,b)break;u=v;case(this.equalWithEpsilon(u.y,r)&&this.lessThanWithEpsilon(u.x,n)):if(b=this.equalWithEpsilon(N.y,r),v=this.createVertex(b?N.x:n,r),c=this.createBorderEdge(s.site,u,v),p++,_.splice(p,0,this.createHalfedge(c,s.site,null)),f++,b)break;u=v;case(this.equalWithEpsilon(u.x,n)&&this.greaterThanWithEpsilon(u.y,i)):if(b=this.equalWithEpsilon(N.x,n),v=this.createVertex(n,b?N.y:i),c=this.createBorderEdge(s.site,u,v),p++,_.splice(p,0,this.createHalfedge(c,s.site,null)),f++,b)break;u=v;case(this.equalWithEpsilon(u.y,i)&&this.greaterThanWithEpsilon(u.x,a)):if(b=this.equalWithEpsilon(N.y,i),v=this.createVertex(b?N.x:a,i),c=this.createBorderEdge(s.site,u,v),p++,_.splice(p,0,this.createHalfedge(c,s.site,null)),f++,b||(u=v,b=this.equalWithEpsilon(N.x,a),v=this.createVertex(a,b?N.y:r),c=this.createBorderEdge(s.site,u,v),p++,_.splice(p,0,this.createHalfedge(c,s.site,null)),f++,b)||(u=v,b=this.equalWithEpsilon(N.y,r),v=this.createVertex(b?N.x:n,r),c=this.createBorderEdge(s.site,u,v),p++,_.splice(p,0,this.createHalfedge(c,s.site,null)),f++,b)||(u=v,b=this.equalWithEpsilon(N.x,n),v=this.createVertex(n,b?N.y:i),c=this.createBorderEdge(s.site,u,v),p++,_.splice(p,0,this.createHalfedge(c,s.site,null)),f++,b))break;default:throw"Voronoi.closeCells() > this makes no sense!"}p++}s.closeMe=!1}},t}(),bs=Bi.Voronoi=ys;const Ns=t=>{const e=new bs;let a=0,n=0,i=0,r=0;for(let o=0;o<t.length;o++){let s=t[o];s.x<a&&(a=s.x),s.x>n&&(n=s.x),s.y<i&&(i=s.y),s.y>r&&(r=s.y)}let l={xl:a,xr:n,yt:i,yb:r};return e.compute(t,l)};function Zi(t){if(!t||t.length===0)return"";let e=[];const a=t.shift();let n=a.getStartpoint(),i=a.getEndpoint();e.push(`M ${n.x} ${n.y}`),e.push(`L ${i.x} ${i.y}`);for(let r of t){let l=r.getEndpoint();e.push(`L ${l.x} ${l.y}`)}return e.push("Z"),e.join(" ")}function As(t,e,a,n){let i=[],r=0;for(let p=e;p>=0;p--){const _=t-p*t/e,f=n/180*Math.PI*_;r+=f}const l=r/a;let o=0,s=0;for(let p=e;p>=0;p--){const _=t-p*t/e,f=n/180*Math.PI*_;let c=Math.ceil(f/l);o+c>a&&(c=a-o);const u=f/c,v=(n-180)/180*Math.PI/2;for(let N=0;N<c;N++){o++;const b=N*u/_+u/_/2,y=-_*Math.cos(b-v),E=-_*Math.sin(b-v);i.push({id:p,x:y,y:E,a:s,angle:b})}s++}return i.sort((p,_)=>p.angle-_.angle),i}function Ki(t,e,a){const n=t.slice();return n[35]=e[a],n[37]=a,n}function qi(t,e,a){const n=t.slice();return n[38]=e[a],n[37]=a,n}function ji(t,e,a){const n=t.slice();return n[38]=e[a],n}function Ji(t,e,a){const n=t.slice();return n[42]=e[a],n[37]=a,n}function Qi(t){let e,a;return{c(){e=L("path"),d(e,"d",a=`M ${t[1]-t[37]*(t[1]/t[2])},0 A ${t[1]-t[37]*(t[1]/t[2])},${t[1]-t[37]*(t[1]/t[2])} 0 0,0 ${-(t[1]-t[37]*(t[1]/t[2]))},0`),d(e,"fill","transparent"),d(e,"stroke","white"),d(e,"stroke-width","1"),d(e,"opacity","0.4")},m(n,i){R(n,e,i)},p(n,i){i[0]&6&&a!==(a=`M ${n[1]-n[37]*(n[1]/n[2])},0 A ${n[1]-n[37]*(n[1]/n[2])},${n[1]-n[37]*(n[1]/n[2])} 0 0,0 ${-(n[1]-n[37]*(n[1]/n[2]))},0`)&&d(e,"d",a)},d(n){n&&O(e)}}}function hs(t){let e,a,n,i,r,l;return{c(){var o,s,p,_,f;e=L("circle"),d(e,"data-party",a=(o=t[38].data)==null?void 0:o.id),d(e,"cx",n=t[38].x),d(e,"cy",i=t[38].y),d(e,"r",t[3]),d(e,"fill",r=(s=t[38].data)==null?void 0:s.color),d(e,"opacity",l=(p=t[0])!=null&&p.id?((_=t[38].data)==null?void 0:_.id)===((f=t[0])==null?void 0:f.id)?1:.5:1)},m(o,s){R(o,e,s)},p(o,s){var p,_,f,c,u;s[0]&2048&&a!==(a=(p=o[38].data)==null?void 0:p.id)&&d(e,"data-party",a),s[0]&2048&&n!==(n=o[38].x)&&d(e,"cx",n),s[0]&2048&&i!==(i=o[38].y)&&d(e,"cy",i),s[0]&8&&d(e,"r",o[3]),s[0]&2048&&r!==(r=(_=o[38].data)==null?void 0:_.color)&&d(e,"fill",r),s[0]&2049&&l!==(l=(f=o[0])!=null&&f.id?((c=o[38].data)==null?void 0:c.id)===((u=o[0])==null?void 0:u.id)?1:.5:1)&&d(e,"opacity",l)},d(o){o&&O(e)}}}function ms(t){let e,a,n,i,r,l,o;return{c(){var s,p,_,f,c;e=L("g"),a=L("polygon"),d(a,"transform",n=`rotate(${Math.round(t[38].angle*180/Math.PI-90)} 5 5)`),d(a,"points",gs),d(e,"transform",i=`
                            translate(${t[38].x-5},${t[38].y-5})
                        `),d(e,"data-party",r=(s=t[38].data)==null?void 0:s.id),d(e,"fill",l=((p=t[38].data)==null?void 0:p.color)||"white"),d(e,"fill-rule","nonzero"),d(e,"stroke","#444444"),d(e,"opacity",o=(_=t[0])!=null&&_.id?((f=t[38].data)==null?void 0:f.id)===((c=t[0])==null?void 0:c.id)?1:.5:1)},m(s,p){R(s,e,p),m(e,a)},p(s,p){var _,f,c,u,v;p[0]&2048&&n!==(n=`rotate(${Math.round(s[38].angle*180/Math.PI-90)} 5 5)`)&&d(a,"transform",n),p[0]&2048&&i!==(i=`
                            translate(${s[38].x-5},${s[38].y-5})
                        `)&&d(e,"transform",i),p[0]&2048&&r!==(r=(_=s[38].data)==null?void 0:_.id)&&d(e,"data-party",r),p[0]&2048&&l!==(l=((f=s[38].data)==null?void 0:f.color)||"white")&&d(e,"fill",l),p[0]&2049&&o!==(o=(c=s[0])!=null&&c.id?((u=s[38].data)==null?void 0:u.id)===((v=s[0])==null?void 0:v.id)?1:.5:1)&&d(e,"opacity",o)},d(s){s&&O(e)}}}function Xi(t){let e;function a(r,l){return r[7]==="hexagon"?ms:hs}let n=a(t),i=n(t);return{c(){i.c(),e=Pe()},m(r,l){i.m(r,l),R(r,e,l)},p(r,l){n===(n=a(r))&&i?i.p(r,l):(i.d(1),i=n(r),i&&(i.c(),i.m(e.parentNode,e)))},d(r){r&&O(e),i.d(r)}}}function $i(t){let e,a=`${t[37]}`,n,i,r;return{c(){e=L("text"),n=U(a),d(e,"x",i=t[38].x),d(e,"y",r=t[38].y),d(e,"text-anchor","middle"),d(e,"alignment-baseline","middle"),d(e,"fill","white"),d(e,"font-size","8")},m(l,o){R(l,e,o),m(e,n)},p(l,o){o[0]&2048&&i!==(i=l[38].x)&&d(e,"x",i),o[0]&2048&&r!==(r=l[38].y)&&d(e,"y",r)},d(l){l&&O(e)}}}function er(t){let e,a,n,i,r,l;function o(){return t[26](t[35])}function s(){return t[27](t[35])}function p(){return t[30](t[35])}function _(...f){return t[31](t[35],...f)}return{c(){e=L("path"),d(e,"class","voronoi_path"),d(e,"d",a=Zi(t[35].halfedges).toString()),d(e,"fill","transparent"),d(e,"stroke",n=t[10].includes("voronoi")?"black":"transparent"),d(e,"stroke-width",i=t[10].includes("voronoi")?1:0),d(e,"role","button"),d(e,"tabindex",t[37])},m(f,c){R(f,e,c),r||(l=[$(e,"mouseover",o),$(e,"focus",s),$(e,"mouseout",t[28]),$(e,"blur",t[29]),$(e,"click",p),$(e,"keypress",_)],r=!0)},p(f,c){t=f,c[0]&16384&&a!==(a=Zi(t[35].halfedges).toString())&&d(e,"d",a),c[0]&1024&&n!==(n=t[10].includes("voronoi")?"black":"transparent")&&d(e,"stroke",n),c[0]&1024&&i!==(i=t[10].includes("voronoi")?1:0)&&d(e,"stroke-width",i)},d(f){f&&O(e),r=!1,Te(l)}}}function tr(t){var n;let e,a=((n=t[35].halfedges)==null?void 0:n.length)>0&&er(t);return{c(){a&&a.c(),e=Pe()},m(i,r){a&&a.m(i,r),R(i,e,r)},p(i,r){var l;((l=i[35].halfedges)==null?void 0:l.length)>0?a?a.p(i,r):(a=er(i),a.c(),a.m(e.parentNode,e)):a&&(a.d(1),a=null)},d(i){i&&O(e),a&&a.d(i)}}}function ar(t){let e,a=`${t[0].text}`,n;return{c(){e=L("text"),n=U(a),d(e,"x",0),d(e,"y",0),d(e,"text-anchor","middle"),d(e,"alignment-baseline","middle"),d(e,"fill",t[4]),d(e,"font-size",t[5])},m(i,r){R(i,e,r),m(e,n)},p(i,r){r[0]&1&&a!==(a=`${i[0].text}`)&&X(n,a),r[0]&16&&d(e,"fill",i[4]),r[0]&32&&d(e,"font-size",i[5])},d(i){i&&O(e)}}}function Es(t){let e,a,n,i,r,l,o,s,p,_,f,c,u,v,N,b,y,E,A,h=`${t[1]}, 0`,g,P,Y,H,W=`${t[1]}, ${-t[1]}`,Z,M,S,K,J,w,V,Q=`-${t[1]}, ${-t[1]}`,ne,ee,Ee,T,ie,le,_e,re,oe=`-${t[1]}, 0`,je,Je,te,se,ia,ra,ct=j(Array(t[2])),fe=[];for(let C=0;C<ct.length;C+=1)fe[C]=Qi(Ji(t,ct,C));let dt=j(t[11]),ce=[];for(let C=0;C<dt.length;C+=1)ce[C]=Xi(ji(t,dt,C));let ut=j(t[11]),de=[];for(let C=0;C<ut.length;C+=1)de[C]=$i(qi(t,ut,C));let vt=j(t[14].cells),ue=[];for(let C=0;C<vt.length;C+=1)ue[C]=tr(Ki(t,vt,C));let ye=t[0]&&ar(t);return{c(){var C,x;e=I("main"),a=L("svg"),n=L("g");for(let B=0;B<fe.length;B+=1)fe[B].c();r=L("g");for(let B=0;B<ce.length;B+=1)ce[B].c();o=L("g");for(let B=0;B<de.length;B+=1)de[B].c();p=L("g");for(let B=0;B<ue.length;B+=1)ue[B].c();f=L("g"),ye&&ye.c(),u=L("g"),v=L("g"),N=L("text"),b=U("0, 0"),y=L("circle"),E=L("g"),A=L("text"),g=U(h),P=L("circle"),Y=L("g"),H=L("text"),Z=U(W),K=L("circle"),w=L("g"),V=L("text"),ne=U(Q),T=L("circle"),_e=L("g"),re=L("text"),je=U(oe),te=L("circle"),d(n,"id","arcs"),d(n,"transform",i=`translate(${t[1]+t[13]}, ${t[1]+t[12]})`),d(n,"class","svelte-knicoi"),G(n,"hide",!t[10].includes("arcs")),d(r,"id","points"),d(r,"transform",l=`translate(${t[1]+t[13]}, ${t[1]+t[12]})`),d(r,"class","svelte-knicoi"),G(r,"hide",!t[10].includes("points")),d(o,"id","numbers"),d(o,"transform",s=`translate(${t[1]+t[13]}, ${t[1]+t[12]})`),d(o,"class","svelte-knicoi"),G(o,"hide",!t[10].includes("numbers")),d(p,"id","voronoi"),d(p,"transform",_=`translate(${t[1]+t[13]}, ${t[1]+t[12]})`),d(f,"id","text"),d(f,"transform",c=`translate(${((C=t[6])==null?void 0:C.x)||t[1]+t[13]}, ${((x=t[6])==null?void 0:x.y)||t[1]+t[12]+20})`),d(f,"class","svelte-knicoi"),G(f,"hide",!t[10].includes("text")),d(N,"x","0"),d(N,"y","10"),d(N,"text-anchor","middle"),d(N,"alignment-baseline","middle"),d(N,"fill","white"),d(N,"font-size","8"),d(y,"cx","0"),d(y,"cy","0"),d(y,"r","2"),d(y,"fill","white"),d(v,"class","reference_points"),d(A,"x",t[1]),d(A,"y","10"),d(A,"text-anchor","middle"),d(A,"alignment-baseline","middle"),d(A,"fill","white"),d(A,"font-size","8"),d(P,"cx",t[1]),d(P,"cy",0),d(P,"r","2"),d(P,"fill","white"),d(E,"class","reference_points"),d(H,"x",M=t[1]-10),d(H,"y",S=-t[1]+10),d(H,"text-anchor","middle"),d(H,"alignment-baseline","middle"),d(H,"fill","white"),d(H,"font-size","8"),d(K,"cx",t[1]),d(K,"cy",J=-t[1]),d(K,"r","2"),d(K,"fill","white"),d(Y,"class","reference_points"),d(V,"x",ee=-t[1]+10),d(V,"y",Ee=-t[1]+10),d(V,"text-anchor","middle"),d(V,"alignment-baseline","middle"),d(V,"fill","white"),d(V,"font-size","8"),d(T,"cx",ie=-t[1]),d(T,"cy",le=-t[1]),d(T,"r","2"),d(T,"fill","white"),d(w,"class","reference_points"),d(re,"x",Je=-t[1]),d(re,"y",10),d(re,"text-anchor","middle"),d(re,"alignment-baseline","middle"),d(re,"fill","white"),d(re,"font-size","8"),d(te,"cx",se=-t[1]),d(te,"cy",0),d(te,"r","2"),d(te,"fill","white"),d(_e,"class","reference_points"),d(u,"id","referencePoints"),d(u,"transform",ia=`translate(${t[1]+t[13]}, ${t[1]+t[12]})`),d(u,"class","svelte-knicoi"),G(u,"hide",!t[10].includes("referencePoints")),d(a,"width",t[8]),d(a,"height",t[9]),d(a,"viewBox",ra="0 0 "+t[15]+" "+t[16])},m(C,x){R(C,e,x),m(e,a),m(a,n);for(let B=0;B<fe.length;B+=1)fe[B]&&fe[B].m(n,null);m(a,r);for(let B=0;B<ce.length;B+=1)ce[B]&&ce[B].m(r,null);m(a,o);for(let B=0;B<de.length;B+=1)de[B]&&de[B].m(o,null);m(a,p);for(let B=0;B<ue.length;B+=1)ue[B]&&ue[B].m(p,null);m(a,f),ye&&ye.m(f,null),m(a,u),m(u,v),m(v,N),m(N,b),m(v,y),m(u,E),m(E,A),m(A,g),m(E,P),m(u,Y),m(Y,H),m(H,Z),m(Y,K),m(u,w),m(w,V),m(V,ne),m(w,T),m(u,_e),m(_e,re),m(re,je),m(_e,te)},p(C,x){var B,ur;if(x[0]&6){ct=j(Array(C[2]));let D;for(D=0;D<ct.length;D+=1){const Fe=Ji(C,ct,D);fe[D]?fe[D].p(Fe,x):(fe[D]=Qi(Fe),fe[D].c(),fe[D].m(n,null))}for(;D<fe.length;D+=1)fe[D].d(1);fe.length=ct.length}if(x[0]&12290&&i!==(i=`translate(${C[1]+C[13]}, ${C[1]+C[12]})`)&&d(n,"transform",i),x[0]&1024&&G(n,"hide",!C[10].includes("arcs")),x[0]&2185){dt=j(C[11]);let D;for(D=0;D<dt.length;D+=1){const Fe=ji(C,dt,D);ce[D]?ce[D].p(Fe,x):(ce[D]=Xi(Fe),ce[D].c(),ce[D].m(r,null))}for(;D<ce.length;D+=1)ce[D].d(1);ce.length=dt.length}if(x[0]&12290&&l!==(l=`translate(${C[1]+C[13]}, ${C[1]+C[12]})`)&&d(r,"transform",l),x[0]&1024&&G(r,"hide",!C[10].includes("points")),x[0]&2048){ut=j(C[11]);let D;for(D=0;D<ut.length;D+=1){const Fe=qi(C,ut,D);de[D]?de[D].p(Fe,x):(de[D]=$i(Fe),de[D].c(),de[D].m(o,null))}for(;D<de.length;D+=1)de[D].d(1);de.length=ut.length}if(x[0]&12290&&s!==(s=`translate(${C[1]+C[13]}, ${C[1]+C[12]})`)&&d(o,"transform",s),x[0]&1024&&G(o,"hide",!C[10].includes("numbers")),x[0]&934912){vt=j(C[14].cells);let D;for(D=0;D<vt.length;D+=1){const Fe=Ki(C,vt,D);ue[D]?ue[D].p(Fe,x):(ue[D]=tr(Fe),ue[D].c(),ue[D].m(p,null))}for(;D<ue.length;D+=1)ue[D].d(1);ue.length=vt.length}x[0]&12290&&_!==(_=`translate(${C[1]+C[13]}, ${C[1]+C[12]})`)&&d(p,"transform",_),C[0]?ye?ye.p(C,x):(ye=ar(C),ye.c(),ye.m(f,null)):ye&&(ye.d(1),ye=null),x[0]&12354&&c!==(c=`translate(${((B=C[6])==null?void 0:B.x)||C[1]+C[13]}, ${((ur=C[6])==null?void 0:ur.y)||C[1]+C[12]+20})`)&&d(f,"transform",c),x[0]&1024&&G(f,"hide",!C[10].includes("text")),x[0]&2&&h!==(h=`${C[1]}, 0`)&&X(g,h),x[0]&2&&d(A,"x",C[1]),x[0]&2&&d(P,"cx",C[1]),x[0]&2&&W!==(W=`${C[1]}, ${-C[1]}`)&&X(Z,W),x[0]&2&&M!==(M=C[1]-10)&&d(H,"x",M),x[0]&2&&S!==(S=-C[1]+10)&&d(H,"y",S),x[0]&2&&d(K,"cx",C[1]),x[0]&2&&J!==(J=-C[1])&&d(K,"cy",J),x[0]&2&&Q!==(Q=`-${C[1]}, ${-C[1]}`)&&X(ne,Q),x[0]&2&&ee!==(ee=-C[1]+10)&&d(V,"x",ee),x[0]&2&&Ee!==(Ee=-C[1]+10)&&d(V,"y",Ee),x[0]&2&&ie!==(ie=-C[1])&&d(T,"cx",ie),x[0]&2&&le!==(le=-C[1])&&d(T,"cy",le),x[0]&2&&oe!==(oe=`-${C[1]}, 0`)&&X(je,oe),x[0]&2&&Je!==(Je=-C[1])&&d(re,"x",Je),x[0]&2&&se!==(se=-C[1])&&d(te,"cx",se),x[0]&12290&&ia!==(ia=`translate(${C[1]+C[13]}, ${C[1]+C[12]})`)&&d(u,"transform",ia),x[0]&1024&&G(u,"hide",!C[10].includes("referencePoints")),x[0]&256&&d(a,"width",C[8]),x[0]&512&&d(a,"height",C[9]),x[0]&98304&&ra!==(ra="0 0 "+C[15]+" "+C[16])&&d(a,"viewBox",ra)},i:q,o:q,d(C){C&&O(e),pe(fe,C),pe(ce,C),pe(de,C),pe(ue,C),ye&&ye.d()}}}let gs="5,0 10,2.75 10,8.25 5,11 0,8.25 0,2.75";function Cs(t,e,a){let{data:n=[]}=e,{r:i=300}=e,{rows:r=12}=e,{dotsize:l=5}=e,{padding:o=10}=e,{total_seats:s}=e,{color:p="white"}=e,{font_size:_=12}=e,{arc:f=180}=e,{text_position:c=null}=e,{selectedShape:u="circle"}=e,{displayWidth:v="100%"}=e,{displayHeight:N="100%"}=e,{display:b=["points","text"]}=e,{current_party:y=null}=e,E=[],A=null,h=!1,g=0,P=0,Y=0,H=0,W=0,Z=0;function M(){Array.isArray(o)?o.length===2?(a(12,g=o[0]),a(24,P=o[0]),a(13,Y=o[1]),a(25,H=o[1])):o.length===4&&(a(12,g=o[0]),a(24,P=o[1]),a(13,Y=o[2]),a(25,H=o[3])):(a(12,g=o),a(24,P=o),a(13,Y=o),a(25,H=o))}function S(T){T.data&&!h&&a(0,y=T.data)}function K(T){T.data&&(y&&h&&y.id===T.data.id?(a(0,y=null),h=!1):(a(0,y=T.data),h=!0))}function J(){h||a(0,y=null)}const w=T=>{S(T.site)},V=T=>S(T.site),Q=()=>J(),ne=()=>J(),ee=T=>{K(T.site)},Ee=(T,ie)=>{ie.key==="Enter"&&K(T.site)};return t.$$set=T=>{"data"in T&&a(21,n=T.data),"r"in T&&a(1,i=T.r),"rows"in T&&a(2,r=T.rows),"dotsize"in T&&a(3,l=T.dotsize),"padding"in T&&a(22,o=T.padding),"total_seats"in T&&a(23,s=T.total_seats),"color"in T&&a(4,p=T.color),"font_size"in T&&a(5,_=T.font_size),"arc"in T&&a(20,f=T.arc),"text_position"in T&&a(6,c=T.text_position),"selectedShape"in T&&a(7,u=T.selectedShape),"displayWidth"in T&&a(8,v=T.displayWidth),"displayHeight"in T&&a(9,N=T.displayHeight),"display"in T&&a(10,b=T.display),"current_party"in T&&a(0,y=T.current_party)},t.$$.update=()=>{if(t.$$.dirty[0]&61880326){f<10&&a(20,f=10),f>360&&a(20,f=360),M(),n.sort((ie,le)=>le.count-ie.count),n.reduce((ie,le)=>ie+le.count,0),a(11,E=As(i,r,s,f));let T=0;for(let ie in n)for(let le=0;le<n[ie].count;le++)a(11,E[T].data=n[ie],E),T++;a(14,A=Ns(E)),a(15,W=i*2+Y+H),a(16,Z=i*2+g+P)}},[y,i,r,l,p,_,c,u,v,N,b,E,g,Y,A,W,Z,S,K,J,f,n,o,s,P,H,w,V,Q,ne,ee,Ee]}class Is extends me{constructor(e){super(),he(this,e,Cs,Es,be,{data:21,r:1,rows:2,dotsize:3,padding:22,total_seats:23,color:4,font_size:5,arc:20,text_position:6,selectedShape:7,displayWidth:8,displayHeight:9,display:10,current_party:0},null,[-1,-1])}}const Os={National:400,"Eastern Cape":72,"Free State":30,Gauteng:80,"KwaZulu-Natal":80,Limpopo:64,Mpumalanga:51,"North West":38,"Northern Cape":30,"Western Cape":42};function nr(t,e,a){const n=t.slice();return n[25]=e[a],n}function ir(t,e,a){const n=t.slice();return n[28]=e[a],n}function rr(t){let e,a,n,i,r,l,o,s,p,_,f=j(Ke),c=[];for(let b=0;b<f.length;b+=1)c[b]=lr(ir(t,f,b));function u(b,y){return b[1]==="National Assembly"?Ss:Rs}let v=u(t),N=v(t);return{c(){e=I("div"),a=I("button"),a.textContent="National Assembly",n=F(),i=I("button"),i.textContent="Provincial Legislature",r=F(),l=I("div");for(let b=0;b<c.length;b+=1)c[b].c();o=F(),s=I("div"),N.c(),d(a,"class","electionengine-year-button svelte-1hneubz"),G(a,"active",t[1]==="National Assembly"),d(i,"class","electionengine-year-button svelte-1hneubz"),G(i,"active",t[1]==="Provincial Legislature"),d(e,"class","electionengine-years-buttons"),d(l,"class","electionengine-years-buttons"),d(s,"class","electionengine-years-buttons")},m(b,y){R(b,e,y),m(e,a),m(e,n),m(e,i),R(b,r,y),R(b,l,y);for(let E=0;E<c.length;E+=1)c[E]&&c[E].m(l,null);R(b,o,y),R(b,s,y),N.m(s,null),p||(_=[$(a,"click",t[18]),$(i,"click",t[19])],p=!0)},p(b,y){if(y&2&&G(a,"active",b[1]==="National Assembly"),y&2&&G(i,"active",b[1]==="Provincial Legislature"),y&32769){f=j(Ke);let E;for(E=0;E<f.length;E+=1){const A=ir(b,f,E);c[E]?c[E].p(A,y):(c[E]=lr(A),c[E].c(),c[E].m(l,null))}for(;E<c.length;E+=1)c[E].d(1);c.length=f.length}v===(v=u(b))&&N?N.p(b,y):(N.d(1),N=v(b),N&&(N.c(),N.m(s,null)))},d(b){b&&(O(e),O(r),O(l),O(o),O(s)),pe(c,b),N.d(),p=!1,Te(_)}}}function lr(t){let e,a,n;function i(){return t[20](t[28])}return{c(){e=I("button"),e.textContent=`${t[28]} `,d(e,"class","electionengine-year-button svelte-1hneubz"),G(e,"active",t[0]===t[28])},m(r,l){R(r,e,l),a||(n=$(e,"click",i),a=!0)},p(r,l){t=r,l&1&&G(e,"active",t[0]===t[28])},d(r){r&&O(e),a=!1,n()}}}function Rs(t){let e,a=j(t[13]),n=[];for(let i=0;i<a.length;i+=1)n[i]=or(nr(t,a,i));return{c(){for(let i=0;i<n.length;i+=1)n[i].c();e=Pe()},m(i,r){for(let l=0;l<n.length;l+=1)n[l]&&n[l].m(i,r);R(i,e,r)},p(i,r){if(r&139268){a=j(i[13]);let l;for(l=0;l<a.length;l+=1){const o=nr(i,a,l);n[l]?n[l].p(o,r):(n[l]=or(o),n[l].c(),n[l].m(e.parentNode,e))}for(;l<n.length;l+=1)n[l].d(1);n.length=a.length}},d(i){i&&O(e),pe(n,i)}}}function Ss(t){let e,a,n;return{c(){e=I("button"),e.textContent="National",d(e,"class","electionengine-year-button svelte-1hneubz"),G(e,"active",t[2]==="National")},m(i,r){R(i,e,r),a||(n=$(e,"click",t[21]),a=!0)},p(i,r){r&4&&G(e,"active",i[2]==="National")},d(i){i&&O(e),a=!1,n()}}}function or(t){let e,a,n;function i(){return t[22](t[25])}return{c(){e=I("button"),e.textContent=`${t[25]} `,d(e,"class","electionengine-year-button svelte-1hneubz"),G(e,"active",t[2]===t[25])},m(r,l){R(r,e,l),a||(n=$(e,"click",i),a=!0)},p(r,l){t=r,l&8196&&G(e,"active",t[2]===t[25])},d(r){r&&O(e),a=!1,n()}}}function sr(t){let e,a=t[2]==="National"?`General Asssembly seat allocation for ${t[0]}`:`Provincial Legislature seat allocation for ${t[0]}`,n;return{c(){e=I("div"),n=U(a),d(e,"class","electionengine-title svelte-1hneubz")},m(i,r){R(i,e,r),m(e,n)},p(i,r){r&5&&a!==(a=i[2]==="National"?`General Asssembly seat allocation for ${i[0]}`:`Provincial Legislature seat allocation for ${i[0]}`)&&X(n,a)},d(i){i&&O(e)}}}function pr(t){let e,a;return{c(){e=I("div"),a=U(t[6]),d(e,"class","electionengine-blurb svelte-1hneubz")},m(n,i){R(n,e,i),m(e,a)},p(n,i){i&64&&X(a,n[6])},d(n){n&&O(e)}}}function _r(t){var P,Y,H;let e,a,n,i=((P=t[11])==null?void 0:P.text)+"",r,l,o,s=((Y=t[11])==null?void 0:Y.count)+"",p,_,f,c,u,v,N,b,y,E=(Math.round(t[11].percentage)||"<1")+"",A,h,g=`6px ${(H=t[11])==null?void 0:H.color} solid`;return{c(){e=I("div"),a=I("div"),n=I("div"),r=U(i),l=F(),o=I("div"),p=U(s),_=U(" seats"),f=F(),c=I("div"),u=I("div"),v=I("div"),N=I("div"),b=F(),y=I("span"),A=U(E),h=U("%"),d(n,"class","electionengine-party-name svelte-1hneubz"),d(o,"class","electionengine-seat-count"),d(N,"class","electionengine-tooltip-inner svelte-1hneubz"),ae(N,"width",t[11].percentage+"%"),ae(N,"background",t[11].color),d(v,"class","electionengine-tooltip-outer svelte-1hneubz"),d(u,"class","electionengine-tooltip-range svelte-1hneubz"),d(c,"class","electionengine-tooltip-range-wrapper electionengine-tooltip-tdata svelte-1hneubz"),d(a,"class","electionengine-party-results-information svelte-1hneubz"),ae(a,"border-left",g),d(e,"class","electionengine-party-results-information-container svelte-1hneubz")},m(W,Z){R(W,e,Z),m(e,a),m(a,n),m(n,r),m(a,l),m(a,o),m(o,p),m(o,_),m(a,f),m(a,c),m(c,u),m(u,v),m(v,N),m(c,b),m(c,y),m(y,A),m(y,h)},p(W,Z){var M,S,K;Z&2048&&i!==(i=((M=W[11])==null?void 0:M.text)+"")&&X(r,i),Z&2048&&s!==(s=((S=W[11])==null?void 0:S.count)+"")&&X(p,s),Z&2048&&ae(N,"width",W[11].percentage+"%"),Z&2048&&ae(N,"background",W[11].color),Z&2048&&E!==(E=(Math.round(W[11].percentage)||"<1")+"")&&X(A,E),Z&2048&&g!==(g=`6px ${(K=W[11])==null?void 0:K.color} solid`)&&ae(a,"border-left",g)},d(W){W&&O(e)}}}function Ts(t){let e,a,n,i,r,l,o,s,p,_,f=t[7]&&rr(t),c=t[8]&&sr(t);function u(y){t[23](y)}let v={displayHeight:t[9],data:t[12],rows:t[5],display:t[10],color:Ps,font_size:Ms,selectedShape:Fs,arc:t[14],total_seats:t[4],r:t[3]};t[11]!==void 0&&(v.current_party=t[11]),l=new Is({props:v}),De.push(()=>xe(l,"current_party",u));let N=t[6]&&pr(t),b=t[11]&&_r(t);return{c(){e=I("div"),f&&f.c(),a=F(),c&&c.c(),n=F(),i=I("div"),r=I("div"),Ie(l.$$.fragment),s=F(),N&&N.c(),p=F(),b&&b.c(),d(r,"class","electionengine-hemicycle-container svelte-1hneubz"),d(i,"class","election-engine-hemicycle-section svelte-1hneubz"),d(e,"class","election-engine-hemicycle-app svelte-1hneubz")},m(y,E){R(y,e,E),f&&f.m(e,null),m(e,a),c&&c.m(e,null),m(e,n),m(e,i),m(i,r),Ne(l,r,null),m(i,s),N&&N.m(i,null),m(i,p),b&&b.m(i,null),_=!0},p(y,[E]){y[7]?f?f.p(y,E):(f=rr(y),f.c(),f.m(e,a)):f&&(f.d(1),f=null),y[8]?c?c.p(y,E):(c=sr(y),c.c(),c.m(e,n)):c&&(c.d(1),c=null);const A={};E&512&&(A.displayHeight=y[9]),E&4096&&(A.data=y[12]),E&32&&(A.rows=y[5]),E&1024&&(A.display=y[10]),E&16&&(A.total_seats=y[4]),E&8&&(A.r=y[3]),!o&&E&2048&&(o=!0,A.current_party=y[11],Ue(()=>o=!1)),l.$set(A),y[6]?N?N.p(y,E):(N=pr(y),N.c(),N.m(i,p)):N&&(N.d(1),N=null),y[11]?b?b.p(y,E):(b=_r(y),b.c(),b.m(i,null)):b&&(b.d(1),b=null)},i(y){_||(k(l.$$.fragment,y),_=!0)},o(y){z(l.$$.fragment,y),_=!1},d(y){y&&O(e),f&&f.d(),c&&c.d(),Ae(l),N&&N.d(),b&&b.d()}}}const Ps="black",Ms="20",Fs="hexagon";function Ds(t,e,a){let n=qe.filter(S=>S!=="Out of Country"),{selected_year:i=2024}=e,{selected_election:r="National Assembly"}=e,{selected_region:l="National"}=e,{show_buttons:o=!1}=e,{show_title:s=!0}=e,{displayHeight:p=640}=e,{r:_=300}=e,f,{total_seats:c=400}=e,{rows:u=12}=e,{display:v=["points"]}=e,{blurb:N=null}=e,b,y;Xe(async()=>{a(12,b=await g())});async function E(S){S!==i&&(a(0,i=S),a(12,b=await g()))}async function A(S){S!==r&&(a(1,r=S),a(12,b=await g()))}async function h(S){S!==l&&(a(2,l=S),S==="National"&&a(4,c=400),a(12,b=await g()))}async function g(){a(12,b=[]),l==="National"&&r==="Provincial Legislature"&&a(2,l="Gauteng");const S=await at({year:i,election:r,region:"National"});if(r==="National Assembly"){a(6,N="The 400 seats of the National Assembly are calculated by assigning 200 from the provincial ballot and 200 from the national list. In 2024, the provincial ballot includes independent candidates."),a(2,l="National");const K=S.party_ballot_results.map((J,w)=>({id:J.party_id,text:J.party_name,count:J.seats,color:ze(J.party_abbreviation,w),percentage:J.vote_perc}));return a(4,c=400),a(5,u=13),a(3,_=300),K}else{const J=S.provincial_results.find(w=>w.province_name===l).party_ballot_results.filter(w=>w.seats>0).map((w,V)=>({id:w.party_id,text:w.party_name,count:w.seats,color:ze(w.party_abbreviation,V),percentage:w.vote_perc}));return i===2024?a(4,c=Os[l]):a(4,c=J.reduce((w,V)=>w+V.count,0)),a(6,N=`Each Provincial Legislature has a different number of seats. In ${i}, the ${l} Legislature has ${c} seats.`),a(5,u=Math.ceil(c/15)),a(3,_=200),J}}const P=()=>A("National Assembly"),Y=()=>A("Provincial Legislature"),H=S=>E(S),W=()=>h("National"),Z=S=>h(S);function M(S){f=S,a(11,f)}return t.$$set=S=>{"selected_year"in S&&a(0,i=S.selected_year),"selected_election"in S&&a(1,r=S.selected_election),"selected_region"in S&&a(2,l=S.selected_region),"show_buttons"in S&&a(7,o=S.show_buttons),"show_title"in S&&a(8,s=S.show_title),"displayHeight"in S&&a(9,p=S.displayHeight),"r"in S&&a(3,_=S.r),"total_seats"in S&&a(4,c=S.total_seats),"rows"in S&&a(5,u=S.rows),"display"in S&&a(10,v=S.display),"blurb"in S&&a(6,N=S.blurb)},[i,r,l,_,c,u,N,o,s,p,v,f,b,n,y,E,A,h,P,Y,H,W,Z,M]}let ws=class extends me{constructor(e){super(),he(this,e,Ds,Ts,be,{selected_year:0,selected_election:1,selected_region:2,show_buttons:7,show_title:8,displayHeight:9,r:3,total_seats:4,rows:5,display:10,blurb:6})}};function fr(t){let e,a;return e=new ws({props:{selected_year:t[1],selected_election:t[2],selected_region:t[3]}}),{c(){Ie(e.$$.fragment)},m(n,i){Ne(e,n,i),a=!0},p(n,i){const r={};i&2&&(r.selected_year=n[1]),i&4&&(r.selected_election=n[2]),i&8&&(r.selected_region=n[3]),e.$set(r)},i(n){a||(k(e.$$.fragment,n),a=!0)},o(n){z(e.$$.fragment,n),a=!1},d(n){Ae(e,n)}}}function cr(t){let e,a;return e=new Xo({props:{selected_year:t[1],selected_election:t[2],selected_region:t[3]}}),{c(){Ie(e.$$.fragment)},m(n,i){Ne(e,n,i),a=!0},p(n,i){const r={};i&2&&(r.selected_year=n[1]),i&4&&(r.selected_election=n[2]),i&8&&(r.selected_region=n[3]),e.$set(r)},i(n){a||(k(e.$$.fragment,n),a=!0)},o(n){z(e.$$.fragment,n),a=!1},d(n){Ae(e,n)}}}function dr(t){let e,a;return e=new rs({props:{selected_year:t[1],selected_election:t[2],selected_region:t[3],selected_fields:t[4]}}),{c(){Ie(e.$$.fragment)},m(n,i){Ne(e,n,i),a=!0},p(n,i){const r={};i&2&&(r.selected_year=n[1]),i&4&&(r.selected_election=n[2]),i&8&&(r.selected_region=n[3]),i&16&&(r.selected_fields=n[4]),e.$set(r)},i(n){a||(k(e.$$.fragment,n),a=!0)},o(n){z(e.$$.fragment,n),a=!1},d(n){Ae(e,n)}}}function Ls(t){let e,a,n,i,r=t[0]==="hemicycle"&&fr(t),l=t[0]==="carto"&&cr(t),o=t[0]==="table"&&dr(t);return{c(){r&&r.c(),e=F(),l&&l.c(),a=F(),o&&o.c(),n=Pe()},m(s,p){r&&r.m(s,p),R(s,e,p),l&&l.m(s,p),R(s,a,p),o&&o.m(s,p),R(s,n,p),i=!0},p(s,[p]){s[0]==="hemicycle"?r?(r.p(s,p),p&1&&k(r,1)):(r=fr(s),r.c(),k(r,1),r.m(e.parentNode,e)):r&&(ge(),z(r,1,1,()=>{r=null}),Ce()),s[0]==="carto"?l?(l.p(s,p),p&1&&k(l,1)):(l=cr(s),l.c(),k(l,1),l.m(a.parentNode,a)):l&&(ge(),z(l,1,1,()=>{l=null}),Ce()),s[0]==="table"?o?(o.p(s,p),p&1&&k(o,1)):(o=dr(s),o.c(),k(o,1),o.m(n.parentNode,n)):o&&(ge(),z(o,1,1,()=>{o=null}),Ce())},i(s){i||(k(r),k(l),k(o),i=!0)},o(s){z(r),z(l),z(o),i=!1},d(s){s&&(O(e),O(a),O(n)),r&&r.d(s),l&&l.d(s),o&&o.d(s)}}}function ks(t,e,a){let{visualisation:n="hemicycle"}=e,{selected_year:i=2024}=e,{selected_election:r="National Assembly"}=e,{selected_region:l="Gauteng"}=e,{selected_fields:o=["Party","Votes","Seats"]}=e;return Xe(async()=>{}),t.$$set=s=>{"visualisation"in s&&a(0,n=s.visualisation),"selected_year"in s&&a(1,i=s.selected_year),"selected_election"in s&&a(2,r=s.selected_election),"selected_region"in s&&a(3,l=s.selected_region),"selected_fields"in s&&a(4,o=s.selected_fields)},[n,i,r,l,o]}class Gs extends me{constructor(e){super(),he(this,e,ks,Ls,be,{visualisation:0,selected_year:1,selected_election:2,selected_region:3,selected_fields:4})}}jQuery(()=>{document.querySelectorAll(".wp-block-tenlayer-election-engine").forEach(e=>{var n;let a={id:e.id,visualisation:jQuery(e).data("visualisation"),selected_year:jQuery(e).data("selected_year"),selected_election:jQuery(e).data("selected_election"),selected_region:jQuery(e).data("selected_region"),selected_fields:(n=jQuery(e).data("selected_fields"))==null?void 0:n.split(",").map(i=>i.trim())};new Gs({target:e,props:a})})})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
